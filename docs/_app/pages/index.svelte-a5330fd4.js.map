{"version":3,"file":"index.svelte-a5330fd4.js","sources":["../../../../../src/lib/utils/index.ts","../../../../../src/lib/Menu.svelte","../../../../../../panzoom-node/src/lib/pinchZoom.ts","../../../../../../panzoom-node/src/lib/pzoom.ts","../../../../../src/lib/stores.js","../../../../../src/lib/ResizeHandle.svelte","../../../../../src/lib/directives.js","../../../../../src/lib/EditableText.svelte","../../../../../src/lib/config/index.js","../../../../../src/lib/ColorPicker.svelte","../../../../../src/lib/ContextMenu.svelte","../../../../../src/lib/Container.svelte","../../../../../src/lib/Sketch.svelte","../../../../../src/lib/App.svelte","../../../../../src/routes/index.svelte"],"sourcesContent":["import { nanoid } from 'nanoid';\r\nimport { customAlphabet } from 'nanoid/non-secure';\r\n\r\nexport function safeid(n: number = 16): string {\r\n\treturn customAlphabet('abcdefghijklmnopqrztuvwxyz1234567890', n)();\r\n}\r\n\r\nexport default safeid;\r\n\r\nexport function createNewNode(params: type) {\r\n\tconst newNode = {\r\n\t\tname: 'Name',\r\n\t\tid: safeid(),\r\n\t\tx: 10,\r\n\t\ty: 10,\r\n\t\tstyle: {\r\n\t\t\tbackgroundColor: '#fee9004b',\r\n\t\t\twidth: 120,\r\n\t\t\theight: 120,\r\n\t\t\tleft: 10,\r\n\t\t\ttop: 10\r\n\t\t},\r\n\t\t// component: DragHandles,\r\n\t\tprops: [],\r\n\t\tchildren: []\r\n\t};\r\n\r\n\treturn newNode;\r\n}\r\n","<script>\r\n\timport RangeSlider from 'svelte-range-slider-pips';\r\n\timport { createNewNode } from './utils';\r\n\timport { asDroppable } from 'svelte-drag-and-drop-actions';\r\n\timport { safeid } from '$lib/utils';\r\n\timport PointerTracker from 'pointer-tracker';\r\n\timport { onMount } from 'svelte';\r\n\r\n\texport let children;\r\n\texport let scale = 1;\r\n\r\n\tlet pallette;\r\n\r\n\tonMount(async () => {\r\n\t\t// Watch for pointers\r\n\t\tconst pointerTracker = new PointerTracker(pallette, {\r\n\t\t\tstart: (pointer, event) => {\r\n\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t// event.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tfunction handleAddNode(event) {\r\n\t\tconst newNode = createNewNode();\r\n\t\tchildren.push(newNode);\r\n\t\tchildren = children;\r\n\t}\r\n\r\n\tlet newContainer = createNewNode();\r\n</script>\r\n\r\n<div class=\"pallette\" bind:this={pallette}>\r\n\tScale {scale}\r\n\t<div\r\n\t\tclass=\"yellow\"\r\n\t\tuse:asDroppable={{\r\n\t\t\tExtras: { newContainer },\r\n\t\t\tOperations: 'copy',\r\n\t\t\tDataToOffer: { 'item/plain': '' }\r\n\t\t}}\r\n\t>\r\n\t\t+ Drag Me\r\n\t</div>\r\n\t<!-- <button on:click={handleAddGridItem}>Add Grid Item</button>\r\n\t<button on:click={handleAddMapItem}>Add Map</button>\r\n\t<button on:click={handleAddListItem}>Add List</button> -->\r\n</div>\r\n\r\n<style>\r\n\t.yellow {\r\n\t\tbackground-color: #fee9004b;\r\n\t\twidth: 10em;\r\n\t\theight: auto;\r\n\t\tline-height: 2em;\r\n\t\tcursor: default;\r\n\t\ttext-align: center;\r\n\t\tmargin: 0.5em;\r\n\t\tpadding: 0 0.5em;\r\n\t}\r\n\t.pallette {\r\n\t\tbackground: #fafafac7;\r\n\t\tposition: absolute;\r\n\t\tbottom: 0em;\r\n\t\tbox-sizing: border-box;\r\n\t\twidth: 99%;\r\n\t\tz-index: 999;\r\n\t}\r\n\r\n\t/* #reverse-pips .rangePips {\r\n\t\tbottom: auto;\r\n\t\ttop: -1em;\r\n\t}\r\n\t#reverse-pips .pip {\r\n\t\tbackground: rgb(198, 187, 224);\r\n\t\ttop: auto;\r\n\t\tbottom: 0.25em;\r\n\t\twidth: 2px;\r\n\t\ttransform: translateX(-1px);\r\n\t\ttransition-duration: 0.5s;\r\n\t\topacity: 0.7;\r\n\t}\r\n\t#reverse-pips .pip:nth-child(5n + 1) {\r\n\t\theight: 0.8em;\r\n\t\topacity: 0.9;\r\n\t}\r\n\t#reverse-pips .pip:nth-child(5n),\r\n\t#reverse-pips .pip:nth-child(5n + 2) {\r\n\t\theight: 0.65em;\r\n\t}\r\n\t#reverse-pips .pip.selected {\r\n\t\tbackground: rgb(255, 0, 157);\r\n\t\ttransition-duration: 0.05s;\r\n\t\topacity: 1;\r\n\t} */\r\n\r\n\t:global(#reverse-pips .rangePips) {\r\n\t\tbottom: auto;\r\n\t\ttop: -1em;\r\n\t}\r\n\t:global(#reverse-pips .pip) {\r\n\t\tbackground: rgb(198, 187, 224);\r\n\t\ttop: auto;\r\n\t\tbottom: 0.25em;\r\n\t\twidth: 2px;\r\n\t\ttransform: translateX(-1px);\r\n\t\ttransition-duration: 0.5s;\r\n\t\topacity: 0.7;\r\n\t}\r\n\t:global(#reverse-pips .pip:nth-child(5n + 1)) {\r\n\t\theight: 0.8em;\r\n\t\topacity: 0.9;\r\n\t}\r\n\r\n\t:global(#reverse-pips .pip:nth-child(5n), #reverse-pips .pip:nth-child(5n + 2)) {\r\n\t\theight: 0.65em;\r\n\t}\r\n\r\n\t:global(#reverse-pips .pip.selected) {\r\n\t\tbackground: #0bb113;\r\n\t\ttransition-duration: 0.05s;\r\n\t\topacity: 1;\r\n\t}\r\n</style>\r\n","// inspired by https://github.com/GoogleChromeLabs/pinch-zoom/blob/master/lib/pinch-zoom.ts\r\n\r\nimport PointerTracker from 'pointer-tracker';\r\nimport type { Pointer } from 'pointer-tracker'; // separate type out to own line\r\nimport './styles.css';\r\n\r\ninterface Point {\r\n\tclientX: number;\r\n\tclientY: number;\r\n}\r\n\r\ninterface ChangeOptions {\r\n\t/**\r\n\t * Fire a 'change' event if values are different to current values\r\n\t */\r\n\tallowChangeEvent?: boolean;\r\n}\r\n\r\ninterface ApplyChangeOpts extends ChangeOptions {\r\n\tpanX?: number;\r\n\tpanY?: number;\r\n\tscaleDiff?: number;\r\n\toriginX?: number;\r\n\toriginY?: number;\r\n}\r\n\r\ninterface SetTransformOpts extends ChangeOptions {\r\n\tscale?: number;\r\n\tx?: number;\r\n\ty?: number;\r\n}\r\n\r\ntype ScaleRelativeToValues = 'container' | 'content';\r\n\r\nconst minScaleAttr = 'min-scale';\r\n\r\nexport interface ScaleToOpts extends ChangeOptions {\r\n\t/** Transform origin. Can be a number, or string percent, eg \"50%\" */\r\n\toriginX?: number | string;\r\n\t/** Transform origin. Can be a number, or string percent, eg \"50%\" */\r\n\toriginY?: number | string;\r\n\t/** Should the transform origin be relative to the container, or content? */\r\n\trelativeTo?: ScaleRelativeToValues;\r\n}\r\n\r\nfunction getDistance(a: Point, b?: Point): number {\r\n\tif (!b) return 0;\r\n\treturn Math.sqrt((b.clientX - a.clientX) ** 2 + (b.clientY - a.clientY) ** 2);\r\n}\r\n\r\nfunction getMidpoint(a: Point, b?: Point): Point {\r\n\tif (!b) return a;\r\n\r\n\treturn {\r\n\t\tclientX: (a.clientX + b.clientX) / 2,\r\n\t\tclientY: (a.clientY + b.clientY) / 2\r\n\t};\r\n}\r\n\r\nfunction getAbsoluteValue(value: string | number, max: number): number {\r\n\tif (typeof value === 'number') return value;\r\n\r\n\tif (value.trimRight().endsWith('%')) {\r\n\t\treturn (max * parseFloat(value)) / 100;\r\n\t}\r\n\treturn parseFloat(value);\r\n}\r\n\r\nfunction createMatrix(): DOMMatrix {\r\n\treturn new DOMMatrix();\r\n}\r\n\r\nfunction createPoint(): DOMPoint {\r\n\treturn new DOMPoint();\r\n}\r\n\r\nconst MIN_SCALE = 0.01;\r\n\r\nexport default class PinchZoom {\r\n\t// The element that we'll transform.\r\n\t// Ideally this would be shadow DOM, but we don't have the browser\r\n\t// support yet.\r\n\tprivate _parentEl?: Element;\r\n\t// Current transform.\r\n\tprivate _transform: DOMMatrix = createMatrix();\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [minScaleAttr];\r\n\t}\r\n\r\n\tconstructor(node: HTMLElement) {\r\n\t\tthis.node = node;\r\n\t\tthis._parentEl = this.node.parentElement || document.body;\r\n\r\n\t\t// Watch for children changes.\r\n\t\t// Note this won't fire for initial contents,\r\n\t\t// so _stageElChange is also called in connectedCallback.\r\n\t\tnew MutationObserver(() => this._stageElChange()).observe(this.node, { childList: true });\r\n\r\n\t\t// Watch for pointers\r\n\t\tconst pointerTracker: PointerTracker = new PointerTracker(this._parentEl, {\r\n\t\t\tstart: (pointer, event) => {\r\n\t\t\t\t// We only want to track 2 pointers at most\r\n\t\t\t\tif (pointerTracker.currentPointers.length === 2 || !this._parentEl) return false;\r\n\t\t\t\t// if (this._parentEl !== event.target) return false; // prevent start on child elements?\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\tmove: (previousPointers) => {\r\n\t\t\t\tthis._onPointerMove(previousPointers, pointerTracker.currentPointers);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._parentEl.addEventListener('wheel', (event) => this._onWheel(event));\r\n\t}\r\n\r\n\tattributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n\t\tif (name === minScaleAttr) {\r\n\t\t\tif (this.scale < this.minScale) {\r\n\t\t\t\tthis.setTransform({ scale: this.minScale });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget minScale(): number {\r\n\t\tconst attrValue = this.node.getAttribute(minScaleAttr);\r\n\t\tif (!attrValue) return MIN_SCALE;\r\n\r\n\t\tconst value = parseFloat(attrValue);\r\n\t\tif (Number.isFinite(value)) return Math.max(MIN_SCALE, value);\r\n\r\n\t\treturn MIN_SCALE;\r\n\t}\r\n\r\n\tset minScale(value: number) {\r\n\t\tthis.node.setAttribute(minScaleAttr, String(value));\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t\tthis._stageElChange();\r\n\t}\r\n\r\n\tget x() {\r\n\t\treturn this._transform.e;\r\n\t}\r\n\r\n\tget y() {\r\n\t\treturn this._transform.f;\r\n\t}\r\n\r\n\tget scale() {\r\n\t\treturn this._transform.a;\r\n\t}\r\n\r\n\t/**\r\n\t * Change the scale, adjusting x/y by a given transform origin.\r\n\t */\r\n\tscaleTo(scale: number, opts: ScaleToOpts = {}) {\r\n\t\tlet { originX = 0, originY = 0 } = opts;\r\n\r\n\t\tconst { relativeTo = 'content', allowChangeEvent = false } = opts;\r\n\r\n\t\tconst relativeToEl = relativeTo === 'content' ? this._parentEl : this.node;\r\n\r\n\t\t// No content element? Fall back to just setting scale\r\n\t\tif (!relativeToEl || !this._parentEl) {\r\n\t\t\tthis.setTransform({ scale, allowChangeEvent });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst rect = relativeToEl.getBoundingClientRect();\r\n\t\toriginX = getAbsoluteValue(originX, rect.width);\r\n\t\toriginY = getAbsoluteValue(originY, rect.height);\r\n\r\n\t\tif (relativeTo === 'content') {\r\n\t\t\toriginX += this.x;\r\n\t\t\toriginY += this.y;\r\n\t\t} else {\r\n\t\t\tconst currentRect = this._parentEl.getBoundingClientRect();\r\n\t\t\toriginX -= currentRect.left;\r\n\t\t\toriginY -= currentRect.top;\r\n\t\t}\r\n\r\n\t\tthis._applyChange({\r\n\t\t\tallowChangeEvent,\r\n\t\t\toriginX,\r\n\t\t\toriginY,\r\n\t\t\tscaleDiff: scale / this.scale\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the stage with a given scale/x/y.\r\n\t */\r\n\tsetTransform(opts: SetTransformOpts = {}) {\r\n\t\tconst { scale = this.scale, allowChangeEvent = false } = opts;\r\n\r\n\t\tlet { x = this.x, y = this.y } = opts;\r\n\r\n\t\t// If we don't have an element to position, just set the value as given.\r\n\t\t// We'll check bounds later.\r\n\t\tif (!this._parentEl) {\r\n\t\t\tthis._updateTransform(scale, x, y, allowChangeEvent);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Get current layout\r\n\t\tconst thisBounds = this.node.getBoundingClientRect();\r\n\t\tconst parentElBounds = this._parentEl.getBoundingClientRect();\r\n\r\n\t\t// Not displayed. May be disconnected or display:none.\r\n\t\t// Just take the values, and we'll check bounds later.\r\n\t\tif (!thisBounds.width || !thisBounds.height) {\r\n\t\t\tthis._updateTransform(scale, x, y, allowChangeEvent);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Create points for _parentEl.\r\n\t\tlet topLeft = createPoint();\r\n\t\ttopLeft.x = parentElBounds.left - thisBounds.left;\r\n\t\ttopLeft.y = parentElBounds.top - thisBounds.top;\r\n\t\tlet bottomRight = createPoint();\r\n\t\tbottomRight.x = parentElBounds.width + topLeft.x;\r\n\t\tbottomRight.y = parentElBounds.height + topLeft.y;\r\n\r\n\t\t// Calculate the intended position of _parentEl.\r\n\t\tconst matrix = createMatrix()\r\n\t\t\t.translate(x, y)\r\n\t\t\t.scale(scale)\r\n\t\t\t// Undo current transform\r\n\t\t\t.multiply(this._transform.inverse());\r\n\r\n\t\ttopLeft = topLeft.matrixTransform(matrix);\r\n\t\tbottomRight = bottomRight.matrixTransform(matrix);\r\n\r\n\t\t// Ensure _parentEl can't move beyond out-of-bounds.\r\n\t\t// Correct for x\r\n\t\t// if (topLeft.x > thisBounds.width) {\r\n\t\t// \tx += thisBounds.width - topLeft.x;\r\n\t\t// } else if (bottomRight.x < 0) {\r\n\t\t// \tx += -bottomRight.x;\r\n\t\t// }\r\n\r\n\t\t// Correct for y\r\n\t\t// if (topLeft.y > thisBounds.height) {\r\n\t\t// \ty += thisBounds.height - topLeft.y;\r\n\t\t// } else if (bottomRight.y < 0) {\r\n\t\t// \ty += -bottomRight.y;\r\n\t\t// }\r\n\r\n\t\tthis._updateTransform(scale, x, y, allowChangeEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * Update transform values without checking bounds. This is only called in setTransform.\r\n\t */\r\n\tprivate _updateTransform(scale: number, x: number, y: number, allowChangeEvent: boolean) {\r\n\t\t// Avoid scaling to zero\r\n\t\tif (scale < this.minScale) return;\r\n\r\n\t\t// Return if there's no change\r\n\t\tif (scale === this.scale && x === this.x && y === this.y) return;\r\n\r\n\t\tthis._transform.e = x;\r\n\t\tthis._transform.f = y;\r\n\t\tthis._transform.d = this._transform.a = scale;\r\n\r\n\t\t// this.node.style.setProperty('--x', this.x + 'px');\r\n\t\t// this.node.style.setProperty('--y', this.y + 'px');\r\n\t\t// this.node.style.setProperty('--scale', this.scale + '');\r\n\r\n\t\tthis.node.style.transform = `translate(${x}px,${y}px) scale(${scale})`;\r\n\r\n\t\tif (allowChangeEvent) {\r\n\t\t\tconst event = new Event('change', { bubbles: true });\r\n\t\t\tthis.node.dispatchEvent(event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the direct children of this element change.\r\n\t * Until we have have shadow dom support across the board, we\r\n\t * require a single element to be the child of <pinch-zoom>, and\r\n\t * that's the element we pan/scale.\r\n\t */\r\n\tprivate _stageElChange() {\r\n\t\tthis._parentEl = this.node.parentElement || document.body;\r\n\r\n\t\t// Do a bounds check\r\n\t\tthis.setTransform({ allowChangeEvent: true });\r\n\t}\r\n\r\n\tprivate _onWheel(event: WheelEvent) {\r\n\t\tif (!this._parentEl) return;\r\n\t\t// if (this._parentEl !== event.target) return;\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst currentRect = this._parentEl.getBoundingClientRect();\r\n\t\tlet { deltaY } = event;\r\n\t\tconst { ctrlKey, deltaMode } = event;\r\n\r\n\t\tif (deltaMode === 1) {\r\n\t\t\t// 1 is \"lines\", 0 is \"pixels\"\r\n\t\t\t// Firefox uses \"lines\" for some types of mouse\r\n\t\t\tdeltaY *= 15;\r\n\t\t}\r\n\r\n\t\t// ctrlKey is true when pinch-zooming on a trackpad.\r\n\t\tconst divisor = ctrlKey ? 200 : 600;\r\n\t\tconst scaleDiff = 1 - deltaY / divisor;\r\n\r\n\t\tthis._applyChange({\r\n\t\t\tscaleDiff,\r\n\t\t\toriginX: event.pageX - this._parentEl.offsetLeft - this._parentEl.clientWidth / 2,\r\n\t\t\toriginY: event.pageY - this._parentEl.offsetTop - this._parentEl.clientHeight / 2,\r\n\t\t\tallowChangeEvent: true\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _onPointerMove(previousPointers: Pointer[], currentPointers: Pointer[]) {\r\n\t\tif (!this._parentEl) return;\r\n\r\n\t\t// Combine next points with previous points\r\n\t\tconst currentRect = this._parentEl.getBoundingClientRect();\r\n\r\n\t\t// For calculating panning movement\r\n\t\tconst prevMidpoint = getMidpoint(previousPointers[0], previousPointers[1]);\r\n\t\tconst newMidpoint = getMidpoint(currentPointers[0], currentPointers[1]);\r\n\r\n\t\t// Midpoint within the element\r\n\t\tconst originX = prevMidpoint.clientX - currentRect.left;\r\n\t\tconst originY = prevMidpoint.clientY - currentRect.top;\r\n\r\n\t\t// Calculate the desired change in scale\r\n\t\tconst prevDistance = getDistance(previousPointers[0], previousPointers[1]);\r\n\t\tconst newDistance = getDistance(currentPointers[0], currentPointers[1]);\r\n\t\tconst scaleDiff = prevDistance ? newDistance / prevDistance : 1;\r\n\r\n\t\tthis._applyChange({\r\n\t\t\toriginX,\r\n\t\t\toriginY,\r\n\t\t\tscaleDiff,\r\n\t\t\tpanX: newMidpoint.clientX - prevMidpoint.clientX,\r\n\t\t\tpanY: newMidpoint.clientY - prevMidpoint.clientY,\r\n\t\t\tallowChangeEvent: true\r\n\t\t});\r\n\t}\r\n\r\n\t/** Transform the view & fire a change event */\r\n\tprivate _applyChange(opts: ApplyChangeOpts = {}) {\r\n\t\tconst {\r\n\t\t\tpanX = 0,\r\n\t\t\tpanY = 0,\r\n\t\t\toriginX = 0,\r\n\t\t\toriginY = 0,\r\n\t\t\tscaleDiff = 1,\r\n\t\t\tallowChangeEvent = false\r\n\t\t} = opts;\r\n\r\n\t\tconst matrix = createMatrix()\r\n\t\t\t// Translate according to panning.\r\n\t\t\t.translate(panX, panY)\r\n\t\t\t// Scale about the origin.\r\n\t\t\t.translate(originX, originY)\r\n\t\t\t// Apply current translate\r\n\t\t\t// .translate(this.x, this.y) // moved to line below vvv\r\n\t\t\t.scale(scaleDiff)\r\n\t\t\t.translate(-originX, -originY)\r\n\t\t\t// Apply current transform.\r\n\t\t\t.multiply(this._transform);\r\n\r\n\t\t// Convert the transform into basic translate & scale.\r\n\t\tthis.setTransform({\r\n\t\t\tallowChangeEvent,\r\n\t\t\tscale: matrix.a,\r\n\t\t\tx: matrix.e,\r\n\t\t\ty: matrix.f\r\n\t\t});\r\n\t}\r\n}\r\n","import pinchZoom from './pinchZoom';\r\n\r\nexport const pzoom = (node, params = {}) => {\r\n\tlet container = node.parentElement || document.body;\r\n\r\n\t// ensure touch and select action defaults are disable\r\n\tcontainer.style['touch-action'] = 'none';\r\n\tcontainer.style['user-select'] = 'none';\r\n\tcontainer.style['overflow'] = 'hidden';\r\n\tcontainer.style['position'] = 'relative';\r\n\r\n\tnode.style['touch-action'] = 'none';\r\n\tnode.style['user-select'] = 'none';\r\n\tnode.style['position'] = 'absolute';\r\n\r\n\t// node.style['transform'] = 'translate(var(--x), var(--y)) scale(var(--scale))';\r\n\t// node.style['transform-origin'] = '0 0';\r\n\t// node.style['will-change'] = 'transform';\r\n\r\n\tnew pinchZoom(node as HTMLElement);\r\n};\r\n","import { writable } from 'svelte/store';\r\n\r\nexport const scale = writable({ value: 1 });\r\nexport const selected = writable(null);\r\n","<script lang=\"ts\">\r\n\timport PointerTracker from 'pointer-tracker';\r\n\timport { onMount } from 'svelte';\r\n\r\n\timport { scale } from './stores.js';\r\n\r\n\texport let x;\r\n\texport let y;\r\n\texport let width;\r\n\texport let height;\r\n\r\n\texport let maxFrameHeight = 2500;\r\n\texport let maxFrameWidth = 2500;\r\n\texport let minFrameHeight = 40;\r\n\texport let minFrameWidth = 40;\r\n\r\n\texport let arenaWidth;\r\n\texport let arenaHeight;\r\n\r\n\texport let direction;\r\n\texport let isDragging = false;\r\n\r\n\texport let grid;\r\n\r\n\tconst isPointerEvent = (event: any): event is PointerEvent => 'pointerId' in event;\r\n\r\n\tlet handleEl;\r\n\tlet size = '1em';\r\n\tlet handleWidth = 8;\r\n\tlet handleHeight = 8;\r\n\r\n\t$: left = handleX(direction, x, width);\r\n\t$: top = handleY(direction, y, height);\r\n\r\n\tonMount(() => {\r\n\t\t// ask the browser what the px size is based on the --size in em\r\n\t\thandleWidth = handleEl ? parseFloat(getComputedStyle(handleEl).width.replace('px', '')) : 8;\r\n\t\thandleHeight = handleEl ? parseFloat(getComputedStyle(handleEl).height.replace('px', '')) : 8;\r\n\r\n\t\t// Watch for pointers\r\n\t\tconst pointerTracker = new PointerTracker(handleEl, {\r\n\t\t\tstart: (pointer, event) => {\r\n\t\t\t\t// We only want to track 2 pointers at most\r\n\r\n\t\t\t\tif (pointerTracker.currentPointers.length === 2) return false;\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\tmove: (previousPointers, changedPointers, event) => {\r\n\t\t\t\tif (!isPointerEvent(event)) return;\r\n\t\t\t\tlet dx = event.clientX - previousPointers[0].clientX;\r\n\t\t\t\tlet dy = event.clientY - previousPointers[0].clientY;\r\n\t\t\t\tdragHandle(event.clientX, event.clientY, dx, dy);\r\n\t\t\t},\r\n\t\t\tend: (pointer, event, cancelled) => {\r\n\t\t\t\tonDragEnd();\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tlet cursor =\r\n\t\tdirection == 'nw' || direction == 'se'\r\n\t\t\t? 'nwse-resize'\r\n\t\t\t: direction == 'n' || direction == 's'\r\n\t\t\t? 'ns-resize'\r\n\t\t\t: direction == 'ne' || direction == 'sw'\r\n\t\t\t? 'nesw-resize'\r\n\t\t\t: 'ew-resize';\r\n\r\n\t// handle positions\r\n\tfunction handleX(direction, x, width) {\r\n\t\t// extra arguments for reactivity\r\n\t\tswitch (direction) {\r\n\t\t\tcase 'nw':\r\n\t\t\tcase 'w':\r\n\t\t\tcase 'sw':\r\n\t\t\t\treturn x - handleWidth; // x - handleWidth;\r\n\t\t\tcase 'n':\r\n\t\t\tcase 's':\r\n\t\t\t\treturn x + width / 2;\r\n\t\t\tcase 'ne':\r\n\t\t\tcase 'e':\r\n\t\t\tcase 'se':\r\n\t\t\t\treturn x + width + handleWidth;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleY(direction, y, height) {\r\n\t\tswitch (direction) {\r\n\t\t\tcase 'nw':\r\n\t\t\tcase 'n':\r\n\t\t\tcase 'ne':\r\n\t\t\t\treturn y - handleHeight;\r\n\t\t\tcase 'e':\r\n\t\t\tcase 'w':\r\n\t\t\t\treturn y + height / 2 - handleHeight / 2;\r\n\t\t\tcase 'sw':\r\n\t\t\tcase 's':\r\n\t\t\tcase 'se':\r\n\t\t\t\treturn y + height + handleHeight / 2;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction dragHandle(_x, _y, dx, dy) {\r\n\t\tswitch (direction) {\r\n\t\t\tcase 'nw':\r\n\t\t\tcase 'w':\r\n\t\t\tcase 'sw':\r\n\t\t\t\tx = Math.max(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tx + width - maxFrameWidth,\r\n\t\t\t\t\tMath.min(x + width - minFrameWidth, arenaWidth, x + dx / $scale.value)\r\n\t\t\t\t);\r\n\t\t\t\twidth = width - dx / $scale.value;\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ne':\r\n\t\t\tcase 'e':\r\n\t\t\tcase 'se':\r\n\t\t\t\twidth =\r\n\t\t\t\t\tMath.max(\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\tx + minFrameWidth,\r\n\t\t\t\t\t\tMath.min(x + maxFrameWidth, arenaWidth, x + width + dx / $scale.value)\r\n\t\t\t\t\t) - x;\r\n\t\t}\r\n\r\n\t\tswitch (direction) {\r\n\t\t\tcase 'nw':\r\n\t\t\tcase 'n':\r\n\t\t\tcase 'ne':\r\n\t\t\t\ty = Math.max(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\ty + height - maxFrameHeight,\r\n\t\t\t\t\tMath.min(y + height - minFrameHeight, arenaHeight, y + dy / $scale.value)\r\n\t\t\t\t);\r\n\t\t\t\theight = height - dy / $scale.value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sw':\r\n\t\t\tcase 's':\r\n\t\t\tcase 'se':\r\n\t\t\t\theight =\r\n\t\t\t\t\tMath.max(\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\ty + minFrameHeight,\r\n\t\t\t\t\t\tMath.min(y + maxFrameHeight, arenaHeight, y + height + dy / $scale.value)\r\n\t\t\t\t\t) - y;\r\n\t\t}\r\n\t}\r\n\tfunction onDragEnd() {\r\n\t\tisDragging = false;\r\n\t\tif (grid) {\r\n\t\t\tx = Math.floor(x / grid) * grid;\r\n\t\t\ty = Math.floor(y / grid) * grid;\r\n\t\t\twidth = Math.floor(width / grid) * grid;\r\n\t\t\theight = Math.floor(height / grid) * grid;\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<div\r\n\tbind:this={handleEl}\r\n\tclass=\"resize-handle {direction}\"\r\n\tstyle=\"--size: {size}; left:{left}px; top:{top}px; cursor: {cursor};\"\r\n/>\r\n\r\n<style>\r\n\t.resize-handle {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\twidth: var(--size);\r\n\t\theight: var(--size);\r\n\t\tborder: solid 1px rgba(200, 200, 200, 1);\r\n\t\tborder-radius: 50%;\r\n\t\tbackground: rgb(255, 255, 255);\r\n\t}\r\n</style>\r\n","export function clickOutside(node, { enabled: initialEnabled, handleUnselect }) {\r\n\tconst handleOutsideClick = ({ target }) => {\r\n\t\tif (node !== target && node.parentElement != target.parentElement && !node.contains(target)) {\r\n\t\t\thandleUnselect();\r\n\t\t}\r\n\t};\r\n\r\n\tfunction update({ enabled }) {\r\n\t\tif (enabled) {\r\n\t\t\twindow.addEventListener('click', handleOutsideClick);\r\n\t\t} else {\r\n\t\t\twindow.removeEventListener('click', handleOutsideClick);\r\n\t\t}\r\n\t}\r\n\r\n\tupdate({ enabled: initialEnabled });\r\n\treturn {\r\n\t\tupdate,\r\n\t\tdestroy() {\r\n\t\t\twindow.removeEventListener('click', handleOutsideClick);\r\n\t\t}\r\n\t};\r\n}\r\n","<script>\r\n\timport { createEventDispatcher } from 'svelte';\r\n\timport { tick } from 'svelte';\r\n\t// Props\r\n\texport let value = '';\r\n\texport let type = 'text';\r\n\texport let placeholder = '';\r\n\texport let labelClasses = '';\r\n\r\n\tlet offsetWidth;\r\n\tlet editing = false;\r\n\tlet inputEl;\r\n\tlet label = value; // init\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\t// Computed\r\n\t// $: isText = type === 'text';\r\n\t// $: isNumber = type === 'number';\r\n\t// $: if (isNumber) {\r\n\t// \tlabel = value === '' ? placeholder : value;\r\n\t// } else if (isText) {\r\n\t// \tlabel = value ? value : placeholder;\r\n\t// }\r\n\r\n\tasync function toggle(event) {\r\n\t\tediting = !editing;\r\n\t\tif (editing) {\r\n\t\t\tconsole.log('toggle editing');\r\n\r\n\t\t\tawait tick();\r\n\t\t\tinputEl.focus();\r\n\t\t\t// inputEl.setSelectionRange(0, label.length);\r\n\r\n\t\t\tlet range = document.createRange();\r\n\t\t\tconsole.log({ inputEl });\r\n\t\t\trange.setStart(inputEl.firstChild, 0); // 6 is the offset of \"world\" within \"Hello world\"\r\n\t\t\trange.setEnd(inputEl.firstChild, inputEl.firstChild.length); // 7 is the length of \"this is\"\r\n\t\t\tvar sel = window.getSelection();\r\n\t\t\tsel.removeAllRanges();\r\n\t\t\tsel.addRange(range);\r\n\t\t} else {\r\n\t\t\tvalue = label; // finalize, save to db\r\n\t\t\tdispatch('doneEditing');\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleEnter = (e) => {\r\n\t\tconsole.log('checking keyup');\r\n\t\tif (e.keyCode === 13) {\r\n\t\t\te.preventDefault();\r\n\t\t\tinputEl.blur();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleBlur = (_) => {\r\n\t\tif (value != '' && value != null) toggle();\r\n\t\telse value = 'Enter Value';\r\n\t};\r\n</script>\r\n\r\n<div bind:offsetWidth>\r\n\t{#if editing}\r\n\t\t<span\r\n\t\t\tcontenteditable\r\n\t\t\tclass={labelClasses}\r\n\t\t\ton:keydown={handleEnter}\r\n\t\t\ton:blur={handleBlur}\r\n\t\t\tbind:this={inputEl}\r\n\t\t\tbind:innerHTML={label}\r\n\t\t>\r\n\t\t\t{label}\r\n\t\t</span>\r\n\t{:else}\r\n\t\t<div class={labelClasses} on:input={toggle} on:dblclick={toggle} bind:this={inputEl}>\r\n\t\t\t{@html label}\r\n\t\t</div>\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\tdiv {\r\n\t\tdisplay: inline-block;\r\n\t\twidth: 100%;\r\n\t\theight: auto;\r\n\t}\r\n</style>\r\n","export const colors = [\r\n\t'#63B75A4B',\r\n\t'#FEE9004B',\r\n\t'#ff003b4b',\r\n\t'#69f5dc4B',\r\n\t'#FF9D484B',\r\n\t'#7a00ff4B',\r\n\t'#ff14f84b',\r\n\t'#376bff4b'\r\n];\r\n","<script>\r\n\timport { colors } from '$lib/config';\r\n\texport let backgroundColor = '#fee9004b';\r\n\r\n\tfunction handleClick(color) {\r\n\t\tbackgroundColor = color;\r\n\t}\r\n</script>\r\n\r\n<main>\r\n\t{#if backgroundColor && colors}\r\n\t\t{#each colors as color}\r\n\t\t\t<div\r\n\t\t\t\tclass=\"colorOption\"\r\n\t\t\t\ton:click={(e) => handleClick(color)}\r\n\t\t\t\tstyle=\"background-color: {color};\"\r\n\t\t\t/>\r\n\t\t{/each}\r\n\t{/if}\r\n</main>\r\n\r\n<style>\r\n\t.colorOption {\r\n\t\theight: 20px;\r\n\t\twidth: 20px;\r\n\t}\r\n\tmain {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: flex-start;\r\n\t\theight: 170px;\r\n\t\tbackground-color: var(--bgColor);\r\n\t\tz-index: 99;\r\n\t\tflex-direction: column;\r\n\t\tflex-wrap: wrap;\r\n\t\talign-content: flex-start;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport ColorPicker from './ColorPicker.svelte';\r\n\r\n\texport let node;\r\n\r\n\tlet offsetWidth;\r\n\tlet backgroundColor = node?.style?.backgroundColor || '#fee9004b';\r\n\r\n\tconsole.log({ backgroundColor, node });\r\n\r\n\t$: if (node && backgroundColor)\r\n\t\tnode = {\r\n\t\t\t...node,\r\n\t\t\tstyle: {\r\n\t\t\t\t...node.style,\r\n\t\t\t\tbackgroundColor\r\n\t\t\t}\r\n\t\t};\r\n\r\n\tfunction handleDelete(e) {\r\n\t\t// TODO: tentatively delete it, with an undo snackbar\r\n\t}\r\n\r\n\tfunction handleConnect(e) {\r\n\t\t// TODO make connection\r\n\t}\r\n</script>\r\n\r\n<div class=\"context-menu\" style=\"right: -{offsetWidth * 1.5}px; top: 0;\" bind:offsetWidth>\r\n\t{#if backgroundColor}\r\n\t\t<ColorPicker bind:backgroundColor />\r\n\t{/if}\r\n\t<span on:click|stopPropagation={handleConnect} class=\"connect\">↪</span>\r\n\t<span on:click|stopPropagation={handleDelete}>🗑️</span>\r\n</div>\r\n\r\n<style>\r\n\t.context-menu {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\twidth: fit-content;\r\n\t\tmargin-left: 2em;\r\n\t\tz-index: 99;\r\n\t}\r\n\t.connect {\r\n\t\t--s: 0.05em;\r\n\t\tdisplay: block;\r\n\t\tfont-size: 1.7em;\r\n\t\ttransform: rotate(328deg) scale(1, -1);\r\n\t\ttext-shadow: calc(var(--s) * -0.5) calc(var(--s) * -1) calc(var(--s) * 1.25) #ccc;\r\n\t}\r\n\r\n\t.context-menu:hover,\r\n\t.context-menu:before {\r\n\t\tcursor: pointer;\r\n\t}\r\n\tspan:before {\r\n\t\t/* content: '🗑️'; */\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { createEventDispatcher, onMount } from 'svelte';\r\n\timport { asDraggable, asDroppable, asDropZone } from 'svelte-drag-and-drop-actions';\r\n\timport PointerTracker from 'pointer-tracker';\r\n\r\n\timport ResizeHandle from './ResizeHandle.svelte';\r\n\timport { scale, selected } from './stores.js';\r\n\timport { clickOutside } from './directives';\r\n\timport EditableText from './EditableText.svelte';\r\n\timport ContextMenu from './ContextMenu.svelte';\r\n\r\n\tonMount(async () => {\r\n\t\timport('svelte-drag-drop-touch');\r\n\r\n\t\t// Watch for pointers\r\n\t\tconst pointerTracker = new PointerTracker(container, {\r\n\t\t\tstart: (pointer, event) => {\r\n\t\t\t\t// We only want to track 2 pointers at most\r\n\t\t\t\tif (pointerTracker.currentPointers.length === 2) return false;\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\tmove: (previousPointers, changedPointers, event) => {\r\n\t\t\t\tlet dx = event.clientX - previousPointers[0].clientX;\r\n\t\t\t\tlet dy = event.clientY - previousPointers[0].clientY;\r\n\t\t\t\tdragFrame(event.clientX, event.clientY, dx, dy);\r\n\t\t\t},\r\n\t\t\tend: (pointer, event, cancelled) => {\r\n\t\t\t\tonDragEnd();\r\n\t\t\t\thandleFocus(event);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\t// export let data;\r\n\texport let node;\r\n\texport let arenaHeight;\r\n\texport let arenaWidth;\r\n\texport let isDragging = false;\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\t// redraw if arena changes/updates\r\n\t$: if (arenaWidth || arenaHeight) assertArenaBounds();\r\n\r\n\tlet container;\r\n\tlet clientWidth, clientHeight;\r\n\r\n\tlet grid = 20;\r\n\tlet minFrameWidth = 40;\r\n\tlet maxFrameWidth = 2500;\r\n\tlet minFrameHeight = 20;\r\n\tlet maxFrameHeight = 2500;\r\n\r\n\tlet isFocused;\r\n\tlet directions = ['nw', 'w', 'sw', 'ne', 'e', 'se', 'n', 's'];\r\n\r\n\t/**** event handling ***/\r\n\tfunction handleDragStart(e) {\r\n\t\tconsole.log('Drag started');\r\n\t\te.preventDefault();\r\n\t}\r\n\r\n\tfunction onDragStart() {\r\n\t\treturn { x: node.x, y: node.y };\r\n\t}\r\n\tfunction dragFrame(_x, _y, dx, dy) {\r\n\t\tnode.x = node.x + dx / $scale.value;\r\n\t\tnode.y = node.y + dy / $scale.value;\r\n\t\tassertArenaBounds();\r\n\t}\r\n\r\n\tfunction onDragEnd() {\r\n\t\tisDragging = false;\r\n\r\n\t\tnode.x = Math.round(node.x / grid) * grid;\r\n\t\tnode.y = Math.round(node.y / grid) * grid;\r\n\t\tnode.style.width = Math.round(node.style.width / grid) * grid;\r\n\t\tnode.style.height = Math.round(node.style.height / grid) * grid;\r\n\t}\r\n\r\n\tfunction onDrop(x, y, Operation, DataOffered, DroppableExtras, DropZoneExtras) {\r\n\t\tconsole.log(`DropZone.onDrop:\r\n\t\t x,y:            ${x}, ${y}\r\n\t\t Operation:      ', ${Operation}\r\n\t\t DataOffered:    ', ${JSON.stringify(DataOffered)}\r\n\t\t DroppableExtras:', ${JSON.stringify(DroppableExtras, null, 2)}\r\n\t\t DropZoneExtras: ', ${DropZoneExtras}`);\r\n\r\n\t\tlet TypeAccepted = undefined;\r\n\t\tfor (let Type in DataOffered) {\r\n\t\t\tif (DataOffered.hasOwnProperty(Type)) {\r\n\t\t\t\tTypeAccepted = Type;\r\n\t\t\t}\r\n\t\t}\r\n\t\tnode.children = [\r\n\t\t\t...node.children,\r\n\t\t\t{ ...DroppableExtras.newContainer, x: x / $scale.value, y: y / $scale.value }\r\n\t\t];\r\n\t\treturn TypeAccepted;\r\n\t}\r\n\r\n\tfunction assertArenaBounds() {\r\n\t\tif (node.x < 0) {\r\n\t\t\tnode.x = 0;\r\n\t\t}\r\n\t\tif (node.x + node.style.width >= arenaWidth) {\r\n\t\t\tnode.x -= node.x + node.style.width - arenaWidth;\r\n\t\t}\r\n\r\n\t\tif (node.y < 0) {\r\n\t\t\tnode.y = 0;\r\n\t\t}\r\n\t\tif (node.y + node.style.height >= arenaHeight) {\r\n\t\t\tnode.y -= node.y + node.style.height - arenaHeight;\r\n\t\t}\r\n\t}\r\n\r\n\t$: if ($selected != container) handleUnselect();\r\n\r\n\tfunction handleUnselect() {\r\n\t\tisFocused = false;\r\n\t}\r\n\tfunction handleFocus(e) {\r\n\t\tcontainer.focus();\r\n\t\t$selected = container;\r\n\t\tisFocused = true;\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<!-- <link rel=\"stylesheet\" type=\"text/css\" href=\"//fonts.googleapis.com/css?family=Luckiest+Guy\" /> -->\r\n</svelte:head>\r\n\r\n<!-- {node?.style}   background-color: {node?.backgroundColor}; -->\r\n{#if node && document && clickOutside}\r\n\t<div\r\n\t\tclass=\"container\"\r\n\t\tbind:this={container}\r\n\t\tbind:clientWidth\r\n\t\tbind:clientHeight\r\n\t\tstyle=\"position: absolute; left:{node.x}px; top:{node.y}px; width:{node?.style\r\n\t\t\t?.width}px; height:{node?.style?.height}px; \r\n\t\tbackground-color: {node?.style?.backgroundColor || '#fee9004b'}\"\r\n\t\tuse:asDroppable={{\r\n\t\t\tOperations: 'move',\r\n\t\t\tDataToOffer: { 'item/plain': '' }\r\n\t\t}}\r\n\t\tuse:asDropZone={{ TypesToAccept: { 'item/plain': 'all' }, onDrop }}\r\n\t\tuse:clickOutside={{ enabled: isFocused, handleUnselect }}\r\n\t\ton:focusout={handleUnselect}\r\n\t\ton:dragstart={handleDragStart}\r\n\t>\r\n\t\t<div class=\"title\"><EditableText bind:value={node.name} /></div>\r\n\t\t<!-- x: {node.x?.toFixed(1)}px; y: {node.y.toFixed(1)}px; <br />\r\n\t\twidth: {node.style.width?.toFixed(1)}px; height: {node.style.height.toFixed(1)}px; -->\r\n\r\n\t\t<svelte:component this={node.component} bind:props={node.props} />\r\n\r\n\t\t{#if node?.children?.length > 0}\r\n\t\t\t{#each node.children as child}\r\n\t\t\t\t<svelte:self\r\n\t\t\t\t\tbind:node={child}\r\n\t\t\t\t\tarenaWidth={clientWidth}\r\n\t\t\t\t\tarenaHeight={clientHeight}\r\n\t\t\t\t\tbind:isDragging\r\n\t\t\t\t/>\r\n\t\t\t{/each}\r\n\t\t{/if}\r\n\r\n\t\t{#if container && isFocused}\r\n\t\t\t<!-- OnSelect Context Menu  -->\r\n\t\t\t<ContextMenu bind:node />\r\n\t\t{/if}\r\n\t</div>\r\n\r\n\t{#if container && isFocused}\r\n\t\t<!-- Handles  -->\r\n\t\t{#each directions as direction}\r\n\t\t\t<ResizeHandle\r\n\t\t\t\tbind:x={node.x}\r\n\t\t\t\tbind:y={node.y}\r\n\t\t\t\tbind:width={node.style.width}\r\n\t\t\t\tbind:height={node.style.height}\r\n\t\t\t\tbind:isDragging\r\n\t\t\t\t{maxFrameWidth}\r\n\t\t\t\t{minFrameWidth}\r\n\t\t\t\t{arenaWidth}\r\n\t\t\t\t{arenaHeight}\r\n\t\t\t\t{maxFrameHeight}\r\n\t\t\t\t{minFrameHeight}\r\n\t\t\t\t{direction}\r\n\t\t\t\t{grid}\r\n\t\t\t/>\r\n\t\t{/each}\r\n\t{/if}\r\n{/if}\r\n\r\n<style>\r\n\t/* Works, but CDNs are bad... */\r\n\t@import url('https://fonts.googleapis.com/css2?family=Permanent+Marker&display=swap');\r\n\r\n\t.title {\r\n\t\twidth: 80%;\r\n\t\theight: auto;\r\n\t\tfont-size: 1.5em;\r\n\t\t/* font-family: 'Luckiest Guy', cursive; */\r\n\t\tfont-family: 'Permanent Marker', cursive;\r\n\t}\r\n\t.container {\r\n\t\t/* background-color: #fee9004b; */\r\n\t\tbox-shadow: 0.1em 0.1em 0.5em 0em rgba(183, 183, 183, 0.5);\r\n\t\t/* box-shadow: 0.1em 0.1em 0.5em 0.1em hwb(0 83% 17% / 0.5); */\r\n\t\tborder-radius: 0.2em;\r\n\t\tposition: absolute;\r\n\t\tpadding: 1em;\r\n\t\tmargin: 0.5em;\r\n\t\twidth: min-content;\r\n\t\theight: 100%;\r\n\t\tfont-size: 0.9em;\r\n\t}\r\n\r\n\t@font-face {\r\n\t\tfont-family: 'Permanent Marker';\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: 400;\r\n\t\tfont-display: swap;\r\n\t\tsrc: url(./perm-marker.woff2) format('woff2');\r\n\t\tunicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,\r\n\t\t\tU+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n\t}\r\n\r\n\t@font-face {\r\n\t\tfont-family: 'Luckiest Guy';\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: 400;\r\n\t\tsrc: url(https://fonts.gstatic.com/s/luckiestguy/v17/_gP_1RrxsjcxVyin9l9n_j2hTd52.woff2)\r\n\t\t\tformat('woff2');\r\n\t\tunicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,\r\n\t\t\tU+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport Canvas from './Canvas.svelte';\r\n\timport Menu from './Menu.svelte';\r\n\timport Nodes from './Nodes.svelte';\r\n\timport Links from './Links.svelte';\r\n\timport Object from './Object.svelte';\r\n\timport Wrapper from './Wrapper.svelte';\r\n\r\n\timport { pzoom } from '@douganderson444/panzoom-node';\r\n\timport Container from './Container.svelte';\r\n\timport { scale } from './stores.js';\r\n\r\n\texport let data;\r\n\texport let width = 400;\r\n\texport let height = 600;\r\n\r\n\tlet clientWidth, clientHeight;\r\n\tlet zoomable;\r\n\r\n\tfunction handleChange(e) {\r\n\t\tlet m;\r\n\t\tconst re = /(\\w+)\\(([^)]*)\\)/g;\r\n\t\twhile ((m = re.exec(zoomable.style.transform))) {\r\n\t\t\tif (m[1] == 'scale' && parseFloat(m[2]).toFixed(2) != $scale.value.toFixed(2)) {\r\n\t\t\t\t$scale.value = parseFloat(m[2]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n{#if $scale}\r\n\t<div\r\n\t\tclass=\"canvas\"\r\n\t\tstyle=\"height: {height}px; width: {width}px;\"\r\n\t\tbind:clientWidth\r\n\t\tbind:clientHeight\r\n\t>\r\n\t\t<Menu bind:scale={$scale.value} />\r\n\t\t{width}px x {height}px\r\n\r\n\t\t<div class=\"zoomable flexbox\" use:pzoom on:change={handleChange} bind:this={zoomable}>\r\n\t\t\t<Container bind:node={data} arenaWidth={clientWidth * 100} arenaHeight={clientHeight * 100} />\r\n\t\t\t<!-- <Links links={data.links} /> -->\r\n\t\t</div>\r\n\t\t<!-- <Object val={data} /> -->\r\n\t</div>\r\n{/if}\r\n\r\n<style>\r\n\t.canvas {\r\n\t\tborder: 1px solid forestgreen;\r\n\t\tmargin: 0em;\r\n\t\toverflow: hidden;\r\n\t}\r\n\t.zoomable {\r\n\t\tborder-top: 1px dashed fuchsia;\r\n\t\tborder-left: 1px dashed fuchsia;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t}\r\n\t.flexbox {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tflex-wrap: wrap;\r\n\t\tjustify-content: flex-start;\r\n\t\talign-items: flex-start;\r\n\t\talign-content: flex-start;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\timport Sketch from '$lib/Sketch.svelte';\r\n\timport { safeid } from '$lib/utils';\r\n\timport { colors } from '$lib/config';\r\n\r\n\tlet width;\r\n\tlet height;\r\n\tlet mounted;\r\n\r\n\tlet rectColor = () => '#' + (((1 << 24) * Math.random()) | 0).toString(16);\r\n\r\n\tfunction randomColor() {\r\n\t\treturn Math.floor((Math.random() * 10) % colors.length);\r\n\t}\r\n\r\n\tlet data = {\r\n\t\tname: 'My Dashboard of Lists',\r\n\t\tid: safeid(),\r\n\t\tx: 20,\r\n\t\ty: 20,\r\n\t\tstyle: {\r\n\t\t\tbackgroundColor: colors[randomColor()],\r\n\t\t\twidth: 600,\r\n\t\t\tleft: 20,\r\n\t\t\ttop: 20,\r\n\t\t\theight: 800\r\n\t\t},\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Child 1',\r\n\t\t\t\tid: safeid(),\r\n\t\t\t\tx: 60,\r\n\t\t\t\ty: 80,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tbackgroundColor: colors[randomColor()],\r\n\t\t\t\t\twidth: 220,\r\n\t\t\t\t\theight: 520,\r\n\t\t\t\t\tleft: 20,\r\n\t\t\t\t\ttop: 20\r\n\t\t\t\t},\r\n\t\t\t\t// component: DragHandles,\r\n\t\t\t\tprops: [],\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Child A',\r\n\t\t\t\t\t\tid: safeid(),\r\n\t\t\t\t\t\tx: 20,\r\n\t\t\t\t\t\ty: 80,\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tbackgroundColor: colors[randomColor()],\r\n\t\t\t\t\t\t\twidth: 120,\r\n\t\t\t\t\t\t\theight: 120,\r\n\t\t\t\t\t\t\tleft: 20,\r\n\t\t\t\t\t\t\ttop: 20\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t// component: DragHandles,\r\n\t\t\t\t\t\tprops: [],\r\n\t\t\t\t\t\tchildren: []\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Child 2',\r\n\t\t\t\tid: safeid(),\r\n\t\t\t\tx: 300,\r\n\t\t\t\ty: 80,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tbackgroundColor: colors[randomColor()],\r\n\t\t\t\t\twidth: 100,\r\n\t\t\t\t\theight: 140,\r\n\t\t\t\t\tleft: 20,\r\n\t\t\t\t\ttop: 20\r\n\t\t\t\t},\r\n\t\t\t\t// component: DragHandles,\r\n\t\t\t\tprops: [],\r\n\t\t\t\tchildren: []\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Child 3',\r\n\t\t\t\tid: safeid(),\r\n\t\t\t\tx: 420,\r\n\t\t\t\ty: 80,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tbackgroundColor: colors[randomColor()],\r\n\t\t\t\t\twidth: 100,\r\n\t\t\t\t\theight: 160,\r\n\t\t\t\t\tleft: 20,\r\n\t\t\t\t\ttop: 20\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// component: DragHandles,\r\n\t\t\t\tprops: [],\r\n\t\t\t\tchildren: []\r\n\t\t\t}\r\n\r\n\t\t\t// {\r\n\t\t\t// \tname: 'List 2',\r\n\t\t\t// \tcomponent: Resizable,\r\n\t\t\t// \tx: 0,\r\n\t\t\t// \ty: 0,\r\n\t\t\t// \tprops: [\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item A'\r\n\t\t\t// \t\t},\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item B'\r\n\t\t\t// \t\t},\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item C'\r\n\t\t\t// \t\t}\r\n\t\t\t// \t]\r\n\t\t\t// },\r\n\t\t\t// {\r\n\t\t\t// \tname: 'List 3',\r\n\t\t\t// \tcomponent: Draggable,\r\n\t\t\t// \tprops: [\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item A'\r\n\t\t\t// \t\t},\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item B'\r\n\t\t\t// \t\t},\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item C'\r\n\t\t\t// \t\t}\r\n\t\t\t// \t]\r\n\t\t\t// },\r\n\t\t\t// {\r\n\t\t\t// \tname: 'StickyNote',\r\n\t\t\t// \tcomponent: StickyNote,\r\n\t\t\t// \tx: 0,\r\n\t\t\t// \ty: 0,\r\n\t\t\t// \tprops: [\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item A'\r\n\t\t\t// \t\t},\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item B'\r\n\t\t\t// \t\t},\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item C'\r\n\t\t\t// \t\t}\r\n\t\t\t// \t]\r\n\t\t\t// }\r\n\t\t]\r\n\t};\r\n\r\n\t// let data = {\r\n\t// \tid: safeid(),\r\n\t// \tname: 'Dashboard',\r\n\t// \tcomponent: Dash,\r\n\t// \tprops: { name: 'world' },\r\n\t// \tcolor: rectColor(),\r\n\t// \tchildren: [\r\n\t// \t\t{\r\n\t// \t\t\tid: safeid(),\r\n\t// \t\t\tname: 'List 1',\r\n\t// \t\t\tcolor: rectColor(),\r\n\t// \t\t\tx: 1,\r\n\t// \t\t\ty: 1,\r\n\t// \t\t\tcomponent: DragHandles,\r\n\t// \t\t\tprops: {\r\n\t// \t\t\t\titems: [\r\n\t// \t\t\t\t\t{ id: safeid(), name: 'A', color: rectColor(), children: [] },\r\n\t// \t\t\t\t\t{ id: safeid(), name: 'B', color: rectColor(), children: [] }\r\n\t// \t\t\t\t]\r\n\t// \t\t\t},\r\n\t// \t\t\tchildren: []\r\n\t// \t\t},\r\n\t// \t\t{\r\n\t// \t\t\tid: safeid(),\r\n\t// \t\t\tname: 'List 2',\r\n\t// \t\t\tcolor: rectColor(),\r\n\t// \t\t\tx: 200,\r\n\t// \t\t\ty: 0,\r\n\t// \t\t\tcomponent: DragHandles,\r\n\t// \t\t\tprops: {\r\n\t// \t\t\t\titems: [\r\n\t// \t\t\t\t\t{ id: safeid(), name: 'C', color: rectColor(), children: [] },\r\n\t// \t\t\t\t\t{ id: safeid(), name: 'D', color: rectColor(), children: [] }\r\n\t// \t\t\t\t]\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t],\r\n\t// \tlinks: []\r\n\t// };\r\n\r\n\tlet vh;\r\n\r\n\tonMount(() => {\r\n\t\thandleViewportSize();\r\n\t});\r\n\r\n\tfunction handleViewportSize(_) {\r\n\t\tvh = window.innerHeight * 0.01;\r\n\t\theight = window.innerHeight;\r\n\t\twidth = document?.body.clientWidth; // excludes scrollbar\r\n\t}\r\n</script>\r\n\r\n<svelte:window on:resize={handleViewportSize} />\r\n\r\n<div class=\"app\" style=\"--vh: {vh}px; height: calc(var(--vh, 1vh) * 100);\">\r\n\t{#if vh}\r\n\t\t<Sketch bind:data {width} {height} />\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\t.app {\r\n\t\theight: 100vh; /* Fallback for browsers that do not support Custom Properties */\r\n\t}\r\n</style>\r\n","<script>\n\timport { onMount } from 'svelte';\n\timport App from '$lib/App.svelte';\n\n\tlet mounted;\n\n\tonMount(() => {\n\t\tmounted = true;\n\t});\n</script>\n\n{#if mounted}\n\t<App />\n{/if}\n"],"names":["PointerTracker","pinchZoom","create_if_block"],"mappings":"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"}