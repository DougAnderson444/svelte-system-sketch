{"version":3,"file":"_page.svelte-eca95286.js","sources":["../../../../../../../node_modules/nanoid/non-secure/index.js","../../../../../../../src/lib/utils/index.ts","../../../../../../../node_modules/javascript-interface-library/dist/javascript-interface-library.esm.js","../../../../../../../node_modules/svelte-coordinate-conversion/dist/svelte-coordinate-conversion.esm.js","../../../../../../../node_modules/svelte-drag-and-drop-actions/dist/svelte-drag-and-drop-actions.esm.js","../../../../../../../node_modules/@douganderson444/pointer-tracker/dist/PointerTracker.mjs","../../../../../../../src/lib/Menu.svelte","../../../../../../../node_modules/@douganderson444/panzoom-node/node_modules/@douganderson444/pointer-tracker/dist/PointerTracker.mjs","../../../../../../../node_modules/@douganderson444/panzoom-node/pinchZoom.js","../../../../../../../node_modules/@douganderson444/panzoom-node/pzoom.js","../../../../../../../src/lib/stores.js","../../../../../../../src/lib/ResizeHandle.svelte","../../../../../../../src/lib/directives.js","../../../../../../../src/lib/EditableText.svelte","../../../../../../../src/lib/config/index.js","../../../../../../../src/lib/ColorPicker.svelte","../../../../../../../src/lib/ContextMenu.svelte","../../../../../../../src/lib/Container.svelte","../../../../../../../src/lib/Sketch.svelte","../../../../../../../src/lib/App.svelte","../../../../../../../src/routes/+page.svelte"],"sourcesContent":["let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nexport { nanoid, customAlphabet }\n","import { nanoid } from 'nanoid';\r\nimport { customAlphabet } from 'nanoid/non-secure';\r\n\r\nexport function safeid(n: number = 16): string {\r\n\treturn customAlphabet('abcdefghijklmnopqrztuvwxyz1234567890', n)();\r\n}\r\n\r\nexport default safeid;\r\n\r\nexport function createNewNode(params: type) {\r\n\tconst newNode = {\r\n\t\tname: 'Name',\r\n\t\tid: safeid(),\r\n\t\tx: 10,\r\n\t\ty: 10,\r\n\t\tstyle: {\r\n\t\t\tbackgroundColor: '#fee9004b',\r\n\t\t\twidth: 120,\r\n\t\t\theight: 120,\r\n\t\t\tleft: 10,\r\n\t\t\ttop: 10\r\n\t\t},\r\n\t\t// component: DragHandles,\r\n\t\tprops: [],\r\n\t\tchildren: []\r\n\t};\r\n\r\n\treturn newNode;\r\n}\r\n","//----------------------------------------------------------------------------//\n//                        JavaScript Interface Library                        //\n//----------------------------------------------------------------------------//\n/**** get a reference to the \"global\" object ****/\nvar global = /*#__PURE__*/ Function('return this')();\n// see https://stackoverflow.com/questions/3277182/how-to-get-the-global-object-in-javascript\n//------------------------------------------------------------------------------\n//--                             Object Functions                             --\n//------------------------------------------------------------------------------\n// allow methods from Object.prototype to be applied to \"vanilla\" objects\n/**** Object_hasOwnProperty ****/\nfunction Object_hasOwnProperty(Value, PropertyName) {\n    return ((Value == null) || // let this method crash like its original\n        ('hasOwnProperty' in Value) && (typeof Value.hasOwnProperty === 'function')\n        ? Value.hasOwnProperty(PropertyName)\n        : Object.prototype.hasOwnProperty.call(Value, PropertyName));\n}\n/**** Object_isPrototypeOf ****/\nfunction Object_isPrototypeOf(Value, Candidate) {\n    return ((Value == null) || // let this method crash like its original\n        ('isPrototypeOf' in Value) && (typeof Value.isPrototypeOf === 'function')\n        ? Value.isPrototypeOf(Candidate)\n        : Object.prototype.isPrototypeOf.call(Value, Candidate));\n}\n/**** Object_propertyIsEnumerable ****/\nfunction Object_propertyIsEnumerable(Value, PropertyName) {\n    return ((Value == null) || // let this method crash like its original\n        ('propertyIsEnumerable' in Value) && (typeof Value.propertyIsEnumerable === 'function')\n        ? Value.propertyIsEnumerable(PropertyName)\n        : Object.prototype.propertyIsEnumerable.call(Value, PropertyName));\n}\n/**** Object_toString ****/\nfunction Object_toString(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('toString' in Value) && (typeof Value.toString === 'function')\n        ? Value.toString()\n        : Object.prototype.toString.call(Value));\n}\n/**** Object_toLocaleString ****/\nfunction Object_toLocaleString(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('toLocaleString' in Value) && (typeof Value.toLocaleString === 'function')\n        ? Value.toLocaleString()\n        : Object.prototype.toString.call(Value)); // a missing \"toLocaleString\" method will crash Object.prototype.toLocaleString\n}\n/**** Object_valueOf ****/\nfunction Object_valueOf(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('valueOf' in Value) && (typeof Value.valueOf === 'function')\n        ? Value.valueOf()\n        : Object.prototype.valueOf.call(Value));\n}\n/**** ObjectMergedWith ****/\nfunction ObjectMergedWith(TargetObject) {\n    var otherObjectList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherObjectList[_i - 1] = arguments[_i];\n    }\n    for (var i = 0, l = otherObjectList.length; i < l; i++) {\n        var otherObject = otherObjectList[i];\n        if (otherObject == null) {\n            continue;\n        }\n        if (typeof otherObject === 'object') {\n            for (var Key in otherObject) {\n                var Descriptor = Object.getOwnPropertyDescriptor(otherObject, Key);\n                if (Descriptor != null) {\n                    Object.defineProperty(TargetObject, Key, Descriptor);\n                }\n            }\n        }\n        else {\n            throwError('InvalidArgument: argument #' + (i + 1) + ' is not an object');\n        }\n    }\n    return TargetObject;\n}\n/**** throwError - simplifies construction of named errors ****/\nfunction throwError(Message) {\n    var Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message);\n    if (Match == null) {\n        throw new Error(Message);\n    }\n    else {\n        var namedError = new Error(Match[2]);\n        namedError.name = Match[1];\n        throw namedError;\n    }\n}\n//------------------------------------------------------------------------------\n//--                      Value Classification Functions                      --\n//------------------------------------------------------------------------------\n/**** ValueExists ****/\nfunction ValueExists(Value) {\n    return (Value != null);\n}\n/**** ValueIsMissing ****/\nfunction ValueIsMissing(Value) {\n    return (Value == null);\n}\n/**** ValueIsBoolean ****/\nfunction ValueIsBoolean(Value) {\n    return (typeof Value === 'boolean') || (Value instanceof Boolean);\n}\n/**** ValueIsNumber ****/\nfunction ValueIsNumber(Value) {\n    return (typeof Value === 'number') || (Value instanceof Number);\n}\n/**** ValueIsFiniteNumber (pure \"isFinite\" breaks on objects) ****/\nfunction ValueIsFiniteNumber(Value) {\n    return ((typeof Value === 'number') || (Value instanceof Number)) && isFinite(Value.valueOf());\n}\n/**** ValueIsNaN (numeric, but NaN - this differs from pure \"isNaN\") ****/\nfunction ValueIsNaN(Value) {\n    return ((typeof Value === 'number') || (Value instanceof Number)) && isNaN(Value.valueOf());\n}\n/**** ValueIsNumberInRange ****/\nfunction ValueIsNumberInRange(Value, minValue, maxValue, withMin, withMax) {\n    if (withMin === void 0) { withMin = true; }\n    if (withMax === void 0) { withMax = true; }\n    if (!ValueIsNumber(Value) || isNaN(Value)) {\n        return false;\n    }\n    if (ValueIsFiniteNumber(minValue)) { // more robust than \"isFinite\" alone\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value < minValue) || (!withMin && (Value === minValue)) ||\n                (Value > maxValue) || (!withMax && (Value === maxValue))) {\n                return false;\n            }\n        }\n        else {\n            if ((Value < minValue) || (!withMin && (Value === minValue))) {\n                return false;\n            }\n        }\n    }\n    else {\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value > maxValue) || (!withMax && (Value === maxValue))) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**** ValueIsInteger ****/\nfunction ValueIsInteger(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value);\n}\n/**** ValueIsIntegerInRange ****/\nfunction ValueIsIntegerInRange(Value, minValue, maxValue) {\n    if (!ValueIsInteger(Value) || isNaN(Value)) {\n        return false;\n    }\n    if (ValueIsFiniteNumber(minValue)) { // more robust than \"isFinite\" alone\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value < minValue) || (Value > maxValue)) {\n                return false;\n            }\n        }\n        else {\n            if (Value < minValue) {\n                return false;\n            }\n        }\n    }\n    else {\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if (Value > maxValue) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**** ValueIsOrdinal ****/\nfunction ValueIsOrdinal(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value) && (Value >= 0);\n}\n/**** ValueIsCardinal ****/\nfunction ValueIsCardinal(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value) && (Value >= 1);\n}\n/**** ValueIsString ****/\nfunction ValueIsString(Value) {\n    return (typeof Value === 'string') || (Value instanceof String);\n}\n/**** ValueIs[Non]EmptyString ****/\nvar emptyStringPattern = /^\\s*$/;\nfunction ValueIsEmptyString(Value) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && emptyStringPattern.test(Value.valueOf());\n}\nfunction ValueIsNonEmptyString(Value) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && !emptyStringPattern.test(Value.valueOf());\n}\n/**** ValueIsStringMatching ****/\nfunction ValueIsStringMatching(Value, Pattern) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && Pattern.test(Value.valueOf());\n}\n/**** ValueIsText ****/\nvar noCtrlCharsButCRLFPattern = /^[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsText(Value) {\n    return ValueIsStringMatching(Value, noCtrlCharsButCRLFPattern);\n}\n/**** ValueIsTextline ****/\nvar noCtrlCharsPattern = /^[^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsTextline(Value) {\n    return ValueIsStringMatching(Value, noCtrlCharsPattern);\n}\n/**** ValueIsFunction ****/\nfunction ValueIsFunction(Value) {\n    return (typeof Value === 'function');\n}\n/**** ValueIsAnonymousFunction ****/\nfunction ValueIsAnonymousFunction(Value) {\n    return ((typeof Value === 'function') &&\n        ((Value.name == null) || (Value.name === '')));\n}\n/**** ValueIsNamedFunction ****/\nfunction ValueIsNamedFunction(Value) {\n    return ((typeof Value === 'function') &&\n        (Value.name != null) && (Value.name !== ''));\n}\n/**** ValueIsNativeFunction ****/\nfunction ValueIsNativeFunction(Value) {\n    return ((typeof Value === 'function') &&\n        /^function\\s*[^(]*\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*$/.test(Value.toString()));\n}\n/**** ValueIsScriptedFunction ****/\nfunction ValueIsScriptedFunction(Value) {\n    return ((typeof Value === 'function') &&\n        !/^function\\s*[^(]*\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*$/.test(Value.toString()));\n}\n/**** ValueIsObject ****/\nfunction ValueIsObject(Value) {\n    return (Value != null) && (typeof Value === 'object');\n}\n/**** ValueIsPlainObject ****/\nfunction ValueIsPlainObject(Value) {\n    return ((Value != null) && (typeof Value === 'object') &&\n        (Object.getPrototypeOf(Value) === Object.prototype));\n}\n/**** ValueIsVanillaObject ****/\nfunction ValueIsVanillaObject(Value) {\n    return ((Value != null) && (typeof Value === 'object') &&\n        !(Value instanceof Object));\n}\n/**** ValueIsArray ****/\nvar ValueIsArray = Array.isArray;\n/**** ValueIsList (\"dense\" array) ****/\nfunction ValueIsList(Value, minLength, maxLength) {\n    if (ValueIsArray(Value)) {\n        for (var i = 0, l = Value.length; i < l; i++) {\n            if (Value[i] === undefined) {\n                return false;\n            }\n        }\n        if (minLength != null) {\n            if (Value.length < minLength) {\n                return false;\n            }\n        }\n        if (maxLength != null) {\n            if (Value.length > maxLength) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n/**** ValueIsListSatisfying ****/\nfunction ValueIsListSatisfying(Value, Validator, minLength, maxLength) {\n    if (ValueIsArray(Value)) {\n        try {\n            for (var i = 0, l = Value.length; i < l; i++) {\n                if (Validator(Value[i]) == false) {\n                    return false;\n                }\n            }\n            if (minLength != null) {\n                if (Value.length < minLength) {\n                    return false;\n                }\n            }\n            if (maxLength != null) {\n                if (Value.length > maxLength) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        catch (Signal) { /* nop */ }\n    }\n    return false;\n}\n/**** ValueIsInstanceOf ****/\nfunction ValueIsInstanceOf(Value, Constructor) {\n    return (Value instanceof Constructor);\n}\n/**** ValueInheritsFrom ****/\nfunction ValueInheritsFrom(Value, Prototype) {\n    return Object_isPrototypeOf(Prototype, Value);\n}\n/**** ValueIsDate ****/\nfunction ValueIsDate(Value) {\n    return (Value instanceof Date);\n}\n/**** ValueIsError ****/\nfunction ValueIsError(Value) {\n    return (Value instanceof Error);\n}\n/**** ValueIsPromise ****/\nfunction ValueIsPromise(Value) {\n    return (Value != null) && (typeof Value.then === 'function');\n}\n// see https://stackoverflow.com/questions/27746304/how-do-i-tell-if-an-object-is-a-promise\n/**** ValueIsRegExp ****/\nfunction ValueIsRegExp(Value) {\n    return (Value instanceof RegExp);\n}\n/**** ValueIsOneOf ****/\nfunction ValueIsOneOf(Value, ValueList) {\n    return (ValueList.indexOf(Value) >= 0);\n} // no automatic unboxing of boxed values and vice-versa!\n/**** ValueIsColor ****/\nfunction ValueIsColor(Value) {\n    return ValueIsString(Value) && (ColorSet.hasOwnProperty(Value) ||\n        /^#[a-fA-F0-9]{6}$/.test(Value) ||\n        /^#[a-fA-F0-9]{8}$/.test(Value) ||\n        /^rgb\\([0-9]+,\\s*[0-9]+,\\s*[0-9]+\\)$/.test(Value) || // not perfect\n        /^rgba\\([0-9]+,\\s*[0-9]+,\\s*[0-9]+,([01]|[0]?[.][0-9]+)\\)$/.test(Value) // dto.\n    );\n}\n/**** ValueIsEMailAddress ****/\nvar EMailAddressPattern = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n// see https://stackoverflow.com/questions/201323/how-to-validate-an-email-address-using-a-regular-expression\nfunction ValueIsEMailAddress(Value) {\n    return ValueIsStringMatching(Value, EMailAddressPattern);\n}\n/**** ValueIsURL ****/\nvar noCtrlCharsOrWhitespacePattern = /^[^\\s\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsURL(Value) {\n    if (!ValueIsStringMatching(Value, noCtrlCharsOrWhitespacePattern) ||\n        (Value === '')) {\n        return false;\n    }\n    try {\n        new URL(Value, 'file://');\n        return true;\n    }\n    catch (Signal) {\n        return false;\n    }\n}\n//------------------------------------------------------------------------------\n//--                      Argument Validation Functions                       --\n//------------------------------------------------------------------------------\nvar rejectNil = false;\nvar acceptNil = true;\n/**** validatedArgument ****/\nfunction validatedArgument(Description, Argument, ValueIsValid, NilIsAcceptable, Expectation) {\n    if (Argument == null) {\n        if (NilIsAcceptable) {\n            return Argument;\n        }\n        else {\n            throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n        }\n    }\n    else {\n        if (ValueIsValid(Argument)) {\n            switch (true) {\n                case Argument instanceof Boolean:\n                case Argument instanceof Number:\n                case Argument instanceof String:\n                    return Argument.valueOf(); // unboxes any primitives\n                default:\n                    return Argument;\n            }\n        }\n        else {\n            throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is no valid \" + escaped(Expectation));\n        }\n    }\n}\n/**** ValidatorForClassifier ****/\nfunction ValidatorForClassifier(Classifier, NilIsAcceptable, Expectation) {\n    var Validator = function (Description, Argument) {\n        return validatedArgument(Description, Argument, Classifier, NilIsAcceptable, Expectation);\n    };\n    var ClassifierName = Classifier.name;\n    if ((ClassifierName != null) && /^ValueIs/.test(ClassifierName)) {\n        var ValidatorName = ClassifierName.replace(// derive name from validator\n        /^ValueIs/, NilIsAcceptable ? 'allow' : 'expect');\n        return FunctionWithName(Validator, ValidatorName);\n    }\n    else {\n        return Validator; // without any specific name\n    }\n}\n/**** FunctionWithName (works with older JS engines as well) ****/\nfunction FunctionWithName(originalFunction, desiredName) {\n    if (originalFunction == null) {\n        throwError('MissingArgument: no function given');\n    }\n    if (typeof originalFunction !== 'function') {\n        throwError('InvalidArgument: the given 1st Argument is not a JavaScript function');\n    }\n    if (desiredName == null) {\n        throwError('MissingArgument: no desired name given');\n    }\n    if ((typeof desiredName !== 'string') && !(desiredName instanceof String)) {\n        throwError('InvalidArgument: the given desired name is not a string');\n    }\n    if (originalFunction.name === desiredName) {\n        return originalFunction;\n    }\n    try {\n        Object.defineProperty(originalFunction, 'name', { value: desiredName });\n        if (originalFunction.name === desiredName) {\n            return originalFunction;\n        }\n    }\n    catch (signal) { /* ok - let's take the hard way */ }\n    var renamed = new Function('originalFunction', 'return function ' + desiredName + ' () {' +\n        'return originalFunction.apply(this,Array.prototype.slice.apply(arguments))' +\n        '}');\n    return renamed(originalFunction);\n} // also works with older JavaScript engines\n/**** expect[ed]Value ****/\nfunction expectValue(Description, Argument) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    else {\n        return Argument.valueOf();\n    }\n}\nvar expectedValue = expectValue;\n/**** allow/expect[ed]Boolean ****/\nvar allowBoolean = /*#__PURE__*/ ValidatorForClassifier(ValueIsBoolean, acceptNil, 'boolean value'), allowedBoolean = allowBoolean;\nvar expectBoolean = /*#__PURE__*/ ValidatorForClassifier(ValueIsBoolean, rejectNil, 'boolean value'), expectedBoolean = expectBoolean;\n/**** allow/expect[ed]Number ****/\nvar allowNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsNumber, acceptNil, 'numeric value'), allowedNumber = allowNumber;\nvar expectNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsNumber, rejectNil, 'numeric value'), expectedNumber = expectNumber;\n/**** allow/expect[ed]FiniteNumber ****/\nvar allowFiniteNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsFiniteNumber, acceptNil, 'finite numeric value'), allowedFiniteNumber = allowFiniteNumber;\nvar expectFiniteNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsFiniteNumber, rejectNil, 'finite numeric value'), expectedFiniteNumber = expectFiniteNumber;\n/**** allow/expect[ed]NaN ****/\nvar allowNaN = /*#__PURE__*/ ValidatorForClassifier(ValueIsNaN, acceptNil, 'NaN value'), allowedNaN = allowNaN;\nvar expectNaN = /*#__PURE__*/ ValidatorForClassifier(ValueIsNaN, rejectNil, 'NaN value'), expectedNaN = expectNaN;\n/**** allow[ed]NumberInRange ****/\nfunction allowNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax) {\n    return (Argument == null\n        ? Argument\n        : expectedNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax));\n}\nvar allowedNumberInRange = allowNumberInRange;\n/**** expect[ed]NumberInRange ****/\nfunction expectNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax) {\n    expectNumber(Description, Argument);\n    if (isNaN(Argument)) {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is not-a-number\");\n    }\n    if (withMin == null) {\n        withMin = true;\n    }\n    if (withMax == null) {\n        withMax = true;\n    }\n    if ((minValue != null) && isFinite(minValue)) {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument < minValue) || (!withMin && (Argument === minValue)) ||\n                (Argument > maxValue) || (!withMax && (Argument === maxValue))) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" (\" + Argument + \") is outside \" +\n                    (\"the allowed range (\" + minValue + \"...\" + maxValue + \")\"));\n            }\n        }\n        else {\n            if ((Argument < minValue) || (!withMin && (Argument === minValue))) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" is below the allowed \" +\n                    (\"minimum (\" + Argument + \" \" + (withMin ? '<' : '<=') + \" \" + minValue + \")\"));\n            }\n        }\n    }\n    else {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument > maxValue) || (!withMax && (Argument === maxValue))) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" exceeds the allowed \" +\n                    (\"maximum (\" + Argument + \" \" + (withMax ? '>' : '>=') + \" \" + maxValue + \")\"));\n            }\n        }\n    }\n    return Argument.valueOf();\n}\nvar expectedNumberInRange = expectNumberInRange;\n/**** allow/expect[ed]Integer ****/\nvar allowInteger = /*#__PURE__*/ ValidatorForClassifier(ValueIsInteger, acceptNil, 'integral numeric value'), allowedInteger = allowInteger;\nvar expectInteger = /*#__PURE__*/ ValidatorForClassifier(ValueIsInteger, rejectNil, 'integral numeric value'), expectedInteger = expectInteger;\n/**** allow[ed]IntegerInRange ****/\nfunction allowIntegerInRange(Description, Argument, minValue, maxValue) {\n    return (Argument == null\n        ? Argument\n        : expectedIntegerInRange(Description, Argument, minValue, maxValue));\n}\nvar allowedIntegerInRange = allowIntegerInRange;\n/**** expect[ed]IntegerInRange ****/\nfunction expectIntegerInRange(Description, Argument, minValue, maxValue) {\n    expectInteger(Description, Argument);\n    if (isNaN(Argument)) {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is not-a-number\");\n    }\n    if ((minValue != null) && isFinite(minValue)) {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument < minValue) || (Argument > maxValue)) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" (\" + Argument + \") is outside \" +\n                    (\"the allowed range (\" + minValue + \"...\" + maxValue + \")\"));\n            }\n        }\n        else {\n            if (Argument < minValue) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" is below the allowed \" +\n                    (\"minimum (\" + Argument + \" < \" + minValue + \")\"));\n            }\n        }\n    }\n    else {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if (Argument > maxValue) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" exceeds the allowed \" +\n                    (\"maximum (\" + Argument + \" > \" + maxValue + \")\"));\n            }\n        }\n    }\n    return Argument.valueOf();\n}\nvar expectedIntegerInRange = expectIntegerInRange;\n/**** allow/expect[ed]Ordinal ****/\nvar allowOrdinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsOrdinal, acceptNil, 'ordinal number'), allowedOrdinal = allowOrdinal;\nvar expectOrdinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsOrdinal, rejectNil, 'ordinal number'), expectedOrdinal = expectOrdinal;\n/**** allow/expect[ed]Cardinal ****/\nvar allowCardinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsCardinal, acceptNil, 'cardinal number'), allowedCardinal = allowCardinal;\nvar expectCardinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsCardinal, rejectNil, 'cardinal number'), expectedCardinal = expectCardinal;\n/**** allow/expect[ed]String ****/\nvar allowString = /*#__PURE__*/ ValidatorForClassifier(ValueIsString, acceptNil, 'literal string'), allowedString = allowString;\nvar expectString = /*#__PURE__*/ ValidatorForClassifier(ValueIsString, rejectNil, 'literal string'), expectedString = expectString;\n/**** allow/expect[ed]NonEmptyString ****/\nvar allowNonEmptyString = /*#__PURE__*/ ValidatorForClassifier(ValueIsNonEmptyString, acceptNil, 'non-empty literal string'), allowedNonEmptyString = allowNonEmptyString;\nvar expectNonEmptyString = /*#__PURE__*/ ValidatorForClassifier(ValueIsNonEmptyString, rejectNil, 'non-empty literal string'), expectedNonEmptyString = expectNonEmptyString;\n/**** allow[ed]StringMatching ****/\nfunction allowStringMatching(Description, Argument, Pattern) {\n    return (Argument == null\n        ? Argument\n        : expectedStringMatching(Description, Argument, Pattern));\n}\nvar allowedStringMatching = allowStringMatching;\n/**** expect[ed]StringMatching ****/\nfunction expectStringMatching(Description, Argument, Pattern) {\n    expectString(Description, Argument);\n    if (Pattern.test(Argument)) {\n        return Argument.valueOf();\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" does not match the specified pattern\");\n    }\n}\nvar expectedStringMatching = expectStringMatching;\n/**** allow/expect[ed]Text ****/\nvar allowText = /*#__PURE__*/ ValidatorForClassifier(ValueIsText, acceptNil, 'literal text'), allowedText = allowText;\nvar expectText = /*#__PURE__*/ ValidatorForClassifier(ValueIsText, rejectNil, 'literal text'), expectedText = expectText;\n/**** allow/expect[ed]Textline ****/\nvar allowTextline = /*#__PURE__*/ ValidatorForClassifier(ValueIsTextline, acceptNil, 'single line of text'), allowedTextline = allowTextline;\nvar expectTextline = /*#__PURE__*/ ValidatorForClassifier(ValueIsTextline, rejectNil, 'single line of text'), expectedTextline = expectTextline;\n/**** allow/expect[ed]Function ****/\nvar allowFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsFunction, acceptNil, 'JavaScript function'), allowedFunction = allowFunction;\nvar expectFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsFunction, rejectNil, 'JavaScript function'), expectedFunction = expectFunction;\n/**** allow/expect[ed]AnonymousFunction ****/\nvar allowAnonymousFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsAnonymousFunction, acceptNil, 'anonymous JavaScript function'), allowedAnonymousFunction = allowAnonymousFunction;\nvar expectAnonymousFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsAnonymousFunction, rejectNil, 'anonymous JavaScript function'), expectedAnonymousFunction = expectAnonymousFunction;\n/**** allow/expect[ed]NamedFunction ****/\nvar allowNamedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNamedFunction, acceptNil, 'named JavaScript function'), allowedNamedFunction = allowNamedFunction;\nvar expectNamedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNamedFunction, rejectNil, 'named JavaScript function'), expectedNamedFunction = expectNamedFunction;\n/**** allow/expect[ed]NativeFunction ****/\nvar allowNativeFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNativeFunction, acceptNil, 'native JavaScript function'), allowedNativeFunction = allowNativeFunction;\nvar expectNativeFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNativeFunction, rejectNil, 'native JavaScript function'), expectedNativeFunction = expectNativeFunction;\n/**** allow/expect[ed]ScriptedFunction ****/\nvar allowScriptedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsScriptedFunction, acceptNil, 'scripted JavaScript function'), allowedScriptedFunction = allowScriptedFunction;\nvar expectScriptedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsScriptedFunction, rejectNil, 'scripted JavaScript function'), expectedScriptedFunction = expectScriptedFunction;\n/**** allow/expect[ed]Object ****/\nvar allowObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsObject, acceptNil, 'JavaScript object'), allowedObject = allowObject;\nvar expectObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsObject, rejectNil, 'JavaScript object'), expectedObject = expectObject;\n/**** allow/expect[ed]PlainObject ****/\nvar allowPlainObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsPlainObject, acceptNil, '\"plain\" JavaScript object'), allowedPlainObject = allowPlainObject;\nvar expectPlainObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsPlainObject, rejectNil, '\"plain\" JavaScript object'), expectedPlainObject = expectPlainObject;\n/**** allow/expect[ed]VanillaObject ****/\nvar allowVanillaObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsVanillaObject, acceptNil, '\"vanilla\" JavaScript object'), allowedVanillaObject = allowVanillaObject;\nvar expectVanillaObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsVanillaObject, rejectNil, '\"vanilla\" JavaScript object'), expectedVanillaObject = expectVanillaObject;\n/**** allow[ed]Array ****/\nfunction allowArray(Description, Argument) {\n    return (Argument == null\n        ? Argument\n        : expectedArray(Description, Argument));\n}\nvar allowedArray = allowArray;\n/**** expect[ed]Array ****/\nfunction expectArray(Description, Argument) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (ValueIsArray(Argument)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is no JavaScript array\");\n    }\n}\nvar expectedArray = expectArray;\n/**** allow[ed]List ****/\nfunction allowList(Description, Argument, Expectation, minLength, maxLength) {\n    return (Argument == null\n        ? Argument\n        : expectedList(Description, Argument, Expectation, minLength, maxLength));\n}\nvar allowedList = allowList;\n/**** expect[ed]List ****/\nfunction expectList(Description, Argument, Expectation, minLength, maxLength) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (ValueIsList(Argument, minLength, maxLength)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is \" + (Expectation == null\n            ? 'either not a list or contains an invalid number of elements'\n            : 'no ' + escaped(Expectation)));\n    }\n}\nvar expectedList = expectList;\n/**** allow[ed]ListSatisfying ****/\nfunction allowListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength) {\n    return (Argument == null\n        ? Argument\n        : expectedListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength));\n}\nvar allowedListSatisfying = allowListSatisfying;\n/**** expect[ed]ListSatisfying ****/\nfunction expectListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (ValueIsListSatisfying(Argument, Validator, minLength, maxLength)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is \" + (Expectation == null\n            ? 'either not a list or contains invalid elements'\n            : 'no ' + escaped(Expectation)));\n    }\n}\nvar expectedListSatisfying = expectListSatisfying;\n/**** allow[ed]InstanceOf ****/\nfunction allowInstanceOf(Description, Argument, constructor, Expectation) {\n    return (Argument == null\n        ? Argument\n        : expectedInstanceOf(Description, Argument, constructor, Expectation));\n}\nvar allowedInstanceOf = allowInstanceOf;\n/**** expect[ed]InstanceOf ****/\nfunction expectInstanceOf(Description, Argument, constructor, Expectation) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (!(Argument instanceof constructor)) {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is no \" + escaped(Expectation));\n    }\n    return Argument;\n}\nvar expectedInstanceOf = expectInstanceOf;\n/**** allow[ed]ValueInheritingFrom ****/\nfunction allowValueInheritingFrom(Description, Argument, prototype, Expectation) {\n    return (Argument == null\n        ? Argument\n        : expectedValueInheritingFrom(Description, Argument, prototype, Expectation));\n}\nvar allowedValueInheritingFrom = allowValueInheritingFrom;\n/**** expect[ed]ValueInheritingFrom ****/\nfunction expectValueInheritingFrom(Description, Argument, prototype, Expectation) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (prototype.isPrototypeOf(Argument)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is no \" + escaped(Expectation));\n    }\n}\nvar expectedValueInheritingFrom = expectValueInheritingFrom;\n/**** allow/expect[ed]Date ****/\nvar allowDate = /*#__PURE__*/ ValidatorForClassifier(ValueIsDate, acceptNil, 'JavaScript Date object'), allowedDate = allowDate;\nvar expectDate = /*#__PURE__*/ ValidatorForClassifier(ValueIsDate, rejectNil, 'JavaScript Date object'), expectedDate = expectDate;\n/**** allow/expect[ed]Error ****/\nvar allowError = /*#__PURE__*/ ValidatorForClassifier(ValueIsError, acceptNil, 'JavaScript Error object'), allowedError = allowError;\nvar expectError = /*#__PURE__*/ ValidatorForClassifier(ValueIsError, rejectNil, 'JavaScript Error object'), expectedError = expectError;\n/**** allow/expect[ed]Promise ****/\nvar allowPromise = /*#__PURE__*/ ValidatorForClassifier(ValueIsPromise, acceptNil, 'JavaScript Promise (or \"Thenable\") object'), allowedPromise = allowPromise;\nvar expectPromise = /*#__PURE__*/ ValidatorForClassifier(ValueIsPromise, rejectNil, 'JavaScript Promise (or \"Thenable\") object'), expectedPromise = expectPromise;\n/**** allow/expect[ed]RegExp ****/\nvar allowRegExp = /*#__PURE__*/ ValidatorForClassifier(ValueIsRegExp, acceptNil, 'JavaScript RegExp object'), allowedRegExp = allowRegExp;\nvar expectRegExp = /*#__PURE__*/ ValidatorForClassifier(ValueIsRegExp, rejectNil, 'JavaScript RegExp object'), expectedRegExp = expectRegExp;\n/**** allow[ed]OneOf ****/\nfunction allowOneOf(Description, Argument, ValueList) {\n    return (Argument == null\n        ? Argument\n        : expectedOneOf(Description, Argument, ValueList));\n}\nvar allowedOneOf = allowOneOf;\n/**** expect[ed]OneOf ****/\nfunction expectOneOf(Description, Argument, ValueList) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (ValueIsOneOf(Argument, ValueList)) {\n        return ( // unboxes any primitives\n        (Argument == null) || (typeof Argument.valueOf !== 'function')\n            ? Argument\n            : Argument.valueOf());\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is not among the supported values\");\n    }\n}\nvar expectedOneOf = expectOneOf;\n/**** allow/expect[ed]Color ****/\nvar allowColor = /*#__PURE__*/ ValidatorForClassifier(ValueIsColor, acceptNil, 'valid CSS color specification'), allowedColor = allowColor;\nvar expectColor = /*#__PURE__*/ ValidatorForClassifier(ValueIsColor, rejectNil, 'valid CSS color specification'), expectedColor = expectColor;\n/**** allow/expect[ed]EMailAddress ****/\nvar allowEMailAddress = /*#__PURE__*/ ValidatorForClassifier(ValueIsEMailAddress, acceptNil, 'valid EMail address'), allowedEMailAddress = allowEMailAddress;\nvar expectEMailAddress = /*#__PURE__*/ ValidatorForClassifier(ValueIsEMailAddress, rejectNil, 'valid EMail address'), expectedEMailAddress = expectEMailAddress;\n/**** allow/expect[ed]URL ****/\nvar allowURL = /*#__PURE__*/ ValidatorForClassifier(ValueIsURL, acceptNil, 'valid URL'), allowedURL = allowURL;\nvar expectURL = /*#__PURE__*/ ValidatorForClassifier(ValueIsURL, rejectNil, 'valid URL'), expectedURL = expectURL;\n/**** escaped - escapes all control characters in a given string ****/\nfunction escaped(Text) {\n    var EscapeSequencePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?/g;\n    var CtrlCharCodePattern = /[\\x00-\\x1f\\x7f-\\x9f]/g;\n    return Text\n        .replace(EscapeSequencePattern, function (Match) {\n        return (Match === '\\\\' ? '\\\\\\\\' : Match);\n    })\n        .replace(CtrlCharCodePattern, function (Match) {\n        switch (Match) {\n            case '\\0': return '\\\\0';\n            case '\\b': return '\\\\b';\n            case '\\f': return '\\\\f';\n            case '\\n': return '\\\\n';\n            case '\\r': return '\\\\r';\n            case '\\t': return '\\\\t';\n            case '\\v': return '\\\\v';\n            default: {\n                var HexCode = Match.charCodeAt(0).toString(16);\n                return '\\\\x' + '00'.slice(HexCode.length) + HexCode;\n            }\n        }\n    });\n}\n/**** unescaped - evaluates all escape sequences in a given string ****/\nfunction unescaped(Text) {\n    var EscapeSequencePattern = /\\\\[0bfnrtv'\"\\\\\\/]|\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}/g;\n    return Text\n        .replace(EscapeSequencePattern, function (Match) {\n        switch (Match) {\n            case '\\\\0': return '\\0';\n            case '\\\\b': return '\\b';\n            case '\\\\f': return '\\f';\n            case '\\\\n': return '\\n';\n            case '\\\\r': return '\\r';\n            case '\\\\t': return '\\t';\n            case '\\\\v': return '\\v';\n            case '\\\\\\'': return \"'\";\n            case '\\\\\"': return '\"';\n            case '\\\\\\\\': return \"\\\\\";\n            default: {\n                var CharCode = parseInt(Match.slice(2), 16);\n                return String.fromCharCode(CharCode);\n            }\n        }\n    });\n}\n/**** quotable - makes a given string ready to be put in single/double quotes ****/\nfunction quotable(Text, Quote) {\n    if (Quote === void 0) { Quote = '\"'; }\n    var EscSeqOrSglQuotePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?|'/g;\n    var EscSeqOrDblQuotePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?|\"/g;\n    var CtrlCharCodePattern = /[\\x00-\\x1f\\x7f-\\x9f]/g;\n    return Text\n        .replace(Quote === \"'\" ? EscSeqOrSglQuotePattern : EscSeqOrDblQuotePattern, function (Match) {\n        switch (Match) {\n            case \"'\": return \"\\\\'\";\n            case '\"': return '\\\\\"';\n            case '\\\\': return '\\\\\\\\';\n            default: return Match;\n        }\n    })\n        .replace(CtrlCharCodePattern, function (Match) {\n        switch (Match) {\n            case '\\0': return '\\\\0';\n            case '\\b': return '\\\\b';\n            case '\\f': return '\\\\f';\n            case '\\n': return '\\\\n';\n            case '\\r': return '\\\\r';\n            case '\\t': return '\\\\t';\n            case '\\v': return '\\\\v';\n            default: {\n                var HexCode = Match.charCodeAt(0).toString(16);\n                return '\\\\x' + '00'.slice(HexCode.length) + HexCode;\n            }\n        }\n    });\n}\n/**** quoted ****/\nfunction quoted(Text, Quote) {\n    if (Quote === void 0) { Quote = '\"'; }\n    return Quote + quotable(Text, Quote) + Quote;\n}\n/**** HTMLsafe ****/\nfunction HTMLsafe(Argument, EOLReplacement) {\n    EOLReplacement = (EOLReplacement || '').trim() || '<br/>';\n    return Argument.replace(/[&<>\"'\\u0000-\\u001F\\u007F-\\u009F\\\\]/g, function (Match) {\n        switch (Match) {\n            case '&': return '&amp;';\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '\"': return '&quot;';\n            case \"'\": return '&apos;';\n            case '\\b': return '&#92;b';\n            case '\\f': return '&#92;f';\n            case '\\n': return EOLReplacement;\n            case '\\r': return '&#92;r';\n            case '\\t': return '&#92;t';\n            case '\\v': return '&#92;v';\n            case '\\\\': return '&#92;';\n            default:\n                var Result = Match.charCodeAt(0).toString(16);\n                return '&#x0000'.substring(3, 7 - Result.length) + Result + ';';\n        }\n    });\n}\n/**** MarkDownSafe ****/\nfunction MarkDownSafe(Argument, EOLReplacement) {\n    return HTMLsafe(Argument, EOLReplacement).replace(/:/g, '&#58;');\n}\n/**** ValuesDiffer ****/\nfunction ValuesDiffer(thisValue, otherValue, Mode) {\n    if (thisValue === otherValue) {\n        return false;\n    }\n    var thisType = typeof thisValue;\n    if (thisType !== typeof otherValue) {\n        return true;\n    }\n    /**** ArraysDiffer ****/\n    function ArraysDiffer(thisArray, otherArray, Mode) {\n        if (!Array.isArray(otherArray)) {\n            return true;\n        }\n        if (thisArray.length !== otherArray.length) {\n            return true;\n        }\n        for (var i = 0, l = thisArray.length; i < l; i++) {\n            if (ValuesDiffer(thisArray[i], otherArray[i], Mode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**** ObjectsDiffer ****/\n    function ObjectsDiffer(thisObject, otherObject, Mode) {\n        if (Object.getPrototypeOf(thisObject) !== Object.getPrototypeOf(otherObject)) {\n            return true;\n        }\n        for (var key in thisObject) {\n            if (!(key in otherObject)) {\n                return true;\n            }\n        }\n        for (var key in otherObject) {\n            if (!(key in thisObject)) {\n                return true;\n            }\n            if (ValuesDiffer(thisObject[key], otherObject[key], Mode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    switch (thisType) {\n        case 'undefined':\n        case 'boolean':\n        case 'string':\n        case 'function': return true; // most primitives are compared using \"===\"\n        case 'number': return ((isNaN(thisValue) !== isNaN(otherValue)) ||\n            (Math.abs(thisValue - otherValue) > Number.EPSILON));\n        case 'object':\n            if (thisValue == null) {\n                return true;\n            } // since \"other_value\" != null!\n            if (otherValue == null) {\n                return true;\n            } // since \"this_value\" != null!\n            if ((Mode === 'by-value') && ((thisValue instanceof Boolean) ||\n                (thisValue instanceof Number) ||\n                (thisValue instanceof String))) {\n                return (thisValue.valueOf() !== otherValue.valueOf());\n            }\n            if (Array.isArray(thisValue)) {\n                return ArraysDiffer(thisValue, otherValue, Mode);\n            }\n            return (Mode === 'by-reference'\n                ? true // because (thisValue !== otherValue)\n                : ObjectsDiffer(thisValue, otherValue, Mode));\n        default: return true; // unsupported property type\n    }\n    return true;\n}\n/**** ValuesAreEqual ****/\nfunction ValuesAreEqual(thisValue, otherValue, Mode) {\n    return !ValuesDiffer(thisValue, otherValue, Mode);\n}\n/**** ObjectIsEmpty ****/\nfunction ObjectIsEmpty(Candidate) {\n    expectObject('candidate', Candidate);\n    for (var Key in Candidate) {\n        if (Object_hasOwnProperty(Candidate, Key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**** ObjectIsNotEmpty ****/\nfunction ObjectIsNotEmpty(Candidate) {\n    return !ObjectIsEmpty(Candidate);\n}\n/**** StringIsEmpty ****/\nfunction StringIsEmpty(Candidate) {\n    return /^\\s*$/.test(Candidate);\n}\n/**** StringIsNotEmpty ****/\nfunction StringIsNotEmpty(Candidate) {\n    return !StringIsEmpty(Candidate);\n}\n/**** constrained ****/\nfunction constrained(Value, Minimum, Maximum) {\n    if (Minimum === void 0) { Minimum = -Infinity; }\n    if (Maximum === void 0) { Maximum = Infinity; }\n    return Math.max(Minimum, Math.min(Value, Maximum));\n}\n//------------------------------------------------------------------------------\n//--                             Color Utilities                              --\n//------------------------------------------------------------------------------\n// built-in color names (see http://www.w3.org/TR/SVG/types.html#ColorKeywords) ----\nvar ColorSet = {\n    transparent: 'rgba(0,0,0,0,0.0)',\n    aliceblue: 'rgba(240,248,255,1.0)', lightpink: 'rgba(255,182,193,1.0)',\n    antiquewhite: 'rgba(250,235,215,1.0)', lightsalmon: 'rgba(255,160,122,1.0)',\n    aqua: 'rgba(0,255,255,1.0)', lightseagreen: 'rgba(32,178,170,1.0)',\n    aquamarine: 'rgba(127,255,212,1.0)', lightskyblue: 'rgba(135,206,250,1.0)',\n    azure: 'rgba(240,255,255,1.0)', lightslategray: 'rgba(119,136,153,1.0)',\n    beige: 'rgba(245,245,220,1.0)', lightslategrey: 'rgba(119,136,153,1.0)',\n    bisque: 'rgba(255,228,196,1.0)', lightsteelblue: 'rgba(176,196,222,1.0)',\n    black: 'rgba(0,0,0,1.0)', lightyellow: 'rgba(255,255,224,1.0)',\n    blanchedalmond: 'rgba(255,235,205,1.0)', lime: 'rgba(0,255,0,1.0)',\n    blue: 'rgba(0,0,255,1.0)', limegreen: 'rgba(50,205,50,1.0)',\n    blueviolet: 'rgba(138,43,226,1.0)', linen: 'rgba(250,240,230,1.0)',\n    brown: 'rgba(165,42,42,1.0)', magenta: 'rgba(255,0,255,1.0)',\n    burlywood: 'rgba(222,184,135,1.0)', maroon: 'rgba(128,0,0,1.0)',\n    cadetblue: 'rgba(95,158,160,1.0)', mediumaquamarine: 'rgba(102,205,170,1.0)',\n    chartreuse: 'rgba(127,255,0,1.0)', mediumblue: 'rgba(0,0,205,1.0)',\n    chocolate: 'rgba(210,105,30,1.0)', mediumorchid: 'rgba(186,85,211,1.0)',\n    coral: 'rgba(255,127,80,1.0)', mediumpurple: 'rgba(147,112,219,1.0)',\n    cornflowerblue: 'rgba(100,149,237,1.0)', mediumseagreen: 'rgba(60,179,113,1.0)',\n    cornsilk: 'rgba(255,248,220,1.0)', mediumslateblue: 'rgba(123,104,238,1.0)',\n    crimson: 'rgba(220,20,60,1.0)', mediumspringgreen: 'rgba(0,250,154,1.0)',\n    cyan: 'rgba(0,255,255,1.0)', mediumturquoise: 'rgba(72,209,204,1.0)',\n    darkblue: 'rgba(0,0,139,1.0)', mediumvioletred: 'rgba(199,21,133,1.0)',\n    darkcyan: 'rgba(0,139,139,1.0)', midnightblue: 'rgba(25,25,112,1.0)',\n    darkgoldenrod: 'rgba(184,134,11,1.0)', mintcream: 'rgba(245,255,250,1.0)',\n    darkgray: 'rgba(169,169,169,1.0)', mistyrose: 'rgba(255,228,225,1.0)',\n    darkgreen: 'rgba(0,100,0,1.0)', moccasin: 'rgba(255,228,181,1.0)',\n    darkgrey: 'rgba(169,169,169,1.0)', navajowhite: 'rgba(255,222,173,1.0)',\n    darkkhaki: 'rgba(189,183,107,1.0)', navy: 'rgba(0,0,128,1.0)',\n    darkmagenta: 'rgba(139,0,139,1.0)', oldlace: 'rgba(253,245,230,1.0)',\n    darkolivegreen: 'rgba(85,107,47,1.0)', olive: 'rgba(128,128,0,1.0)',\n    darkorange: 'rgba(255,140,0,1.0)', olivedrab: 'rgba(107,142,35,1.0)',\n    darkorchid: 'rgba(153,50,204,1.0)', orange: 'rgba(255,165,0,1.0)',\n    darkred: 'rgba(139,0,0,1.0)', orangered: 'rgba(255,69,0,1.0)',\n    darksalmon: 'rgba(233,150,122,1.0)', orchid: 'rgba(218,112,214,1.0)',\n    darkseagreen: 'rgba(143,188,143,1.0)', palegoldenrod: 'rgba(238,232,170,1.0)',\n    darkslateblue: 'rgba(72,61,139,1.0)', palegreen: 'rgba(152,251,152,1.0)',\n    darkslategray: 'rgba(47,79,79,1.0)', paleturquoise: 'rgba(175,238,238,1.0)',\n    darkslategrey: 'rgba(47,79,79,1.0)', palevioletred: 'rgba(219,112,147,1.0)',\n    darkturquoise: 'rgba(0,206,209,1.0)', papayawhip: 'rgba(255,239,213,1.0)',\n    darkviolet: 'rgba(148,0,211,1.0)', peachpuff: 'rgba(255,218,185,1.0)',\n    deeppink: 'rgba(255,20,147,1.0)', peru: 'rgba(205,133,63,1.0)',\n    deepskyblue: 'rgba(0,191,255,1.0)', pink: 'rgba(255,192,203,1.0)',\n    dimgray: 'rgba(105,105,105,1.0)', plum: 'rgba(221,160,221,1.0)',\n    dimgrey: 'rgba(105,105,105,1.0)', powderblue: 'rgba(176,224,230,1.0)',\n    dodgerblue: 'rgba(30,144,255,1.0)', purple: 'rgba(128,0,128,1.0)',\n    firebrick: 'rgba(178,34,34,1.0)', red: 'rgba(255,0,0,1.0)',\n    floralwhite: 'rgba(255,250,240,1.0)', rosybrown: 'rgba(188,143,143,1.0)',\n    forestgreen: 'rgba(34,139,34,1.0)', royalblue: 'rgba(65,105,225,1.0)',\n    fuchsia: 'rgba(255,0,255,1.0)', saddlebrown: 'rgba(139,69,19,1.0)',\n    gainsboro: 'rgba(220,220,220,1.0)', salmon: 'rgba(250,128,114,1.0)',\n    ghostwhite: 'rgba(248,248,255,1.0)', sandybrown: 'rgba(244,164,96,1.0)',\n    gold: 'rgba(255,215,0,1.0)', seagreen: 'rgba(46,139,87,1.0)',\n    goldenrod: 'rgba(218,165,32,1.0)', seashell: 'rgba(255,245,238,1.0)',\n    gray: 'rgba(128,128,128,1.0)', sienna: 'rgba(160,82,45,1.0)',\n    green: 'rgba(0,128,0,1.0)', silver: 'rgba(192,192,192,1.0)',\n    greenyellow: 'rgba(173,255,47,1.0)', skyblue: 'rgba(135,206,235,1.0)',\n    grey: 'rgba(128,128,128,1.0)', slateblue: 'rgba(106,90,205,1.0)',\n    honeydew: 'rgba(240,255,240,1.0)', slategray: 'rgba(112,128,144,1.0)',\n    hotpink: 'rgba(255,105,180,1.0)', slategrey: 'rgba(112,128,144,1.0)',\n    indianred: 'rgba(205,92,92,1.0)', snow: 'rgba(255,250,250,1.0)',\n    indigo: 'rgba(75,0,130,1.0)', springgreen: 'rgba(0,255,127,1.0)',\n    ivory: 'rgba(255,255,240,1.0)', steelblue: 'rgba(70,130,180,1.0)',\n    khaki: 'rgba(240,230,140,1.0)', tan: 'rgba(210,180,140,1.0)',\n    lavender: 'rgba(230,230,250,1.0)', teal: 'rgba(0,128,128,1.0)',\n    lavenderblush: 'rgba(255,240,245,1.0)', thistle: 'rgba(216,191,216,1.0)',\n    lawngreen: 'rgba(124,252,0,1.0)', tomato: 'rgba(255,99,71,1.0)',\n    lemonchiffon: 'rgba(255,250,205,1.0)', turquoise: 'rgba(64,224,208,1.0)',\n    lightblue: 'rgba(173,216,230,1.0)', violet: 'rgba(238,130,238,1.0)',\n    lightcoral: 'rgba(240,128,128,1.0)', wheat: 'rgba(245,222,179,1.0)',\n    lightcyan: 'rgba(224,255,255,1.0)', white: 'rgba(255,255,255,1.0)',\n    lightgoldenrodyellow: 'rgba(250,250,210,1.0)', whitesmoke: 'rgba(245,245,245,1.0)',\n    lightgray: 'rgba(211,211,211,1.0)', yellow: 'rgba(255,255,0,1.0)',\n    lightgreen: 'rgba(144,238,144,1.0)', yellowgreen: 'rgba(154,205,50,1.0)',\n    lightgrey: 'rgba(211,211,211,1.0)',\n};\n/**** HexColor - converts a given color to #rrggbbaa ****/\nfunction HexColor(Color) {\n    var lowerColor = Color.toLowerCase();\n    if (ColorSet.hasOwnProperty(lowerColor)) {\n        // @ts-ignore TS dislikes indexing with literal keys\n        Color = ColorSet[lowerColor];\n    } // do not return here as color is now in RGBA format\n    if (/^#[a-fA-F0-9]{6}$/.test(Color)) {\n        return Color + 'FF';\n    }\n    if (/^#[a-fA-F0-9]{8}$/.test(Color)) {\n        return Color;\n    }\n    var HexDigit = '0123456789ABCDEF';\n    function dec2hex(Value) {\n        if (Value > 255) {\n            Value = 255;\n        }\n        return HexDigit[Math.trunc(Value / 16)] + HexDigit[Value % 16];\n    }\n    var RGBPattern = /^rgb\\(([0-9]+),\\s*([0-9]+),\\s*([0-9]+)\\)$/i; // not perfect\n    var Match = RGBPattern.exec(Color);\n    if (Match != null) {\n        return ('#' +\n            dec2hex(parseInt(Match[1], 10)) +\n            dec2hex(parseInt(Match[2], 10)) +\n            dec2hex(parseInt(Match[3], 10)) + 'FF');\n    }\n    var RGBAPattern = /^rgba\\(([(0-9]+),\\s*([0-9]+),\\s*([0-9]+),\\s*([01]?[.][0-9]+|[01])\\)$/i; // not perfect\n    Match = RGBAPattern.exec(Color);\n    if (Match != null) {\n        return ('#' +\n            dec2hex(parseInt(Match[1], 10)) +\n            dec2hex(parseInt(Match[2], 10)) +\n            dec2hex(parseInt(Match[3], 10)) +\n            dec2hex(parseFloat(Match[4])));\n    }\n    throwError('InvalidArgument: the given Value is not a valid CSS Color specification');\n}\n/**** RGBAColor - converts a given color to RGBA(r,g,b,a) ****/\nfunction RGBAColor(Color) {\n    var lowerColor = Color.toLowerCase();\n    if (ColorSet.hasOwnProperty(lowerColor)) {\n        // @ts-ignore TS dislikes indexing with literal keys\n        return ColorSet[lowerColor]; // color is already in RGBA format\n    }\n    if (/^#[a-fA-F0-9]{6}$/.test(Color)) {\n        return ('rgba(' +\n            parseInt(Color.slice(1, 3), 16) + ',' +\n            parseInt(Color.slice(3, 5), 16) + ',' +\n            parseInt(Color.slice(5, 7), 16) + ', 1' +\n            ')');\n    }\n    if (/^#[a-fA-F0-9]{8}$/.test(Color)) {\n        return ('rgba(' +\n            parseInt(Color.slice(1, 3), 16) + ',' +\n            parseInt(Color.slice(3, 5), 16) + ',' +\n            parseInt(Color.slice(5, 7), 16) + ',' +\n            (parseInt(Color.slice(7), 16) / 255) +\n            ')');\n    }\n    var RGBPattern = /^rgb\\(([0-9]+),\\s*([0-9]+),\\s*([0-9]+)\\)$/i; //not perfect\n    var Match = RGBPattern.exec(Color);\n    if (Match != null) {\n        return Color.slice(0, Color.length - 1) + ',1)';\n    }\n    var RGBAPattern = /^rgba\\(([(0-9]+),\\s*([0-9]+),\\s*([0-9]+),\\s*([0]?[.][0-9]+|[01])\\)$/i; // not perfect\n    Match = RGBAPattern.exec(Color);\n    if (Match != null) {\n        return Color;\n    }\n    throwError('InvalidArgument: the given Value is not a valid CSS Color specification');\n}\n/**** shortHexColor - converts a given color into #RRGGBB ****/\nfunction shortHexColor(Color) {\n    return HexColor(Color).slice(0, 7);\n}\n\nexport { ColorSet, FunctionWithName, HTMLsafe, HexColor, MarkDownSafe, ObjectIsEmpty, ObjectIsNotEmpty, ObjectMergedWith, Object_hasOwnProperty, Object_isPrototypeOf, Object_propertyIsEnumerable, Object_toLocaleString, Object_toString, Object_valueOf, RGBAColor, StringIsEmpty, StringIsNotEmpty, ValidatorForClassifier, ValueExists, ValueInheritsFrom, ValueIsAnonymousFunction, ValueIsArray, ValueIsBoolean, ValueIsCardinal, ValueIsColor, ValueIsDate, ValueIsEMailAddress, ValueIsEmptyString, ValueIsError, ValueIsFiniteNumber, ValueIsFunction, ValueIsInstanceOf, ValueIsInteger, ValueIsIntegerInRange, ValueIsList, ValueIsListSatisfying, ValueIsMissing, ValueIsNaN, ValueIsNamedFunction, ValueIsNativeFunction, ValueIsNonEmptyString, ValueIsNumber, ValueIsNumberInRange, ValueIsObject, ValueIsOneOf, ValueIsOrdinal, ValueIsPlainObject, ValueIsPromise, ValueIsRegExp, ValueIsScriptedFunction, ValueIsString, ValueIsStringMatching, ValueIsText, ValueIsTextline, ValueIsURL, ValueIsVanillaObject, ValuesAreEqual, ValuesDiffer, acceptNil, allowAnonymousFunction, allowArray, allowBoolean, allowCardinal, allowColor, allowDate, allowEMailAddress, allowError, allowFiniteNumber, allowFunction, allowInstanceOf, allowInteger, allowIntegerInRange, allowList, allowListSatisfying, allowNaN, allowNamedFunction, allowNativeFunction, allowNonEmptyString, allowNumber, allowNumberInRange, allowObject, allowOneOf, allowOrdinal, allowPlainObject, allowPromise, allowRegExp, allowScriptedFunction, allowString, allowStringMatching, allowText, allowTextline, allowURL, allowValueInheritingFrom, allowVanillaObject, allowedAnonymousFunction, allowedArray, allowedBoolean, allowedCardinal, allowedColor, allowedDate, allowedEMailAddress, allowedError, allowedFiniteNumber, allowedFunction, allowedInstanceOf, allowedInteger, allowedIntegerInRange, allowedList, allowedListSatisfying, allowedNaN, allowedNamedFunction, allowedNativeFunction, allowedNonEmptyString, allowedNumber, allowedNumberInRange, allowedObject, allowedOneOf, allowedOrdinal, allowedPlainObject, allowedPromise, allowedRegExp, allowedScriptedFunction, allowedString, allowedStringMatching, allowedText, allowedTextline, allowedURL, allowedValueInheritingFrom, allowedVanillaObject, constrained, escaped, expectAnonymousFunction, expectArray, expectBoolean, expectCardinal, expectColor, expectDate, expectEMailAddress, expectError, expectFiniteNumber, expectFunction, expectInstanceOf, expectInteger, expectIntegerInRange, expectList, expectListSatisfying, expectNaN, expectNamedFunction, expectNativeFunction, expectNonEmptyString, expectNumber, expectNumberInRange, expectObject, expectOneOf, expectOrdinal, expectPlainObject, expectPromise, expectRegExp, expectScriptedFunction, expectString, expectStringMatching, expectText, expectTextline, expectURL, expectValue, expectValueInheritingFrom, expectVanillaObject, expectedAnonymousFunction, expectedArray, expectedBoolean, expectedCardinal, expectedColor, expectedDate, expectedEMailAddress, expectedError, expectedFiniteNumber, expectedFunction, expectedInstanceOf, expectedInteger, expectedIntegerInRange, expectedList, expectedListSatisfying, expectedNaN, expectedNamedFunction, expectedNativeFunction, expectedNonEmptyString, expectedNumber, expectedNumberInRange, expectedObject, expectedOneOf, expectedOrdinal, expectedPlainObject, expectedPromise, expectedRegExp, expectedScriptedFunction, expectedString, expectedStringMatching, expectedText, expectedTextline, expectedURL, expectedValue, expectedValueInheritingFrom, expectedVanillaObject, global, quotable, quoted, rejectNil, shortHexColor, throwError, unescaped, validatedArgument };\n//# sourceMappingURL=javascript-interface-library.esm.js.map\n","//----------------------------------------------------------------------------//\n//                        Svelte Coordinate Conversion                        //\n//----------------------------------------------------------------------------//\nfunction fromViewportTo(System, originalPosition, Target) {\n    switch (true) {\n        case (originalPosition == null):\n            throw new Error('no \"Position\" given');\n        case (typeof originalPosition.left !== 'number') && !(originalPosition.left instanceof Number):\n        case (typeof originalPosition.top !== 'number') && !(originalPosition.top instanceof Number):\n            throw new Error('invalid \"Position\" given');\n    }\n    switch (System) {\n        case null:\n        case undefined:\n            throw new Error('no coordinate system given');\n        // @ts-ignore the following check is for non-TypeScript applications only\n        case 'viewport':\n            return { left: originalPosition.left, top: originalPosition.top };\n        case 'document':\n            return {\n                left: originalPosition.left + window.scrollX,\n                top: originalPosition.top + window.scrollY\n            };\n        case 'local':\n            switch (true) {\n                case (Target == null):\n                    throw new Error('no target element given');\n                case (Target instanceof Element):\n                    var computedStyle = window.getComputedStyle(Target);\n                    var leftOffset = parseFloat(computedStyle.borderLeftWidth);\n                    var topOffset = parseFloat(computedStyle.borderTopWidth);\n                    var TargetPositionInViewport = Target.getBoundingClientRect();\n                    return {\n                        left: originalPosition.left - TargetPositionInViewport.left - leftOffset,\n                        top: originalPosition.top - TargetPositionInViewport.top - topOffset\n                    };\n                default:\n                    throw new Error('invalid target element given');\n            }\n        default:\n            throw new Error('invalid coordinate system given');\n    }\n}\nfunction fromDocumentTo(System, originalPosition, Target) {\n    switch (true) {\n        case (originalPosition == null):\n            throw new Error('no \"Position\" given');\n        case (typeof originalPosition.left !== 'number') && !(originalPosition.left instanceof Number):\n        case (typeof originalPosition.top !== 'number') && !(originalPosition.top instanceof Number):\n            throw new Error('invalid \"Position\" given');\n    }\n    switch (System) {\n        case null:\n        case undefined:\n            throw new Error('no coordinate system given');\n        case 'viewport':\n            return {\n                left: originalPosition.left - window.scrollX,\n                top: originalPosition.top - window.scrollY\n            };\n        // @ts-ignore the following check is for non-TypeScript applications only\n        case 'document':\n            return { left: originalPosition.left, top: originalPosition.top };\n        case 'local':\n            switch (true) {\n                case (Target == null):\n                    throw new Error('no target element given');\n                case (Target instanceof Element):\n                    var computedStyle = window.getComputedStyle(Target);\n                    var leftOffset = parseFloat(computedStyle.borderLeftWidth);\n                    var topOffset = parseFloat(computedStyle.borderTopWidth);\n                    var TargetPositionInViewport = Target.getBoundingClientRect();\n                    return {\n                        left: originalPosition.left + window.scrollX - TargetPositionInViewport.left - leftOffset,\n                        top: originalPosition.top + window.scrollY - TargetPositionInViewport.top - topOffset\n                    };\n                default:\n                    throw new Error('invalid target element given');\n            }\n        default:\n            throw new Error('invalid coordinate system given');\n    }\n}\nfunction fromLocalTo(System, originalPosition, Source) {\n    switch (true) {\n        case (originalPosition == null):\n            throw new Error('no \"Position\" given');\n        case (typeof originalPosition.left !== 'number') && !(originalPosition.left instanceof Number):\n        case (typeof originalPosition.top !== 'number') && !(originalPosition.top instanceof Number):\n            throw new Error('invalid \"Position\" given');\n    }\n    var SourcePositionInViewport, leftPosition, topPosition;\n    switch (true) {\n        case (Source == null):\n            throw new Error('no source element given');\n        case (Source instanceof Element):\n            var computedStyle = window.getComputedStyle(Source);\n            var leftOffset = parseFloat(computedStyle.borderLeftWidth);\n            var topOffset = parseFloat(computedStyle.borderTopWidth);\n            SourcePositionInViewport = Source.getBoundingClientRect();\n            leftPosition = SourcePositionInViewport.left + leftOffset;\n            topPosition = SourcePositionInViewport.top + topOffset;\n            break;\n        default:\n            throw new Error('invalid source element given');\n    }\n    switch (System) {\n        case null:\n        case undefined:\n            throw new Error('no coordinate system given');\n        case 'viewport':\n            return {\n                left: originalPosition.left + leftPosition,\n                top: originalPosition.top + topPosition\n            };\n        case 'document':\n            return {\n                left: originalPosition.left + leftPosition + window.scrollX,\n                top: originalPosition.top + topPosition + window.scrollY\n            };\n        // @ts-ignore the following check is for non-TypeScript applications only\n        case 'local':\n            return { left: originalPosition.left, top: originalPosition.top };\n        default:\n            throw new Error('invalid coordinate system given');\n    }\n}\nvar svelteCoordinateConversion = {\n    fromViewportTo: fromViewportTo,\n    fromDocumentTo: fromDocumentTo,\n    fromLocalTo: fromLocalTo\n};\n\nexport default svelteCoordinateConversion;\n//# sourceMappingURL=svelte-coordinate-conversion.esm.js.map\n","import { global, allowedPlainObject, throwError, ValueIsNonEmptyString, allowedNonEmptyString, ValueIsFunction, allowedFiniteNumber, allowedOrdinal, ValueIsPlainObject, ValueIsFiniteNumber, allowedFunction, constrained, ValueIsString, ObjectIsNotEmpty, allowPlainObject, quoted, allowedIntegerInRange, ValueIsNumber, ValueIsOneOf, allowedString, allowListSatisfying } from 'javascript-interface-library';\nimport Conversion from 'svelte-coordinate-conversion';\n\n//----------------------------------------------------------------------------//\nvar Context = ( // make this package a REAL singleton\n'__DragAndDropActions' in global\n    ? global.__DragAndDropActions\n    : global.__DragAndDropActions = {});\n/**** parsedDraggableOptions ****/\nfunction parsedDraggableOptions(Options) {\n    Options = allowedPlainObject('drag options', Options) || {};\n    var Extras, relativeTo;\n    var onlyFrom, neverFrom;\n    var Dummy, DummyOffsetX, DummyOffsetY;\n    var minX, minY, maxX, maxY;\n    var Pannable;\n    var PanSensorWidth, PanSensorHeight, PanSpeed;\n    var onDragStart, onDragMove, onDragEnd, onDragCancel;\n    Extras = Options.Extras;\n    switch (true) {\n        case (Options.relativeTo == null):\n            relativeTo = 'parent';\n            break;\n        case (Options.relativeTo === 'parent'):\n        case (Options.relativeTo === 'body'):\n        case ValueIsNonEmptyString(Options.relativeTo):\n        case (Options.relativeTo instanceof HTMLElement):\n        case (Options.relativeTo instanceof SVGElement):\n            //    case (Options.relativeTo instanceof MathMLElement):\n            relativeTo = Options.relativeTo;\n            break;\n        default: throwError('InvalidArgument: invalid position reference given');\n    }\n    onlyFrom = allowedNonEmptyString('\"onlyFrom\" CSS selector', Options.onlyFrom);\n    neverFrom = allowedNonEmptyString('\"neverFrom\" CSS selector', Options.neverFrom);\n    switch (true) {\n        case (Options.Dummy == null):\n            Dummy = undefined;\n            break;\n        case (Options.Dummy === 'standard'):\n        case (Options.Dummy === 'none'):\n        case ValueIsNonEmptyString(Options.Dummy):\n        case (Options.Dummy instanceof HTMLElement):\n        case (Options.Dummy instanceof SVGElement):\n        //    case (Options.Dummy instanceof MathMLElement):\n        case ValueIsFunction(Options.Dummy):\n            Dummy = Options.Dummy;\n            break;\n        default: throwError('InvalidArgument: invalid drag dummy specification given');\n    }\n    DummyOffsetX = allowedFiniteNumber('dummy x offset', Options.DummyOffsetX);\n    DummyOffsetY = allowedFiniteNumber('dummy y offset', Options.DummyOffsetY);\n    minX = allowedFiniteNumber('min. x position', Options.minX);\n    if (minX == null) {\n        minX = -Infinity;\n    }\n    minY = allowedFiniteNumber('min. y position', Options.minY);\n    if (minY == null) {\n        minY = -Infinity;\n    }\n    maxX = allowedFiniteNumber('max. x position', Options.maxX);\n    if (maxX == null) {\n        maxX = Infinity;\n    }\n    maxY = allowedFiniteNumber('max. y position', Options.maxY);\n    if (maxY == null) {\n        maxY = Infinity;\n    }\n    switch (true) {\n        case (Options.Pannable == null):\n            Pannable = undefined;\n            break;\n        case ValueIsNonEmptyString(Options.Pannable):\n        case (Options.Pannable instanceof HTMLElement):\n        case (Options.Pannable instanceof SVGElement):\n            //    case (Options.Pannable instanceof MathMLElement):\n            Pannable = Options.Pannable;\n            break;\n        default: throwError('InvalidArgument: invalid \"Pannable\" specification given');\n    }\n    PanSensorWidth = allowedOrdinal('panning sensor width', Options.PanSensorWidth);\n    if (PanSensorWidth == null) {\n        PanSensorWidth = 20;\n    }\n    PanSensorHeight = allowedOrdinal('panning sensor height', Options.PanSensorHeight);\n    if (PanSensorHeight == null) {\n        PanSensorHeight = 20;\n    }\n    PanSpeed = allowedOrdinal('panning speed', Options.PanSpeed);\n    if (PanSpeed == null) {\n        PanSpeed = 10;\n    }\n    if (ValueIsPosition(Options.onDragStart)) {\n        var _a = Options.onDragStart, x_1 = _a.x, y_1 = _a.y;\n        onDragStart = function () { return ({ x: x_1, y: y_1 }); };\n    }\n    else {\n        onDragStart = allowedFunction('\"onDragStart\" handler', Options.onDragStart);\n    }\n    onDragMove = allowedFunction('\"onDragMove\" handler', Options.onDragMove);\n    onDragEnd = allowedFunction('\"onDragEnd\" handler', Options.onDragEnd);\n    return {\n        Extras: Extras,\n        relativeTo: relativeTo,\n        onlyFrom: onlyFrom,\n        neverFrom: neverFrom,\n        Dummy: Dummy,\n        DummyOffsetX: DummyOffsetX,\n        DummyOffsetY: DummyOffsetY,\n        minX: minX,\n        minY: minY,\n        maxX: maxX,\n        maxY: maxY,\n        Pannable: Pannable,\n        PanSensorWidth: PanSensorWidth,\n        PanSensorHeight: PanSensorHeight,\n        PanSpeed: PanSpeed,\n        // @ts-ignore we cannot validate given functions any further\n        onDragStart: onDragStart,\n        onDragMove: onDragMove,\n        onDragEnd: onDragEnd,\n        onDragCancel: onDragCancel\n    };\n}\n/**** use:asDraggable={options} ****/\nfunction asDraggable(Element, Options) {\n    var isDragged;\n    var currentDraggableOptions;\n    var PositionReference; // element with user coordinate system\n    var ReferenceDeltaX, ReferenceDeltaY; // mouse -> user coord.s\n    var PositioningWasDelayed; // workaround for prob. with \"drag\" events\n    var DragImage;\n    var initialPosition; // given in user coordinates\n    var lastPosition; // dto.\n    isDragged = false;\n    currentDraggableOptions = parsedDraggableOptions(Options);\n    /**** startDragging ****/\n    function startDragging(originalEvent) {\n        var Options = currentDraggableOptions;\n        if (fromForbiddenElement(Element, Options, originalEvent)) {\n            originalEvent.stopPropagation();\n            originalEvent.preventDefault();\n            return false;\n        }\n        PositionReference = PositionReferenceFor(Element, Options);\n        var relativePosition = Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, PositionReference); // relative to reference element\n        ReferenceDeltaX = ReferenceDeltaY = 0;\n        initialPosition = { x: 0, y: 0 };\n        if (Options.onDragStart == null) {\n            initialPosition = { x: 0, y: 0 }; // given in user coordinates\n        }\n        else {\n            try {\n                var StartPosition = Options.onDragStart(Options.Extras);\n                if (ValueIsPlainObject(StartPosition)) {\n                    var x = allowedFiniteNumber('x start position', StartPosition.x);\n                    var y = allowedFiniteNumber('y start position', StartPosition.y);\n                    ReferenceDeltaX = x - relativePosition.left;\n                    ReferenceDeltaY = y - relativePosition.top;\n                    x = constrained(x, Options.minX, Options.maxX);\n                    y = constrained(y, Options.minY, Options.maxY);\n                    initialPosition = { x: x, y: y }; // given in user coordinates\n                }\n            }\n            catch (Signal) {\n                console.error('\"onDragStart\" handler failed', Signal);\n            }\n        }\n        lastPosition = initialPosition;\n        PositioningWasDelayed = false; // initializes workaround\n        if (Options.Dummy == null) {\n            Options.Dummy = 'none'; // this is the default for \"use.asDraggable\"\n        }\n        DragImage = DragImageFor(Element, Options);\n        if ((DragImage != null) && (originalEvent.dataTransfer != null)) {\n            var OffsetX = Options.DummyOffsetX;\n            var OffsetY = Options.DummyOffsetY;\n            if ((OffsetX == null) || (OffsetY == null)) {\n                var PositionInDraggable = Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, Element);\n                if (OffsetX == null) {\n                    OffsetX = PositionInDraggable.left;\n                }\n                if (OffsetY == null) {\n                    OffsetY = PositionInDraggable.top;\n                }\n            }\n            switch (true) {\n                case (Options.Dummy === 'none'):\n                    originalEvent.dataTransfer.setDragImage(DragImage, 0, 0);\n                    setTimeout(function () {\n                        document.body.removeChild(DragImage);\n                    }, 0);\n                    break;\n                case ValueIsString(Options.Dummy):\n                    originalEvent.dataTransfer.setDragImage(DragImage, OffsetX, OffsetY);\n                    setTimeout(function () {\n                        document.body.removeChild(DragImage.parentElement);\n                    }, 0);\n                    break;\n                default:\n                    originalEvent.dataTransfer.setDragImage(DragImage, OffsetX, OffsetY);\n            }\n        }\n        if (originalEvent.dataTransfer != null) {\n            originalEvent.dataTransfer.effectAllowed = 'none';\n        }\n        isDragged = true;\n        setTimeout(function () { return Element.classList.add('dragged'); }, 0);\n        originalEvent.stopPropagation();\n    }\n    /**** continueDragging ****/\n    function continueDragging(originalEvent) {\n        if (!isDragged) {\n            return false;\n        }\n        var Options = currentDraggableOptions;\n        if ((originalEvent.screenX === 0) && (originalEvent.screenY === 0) &&\n            !PositioningWasDelayed) {\n            PositioningWasDelayed = true; // last \"drag\" event contains wrong coord.s\n        }\n        else {\n            PositioningWasDelayed = false;\n            performPanningFor('draggable', Element, Options, originalEvent.pageX, originalEvent.pageY);\n            var relativePosition = Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, PositionReference); // relative to reference element\n            var x = relativePosition.left + ReferenceDeltaX; // in user coordinates\n            var y = relativePosition.top + ReferenceDeltaY;\n            x = constrained(x, Options.minX, Options.maxX);\n            y = constrained(y, Options.minY, Options.maxY);\n            var dx = x - lastPosition.x; // calculated AFTER constraining x,y\n            var dy = y - lastPosition.y; // dto.\n            lastPosition = { x: x, y: y };\n            invokeHandler('onDragMove', Options, x, y, dx, dy, Options.Extras);\n        }\n        originalEvent.stopPropagation();\n    }\n    /**** finishDragging ****/\n    function finishDragging(originalEvent) {\n        if (!isDragged) {\n            return false;\n        }\n        //    continueDragging(originalEvent)           // NO! positions might be wrong!\n        var Options = currentDraggableOptions;\n        if (Options.onDragEnd != null) {\n            var x = constrained(lastPosition.x, Options.minX, Options.maxX);\n            var y = constrained(lastPosition.y, Options.minY, Options.maxY);\n            var dx = x - lastPosition.x;\n            var dy = y - lastPosition.y;\n            invokeHandler('onDragEnd', Options, x, y, dx, dy, Options.Extras);\n        }\n        isDragged = false;\n        Element.classList.remove('dragged');\n        originalEvent.stopPropagation();\n    }\n    /**** updateDraggableOptions ****/\n    function updateDraggableOptions(Options) {\n        Options = parsedDraggableOptions(Options);\n        if ((currentDraggableOptions.Extras == null) && (Options.Extras != null)) {\n            currentDraggableOptions.Extras = Options.Extras;\n        } // Extras may be set with delay, but remain constant afterwards\n        currentDraggableOptions.Dummy = (Options.Dummy || currentDraggableOptions.Dummy);\n        currentDraggableOptions.minX = Options.minX;\n        currentDraggableOptions.minY = Options.minY;\n        currentDraggableOptions.maxX = Options.maxX;\n        currentDraggableOptions.maxY = Options.maxY;\n        currentDraggableOptions.Pannable = Options.Pannable;\n        currentDraggableOptions.PanSensorWidth = Options.PanSensorWidth;\n        currentDraggableOptions.PanSensorHeight = Options.PanSensorHeight;\n        currentDraggableOptions.PanSpeed = Options.PanSpeed;\n        currentDraggableOptions.onDragStart = (Options.onDragStart || currentDraggableOptions.onDragStart); // may be used to update initial position for subsequent drags\n    }\n    Element.setAttribute('draggable', 'true');\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragstart', startDragging);\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('drag', continueDragging);\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragend', finishDragging);\n    return { update: updateDraggableOptions };\n}\n/**** fromForbiddenElement ****/\nfunction fromForbiddenElement(Element, Options, originalEvent) {\n    if ((Options.onlyFrom != null) || (Options.neverFrom != null)) {\n        var x = originalEvent.clientX;\n        var y = originalEvent.clientY;\n        var touchedElement = document.elementFromPoint(x, y);\n        //    elementFromPoint considers elements with \"pointer-events\" <> \"none\" only\n        //    but sometimes, \"pointer-events:none\" is needed for proper operation\n        touchedElement = innerElementOf(touchedElement, x, y);\n        if (Options.onlyFrom != null) {\n            var fromElement = touchedElement.closest(Options.onlyFrom);\n            if ((Element !== fromElement) && !Element.contains(fromElement)) {\n                return true;\n            }\n        }\n        if (Options.neverFrom != null) {\n            var fromElement = touchedElement.closest(Options.neverFrom);\n            if ((Element === fromElement) || Element.contains(fromElement)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/**** innerElementOf ****/\nfunction innerElementOf(Candidate, x, y) {\n    var innerElements = Candidate.children;\n    for (var i = 0, l = innerElements.length; i < l; i++) {\n        var innerElement = innerElements[i];\n        var Position = Conversion.fromLocalTo('viewport', { left: 0, top: 0 }, innerElement);\n        if ((x < Position.left) || (y < Position.top)) {\n            continue;\n        }\n        if (x > Position.left + innerElement.offsetWidth - 1) {\n            continue;\n        }\n        if (y > Position.top + innerElement.offsetHeight - 1) {\n            continue;\n        }\n        return innerElementOf(innerElement, x, y);\n    }\n    return Candidate; // this is the innermost element at (x,y)\n}\n//-------------------------------------------------------------------------------\n//--               use:asDroppable={options} - \"drag\" and \"drop\"               --\n//-------------------------------------------------------------------------------\nvar DropOperations = ['copy', 'move', 'link'];\n/**** parsedDroppableOptions ****/\nfunction parsedDroppableOptions(Options) {\n    Options = allowedPlainObject('drop options', Options) || {};\n    var Operations, DataToOffer;\n    var onDropZoneEnter, onDropZoneHover, onDropZoneLeave;\n    var onDropped;\n    Operations = parsedOperations('list of allowed operations', Options.Operations, 'copy');\n    DataToOffer = Object.assign({}, allowedPlainObject('data to be offered', Options.DataToOffer));\n    if ('none' in DataToOffer)\n        throwError('InvalidArgument: \"none\" is not a valid data type');\n    onDropZoneEnter = allowedFunction('\"onDropZoneEnter\" handler', Options.onDropZoneEnter);\n    onDropZoneHover = allowedFunction('\"onDropZoneHover\" handler', Options.onDropZoneHover);\n    onDropZoneLeave = allowedFunction('\"onDropZoneLeave\" handler', Options.onDropZoneLeave);\n    onDropped = allowedFunction('\"onDropped\" handler', Options.onDropped);\n    return {\n        Operations: Operations,\n        DataToOffer: DataToOffer,\n        // @ts-ignore we cannot validate given functions any further\n        onDropZoneEnter: onDropZoneEnter,\n        onDropZoneHover: onDropZoneHover,\n        onDropZoneLeave: onDropZoneLeave,\n        onDropped: onDropped\n    };\n}\n/**** use:asDroppable={options} ****/\nfunction asDroppable(Element, Options) {\n    var isDragged;\n    var currentDraggableOptions;\n    var currentDroppableOptions;\n    var PositionReference; // element with user coordinate system\n    var ReferenceDeltaX, ReferenceDeltaY; // mouse -> user coord.s\n    var PositioningWasDelayed; // workaround for prob. with \"drag\" events\n    var DragImage;\n    var initialPosition; // given in user coordinates\n    var lastPosition; // dto.\n    var lastDropZoneElement;\n    var lastDropZoneExtras;\n    isDragged = false;\n    currentDraggableOptions = parsedDraggableOptions(Options);\n    currentDroppableOptions = parsedDroppableOptions(Options);\n    /**** startDragging ****/\n    function startDragging(originalEvent) {\n        var Options = Object.assign({}, currentDraggableOptions, currentDroppableOptions);\n        if (fromForbiddenElement(Element, Options, originalEvent)) {\n            originalEvent.stopPropagation();\n            originalEvent.preventDefault();\n            return false;\n        }\n        PositionReference = PositionReferenceFor(Element, Options);\n        var relativePosition = Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, PositionReference); // relative to reference element\n        ReferenceDeltaX = ReferenceDeltaY = 0;\n        initialPosition = { x: 0, y: 0 };\n        if (Options.onDragStart == null) {\n            initialPosition = { x: 0, y: 0 }; // given in user coordinates\n        }\n        else {\n            try {\n                var StartPosition = Options.onDragStart(Options.Extras);\n                if (ValueIsPlainObject(StartPosition)) {\n                    var x = allowedFiniteNumber('x start position', StartPosition.x);\n                    var y = allowedFiniteNumber('y start position', StartPosition.y);\n                    ReferenceDeltaX = x - relativePosition.left;\n                    ReferenceDeltaY = y - relativePosition.top;\n                    x = constrained(x, Options.minX, Options.maxX);\n                    y = constrained(y, Options.minY, Options.maxY);\n                    initialPosition = { x: x, y: y }; // given in user coordinates\n                }\n            }\n            catch (Signal) {\n                console.error('\"onDragStart\" handler failed', Signal);\n            }\n        }\n        lastPosition = initialPosition;\n        lastDropZoneElement = undefined;\n        lastDropZoneExtras = undefined;\n        PositioningWasDelayed = false; // initializes workaround\n        if (Options.Dummy == null) {\n            Options.Dummy = 'standard'; // this is the default for \"use.asDroppable\"\n        }\n        DragImage = DragImageFor(Element, Options);\n        if ((DragImage != null) && (originalEvent.dataTransfer != null)) {\n            var OffsetX = Options.DummyOffsetX;\n            var OffsetY = Options.DummyOffsetY;\n            if ((OffsetX == null) || (OffsetY == null)) {\n                var PositionInDraggable = Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, Element);\n                if (OffsetX == null) {\n                    OffsetX = PositionInDraggable.left;\n                }\n                if (OffsetY == null) {\n                    OffsetY = PositionInDraggable.top;\n                }\n            }\n            switch (true) {\n                case (Options.Dummy === 'none'):\n                    originalEvent.dataTransfer.setDragImage(DragImage, 0, 0);\n                    setTimeout(function () {\n                        document.body.removeChild(DragImage);\n                    }, 0);\n                    break;\n                case ValueIsString(Options.Dummy):\n                    originalEvent.dataTransfer.setDragImage(DragImage, OffsetX, OffsetY);\n                    setTimeout(function () {\n                        document.body.removeChild(DragImage.parentElement);\n                    }, 0);\n                    break;\n                default:\n                    originalEvent.dataTransfer.setDragImage(DragImage, OffsetX, OffsetY);\n            }\n        }\n        if (originalEvent.dataTransfer != null) {\n            var allowedEffects = allowedEffectsFrom(Options.Operations);\n            originalEvent.dataTransfer.effectAllowed = allowedEffects;\n            if (ObjectIsNotEmpty(Options.DataToOffer)) {\n                for (var Type in Options.DataToOffer) {\n                    if (Options.DataToOffer.hasOwnProperty(Type)) {\n                        originalEvent.dataTransfer.setData(Type, Options.DataToOffer[Type]);\n                    }\n                }\n            }\n        }\n        Context.currentDroppableExtras = Options.Extras;\n        Context.currentDropZoneExtras = undefined;\n        Context.currentDropZonePosition = undefined;\n        Context.currentDropZoneElement = undefined;\n        Context.DroppableWasDropped = false;\n        Context.currentDropOperation = undefined;\n        Context.currentTypeTransferred = undefined;\n        Context.currentDataTransferred = undefined;\n        isDragged = true;\n        setTimeout(function () { return Element.classList.add('dragged'); }, 0);\n        originalEvent.stopPropagation();\n    }\n    /**** continueDragging ****/\n    function continueDragging(originalEvent) {\n        if (!isDragged) {\n            return false;\n        }\n        var Options = Object.assign({}, currentDraggableOptions, currentDroppableOptions);\n        if ((originalEvent.screenX === 0) && (originalEvent.screenY === 0) &&\n            !PositioningWasDelayed) {\n            PositioningWasDelayed = true; // last \"drag\" event contains wrong coord.s\n        }\n        else {\n            PositioningWasDelayed = false;\n            performPanningFor('draggable', Element, Options, originalEvent.pageX, originalEvent.pageY);\n            var relativePosition = Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, PositionReference); // relative to reference element\n            var x = relativePosition.left + ReferenceDeltaX; // in user coordinates\n            var y = relativePosition.top + ReferenceDeltaY;\n            x = constrained(x, Options.minX, Options.maxX);\n            y = constrained(y, Options.minY, Options.maxY);\n            var dx = x - lastPosition.x; // calculated AFTER constraining x,y\n            var dy = y - lastPosition.y; // dto.\n            lastPosition = { x: x, y: y };\n            invokeHandler('onDragMove', Options, x, y, dx, dy, Options.Extras);\n        }\n        if (Context.currentDropZoneElement === lastDropZoneElement) {\n            if (Context.currentDropZoneElement != null) {\n                invokeHandler('onDropZoneHover', Options, Context.currentDropZonePosition.x, Context.currentDropZonePosition.y, Context.currentDropZoneExtras, Options.Extras);\n            }\n        }\n        else {\n            if (Context.currentDropZoneElement == null) {\n                Element.classList.remove('droppable');\n                invokeHandler('onDropZoneLeave', Options, lastDropZoneExtras, Options.Extras);\n            }\n            else {\n                Element.classList.add('droppable');\n                invokeHandler('onDropZoneEnter', Options, Context.currentDropZonePosition.x, Context.currentDropZonePosition.y, lastDropZoneExtras, Options.Extras);\n            }\n            lastDropZoneElement = Context.currentDropZoneElement;\n            lastDropZoneExtras = Context.currentDropZoneExtras;\n        }\n        originalEvent.stopPropagation();\n    }\n    /**** finishDragging ****/\n    function finishDragging(originalEvent) {\n        if (!isDragged) {\n            return false;\n        }\n        //    continueDragging(originalEvent)           // NO! positions might be wrong!\n        var Options = Object.assign({}, currentDraggableOptions, currentDroppableOptions);\n        if (Context.DroppableWasDropped) {\n            invokeHandler('onDropped', Options, Context.currentDropZonePosition.x, Context.currentDropZonePosition.y, Context.currentDropOperation, Context.currentTypeTransferred, Context.currentDataTransferred, Context.currentDropZoneExtras, Options.Extras);\n            Context.currentDropZoneExtras = undefined;\n            Context.currentDropZonePosition = undefined;\n            Context.currentDropZoneElement = undefined;\n            Context.DroppableWasDropped = false;\n            Context.currentDropOperation = undefined;\n            Context.currentTypeTransferred = undefined;\n            Context.currentDataTransferred = undefined;\n        }\n        if (Options.onDragEnd != null) {\n            var x = constrained(lastPosition.x, Options.minX, Options.maxX);\n            var y = constrained(lastPosition.y, Options.minY, Options.maxY);\n            var dx = x - lastPosition.x;\n            var dy = y - lastPosition.y;\n            invokeHandler('onDragEnd', Options, x, y, dx, dy, Options.Extras);\n        }\n        Context.currentDroppableExtras = undefined;\n        isDragged = false;\n        Element.classList.remove('dragged', 'droppable');\n        originalEvent.stopPropagation();\n    }\n    /**** updateDraggableOptions ****/\n    function updateDraggableOptions(Options) {\n        Options = parsedDraggableOptions(Options);\n        if ((currentDraggableOptions.Extras == null) && (Options.Extras != null)) {\n            currentDraggableOptions.Extras = Options.Extras;\n        } // Extras may be set with delay, but remain constant afterwards\n        currentDraggableOptions.Dummy = (Options.Dummy || currentDraggableOptions.Dummy);\n        currentDraggableOptions.minX = Options.minX;\n        currentDraggableOptions.minY = Options.minY;\n        currentDraggableOptions.maxX = Options.maxX;\n        currentDraggableOptions.maxY = Options.maxY;\n        currentDraggableOptions.Pannable = Options.Pannable;\n        currentDraggableOptions.PanSensorWidth = Options.PanSensorWidth;\n        currentDraggableOptions.PanSensorHeight = Options.PanSensorHeight;\n        currentDraggableOptions.PanSpeed = Options.PanSpeed;\n        currentDraggableOptions.onDragStart = (Options.onDragStart || currentDraggableOptions.onDragStart); // may be used to update initial position for subsequent drags\n    }\n    /**** updateDroppableOptions ****/\n    function updateDroppableOptions(Options) {\n        Options = parsedDroppableOptions(Options);\n        currentDroppableOptions.Operations = Options.Operations;\n        currentDroppableOptions.DataToOffer = Options.DataToOffer;\n    }\n    Element.setAttribute('draggable', 'true');\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragstart', startDragging);\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('drag', continueDragging);\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragend', finishDragging);\n    return {\n        update: function (Options) {\n            updateDraggableOptions(Options);\n            updateDroppableOptions(Options);\n        }\n    };\n}\n/**** parsedDropZoneOptions ****/\nfunction parsedDropZoneOptions(Options) {\n    Options = allowedPlainObject('drop zone options', Options) || {};\n    var Extras, TypesToAccept, HoldDelay;\n    var Pannable;\n    var PanSensorWidth, PanSensorHeight, PanSpeed;\n    var onDroppableEnter, onDroppableMove, onDroppableLeave;\n    var onDroppableHold, onDroppableRelease, onDrop;\n    Extras = Options.Extras;\n    allowPlainObject('data types to be accepted', Options.TypesToAccept);\n    TypesToAccept = Object.create(null);\n    if ((Options.TypesToAccept != null) && ('none' in Options.TypesToAccept))\n        throwError('InvalidArgument: \"none\" is not a valid data type');\n    for (var Type in Options.TypesToAccept) {\n        if (Options.TypesToAccept.hasOwnProperty(Type)) {\n            TypesToAccept[Type] = parsedOperations('list of accepted operations for type ' + quoted(Type), Options.TypesToAccept[Type]);\n        }\n    }\n    HoldDelay = allowedIntegerInRange('min. time to hold', Options.HoldDelay, 0);\n    switch (true) {\n        case (Options.Pannable == null):\n            Pannable = undefined;\n            break;\n        case (Options.Pannable === 'this'):\n        case ValueIsNonEmptyString(Options.Pannable):\n        case (Options.Pannable instanceof HTMLElement):\n        case (Options.Pannable instanceof SVGElement):\n            //    case (Options.Pannable instanceof MathMLElement):\n            Pannable = Options.Pannable;\n            break;\n        default: throwError('InvalidArgument: invalid \"Pannable\" specification given');\n    }\n    PanSensorWidth = allowedOrdinal('panning sensor width', Options.PanSensorWidth);\n    if (PanSensorWidth == null) {\n        PanSensorWidth = 20;\n    }\n    PanSensorHeight = allowedOrdinal('panning sensor height', Options.PanSensorHeight);\n    if (PanSensorHeight == null) {\n        PanSensorHeight = 20;\n    }\n    PanSpeed = allowedOrdinal('panning speed', Options.PanSpeed);\n    if (PanSpeed == null) {\n        PanSpeed = 10;\n    }\n    onDroppableEnter = allowedFunction('\"onDroppableEnter\" handler', Options.onDroppableEnter);\n    onDroppableMove = allowedFunction('\"onDroppableMove\" handler', Options.onDroppableMove);\n    onDroppableLeave = allowedFunction('\"onDroppableLeave\" handler', Options.onDroppableLeave);\n    onDroppableHold = allowedFunction('\"onDroppableHold\" handler', Options.onDroppableHold);\n    onDroppableRelease = allowedFunction('\"onDroppableRelease\" handler', Options.onDroppableRelease);\n    onDrop = allowedFunction('\"onDrop\" handler', Options.onDrop);\n    return {\n        Extras: Extras,\n        TypesToAccept: TypesToAccept,\n        HoldDelay: HoldDelay,\n        Pannable: Pannable,\n        PanSensorWidth: PanSensorWidth,\n        PanSensorHeight: PanSensorHeight,\n        PanSpeed: PanSpeed,\n        // @ts-ignore we cannot validate given functions any further\n        onDroppableEnter: onDroppableEnter,\n        onDroppableMove: onDroppableMove,\n        onDroppableLeave: onDroppableLeave,\n        // @ts-ignore we cannot validate given functions any further\n        onDroppableHold: onDroppableHold,\n        onDroppableRelease: onDroppableRelease,\n        onDrop: onDrop,\n    };\n}\n/**** use:asDropZone={options} ****/\nfunction asDropZone(Element, Options) {\n    var currentDropZoneOptions;\n    currentDropZoneOptions = parsedDropZoneOptions(Options);\n    /**** enteredByDroppable ****/\n    function enteredByDroppable(originalEvent) {\n        var Options = currentDropZoneOptions;\n        performPanningFor('dropzone', Element, Options, originalEvent.pageX, originalEvent.pageY);\n        var DropZonePosition = asPosition(Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, Element)); // relative to DropZone element\n        if (ValueIsNumber(Options.HoldDelay) && (Options.HoldDelay > 0) &&\n            (Context.HoldWasTriggeredForElement !== Element)) {\n            startHoldTimer(DropZonePosition);\n        }\n        if ((originalEvent.dataTransfer == null) ||\n            (originalEvent.dataTransfer.effectAllowed === 'none')) {\n            return;\n        }\n        var wantedOperation = originalEvent.dataTransfer.dropEffect;\n        if (wantedOperation === 'none') { // workaround for browser bug\n            switch (originalEvent.dataTransfer.effectAllowed) {\n                case 'copy':\n                case 'move':\n                case 'link':\n                    wantedOperation = originalEvent.dataTransfer.effectAllowed;\n                    break;\n                default:\n                    wantedOperation = undefined;\n            }\n        }\n        var TypesToAccept = Options.TypesToAccept;\n        var offeredTypeList = originalEvent.dataTransfer.types.filter(function (Type) {\n            return (Type in TypesToAccept) &&\n                (TypesToAccept[Type] !== '');\n        } // \"getData\" is not available here\n        ); // cannot use \"originalEvent.dataTransfer.dropEffect\" due to browser bug\n        if (offeredTypeList.length === 0) {\n            return;\n        }\n        var accepted = ResultOfHandler('onDroppableEnter', Options, DropZonePosition.x, DropZonePosition.y, wantedOperation, offeredTypeList, Context.currentDroppableExtras, Options.Extras);\n        if (accepted === false) { // i.e. explicit \"false\" result required\n            return;\n        }\n        else {\n            Context.currentDropZoneExtras = Options.Extras;\n            Context.currentDropZoneElement = Element;\n            Context.currentDropZonePosition = DropZonePosition;\n            Element.classList.add('hovered');\n            originalEvent.preventDefault();\n            originalEvent.stopPropagation();\n        }\n    }\n    /**** hoveredByDroppable ****/\n    // warning: I've already seen leftByDroppable followed by hoveredByDropable!\n    function hoveredByDroppable(originalEvent) {\n        var Options = currentDropZoneOptions;\n        performPanningFor('dropzone', Element, Options, originalEvent.pageX, originalEvent.pageY);\n        var DropZonePosition = asPosition(Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, Element)); // relative to DropZone element\n        if (ValueIsNumber(Options.HoldDelay) && (Options.HoldDelay > 0) &&\n            (Context.HoldWasTriggeredForElement !== Element)) {\n            if (Context.HoldPosition == null) { // see above for reasoning\n                startHoldTimer(DropZonePosition);\n            }\n            else {\n                continueHoldTimer(DropZonePosition);\n            }\n        }\n        if ((originalEvent.dataTransfer == null) ||\n            (originalEvent.dataTransfer.effectAllowed === 'none') ||\n            (Context.currentDropZoneElement != null) && (Context.currentDropZoneElement !== Element)) {\n            Element.classList.remove('hovered');\n            return;\n        }\n        // in some browsers, it may be that (currentDropZone !== Element)!\n        var wantedOperation = originalEvent.dataTransfer.dropEffect;\n        if (wantedOperation === 'none') { // workaround for browser bug\n            switch (originalEvent.dataTransfer.effectAllowed) {\n                case 'copy':\n                case 'move':\n                case 'link':\n                    wantedOperation = originalEvent.dataTransfer.effectAllowed;\n                    break;\n                default:\n                    wantedOperation = undefined;\n            }\n        }\n        var TypesToAccept = Options.TypesToAccept;\n        var offeredTypeList = originalEvent.dataTransfer.types.filter(function (Type) {\n            return (Type in TypesToAccept) &&\n                (TypesToAccept[Type] !== '');\n        } // \"getData\" is not available here\n        ); // cannot use \"originalEvent.dataTransfer.dropEffect\" due to browser bug\n        if (offeredTypeList.length === 0) {\n            if (Context.currentDropZoneElement === Element) {\n                Context.currentDropZoneExtras = undefined;\n                Context.currentDropZoneElement = undefined;\n                Context.currentDropZonePosition = undefined;\n            }\n            Element.classList.remove('hovered');\n            return;\n        }\n        Context.currentDropZonePosition = DropZonePosition;\n        var accepted = ResultOfHandler('onDroppableMove', Options, Context.currentDropZonePosition.x, Context.currentDropZonePosition.y, wantedOperation, offeredTypeList, Context.currentDroppableExtras, Options.Extras);\n        if (accepted === false) { // i.e. explicit \"false\" result required\n            Context.currentDropZoneExtras = undefined;\n            Context.currentDropZoneElement = undefined;\n            Context.currentDropZonePosition = undefined;\n            Element.classList.remove('hovered');\n        }\n        else { // warning: sometimes (currentDropZone !== Element)!\n            Context.currentDropZoneExtras = Options.Extras;\n            Context.currentDropZoneElement = Element;\n            //      Context.currentDropZonePosition has already been set before\n            Element.classList.add('hovered');\n            originalEvent.preventDefault(); // never allow default action!\n            //      originalEvent.stopPropagation()\n            return false; // special return value when drop seems acceptable\n        }\n    }\n    /**** leftByDroppable ****/\n    function leftByDroppable(originalEvent) {\n        Element.classList.remove('hovered');\n        Context.DropZonePanning = false;\n        stopHoldTimer();\n        var Options = currentDropZoneOptions;\n        if (Context.currentDropZoneElement === Element) {\n            if (Context.currentTypeTransferred == null) { // see explanation below\n                Context.currentDropZoneExtras = undefined;\n                Context.currentDropZoneElement = undefined;\n                Context.DroppableWasDropped = false;\n                Context.currentDropZonePosition = undefined;\n                Context.currentTypeTransferred = undefined;\n                Context.currentDataTransferred = undefined;\n                invokeHandler('onDroppableLeave', Options, Context.currentDroppableExtras, Options.Extras);\n            } // swallow \"dragleave\" right after successful \"drop\"\n            originalEvent.preventDefault();\n            originalEvent.stopPropagation();\n        }\n    }\n    /**** droppedByDroppable ****/\n    function droppedByDroppable(originalEvent) {\n        Element.classList.remove('hovered');\n        Context.DropZonePanning = false;\n        stopHoldTimer();\n        if ((originalEvent.dataTransfer == null) ||\n            (originalEvent.dataTransfer.effectAllowed === 'none') ||\n            (Context.currentDropZoneElement !== Element)) {\n            return;\n        }\n        //    originalEvent.preventDefault()\n        originalEvent.stopPropagation();\n        var Options = currentDropZoneOptions;\n        var wantedOperation = originalEvent.dataTransfer.dropEffect;\n        if (wantedOperation === 'none') { // workaround for browser bug\n            switch (originalEvent.dataTransfer.effectAllowed) {\n                case 'copy':\n                case 'move':\n                case 'link':\n                    wantedOperation = originalEvent.dataTransfer.effectAllowed;\n                    break;\n                default:\n                    wantedOperation = undefined;\n            }\n        }\n        var TypesToAccept = Options.TypesToAccept;\n        var offeredTypeList = originalEvent.dataTransfer.types.filter(function (Type) {\n            return (Type in TypesToAccept) && ((wantedOperation == null) ||\n                (TypesToAccept[Type].indexOf(wantedOperation) >= 0));\n        }); // cannot use \"originalEvent.dataTransfer.dropEffect\" due to browser bug\n        if (offeredTypeList.length === 0) {\n            Context.currentDropZoneExtras = undefined;\n            Context.currentDropZonePosition = undefined;\n            Context.DroppableWasDropped = false;\n            Context.currentDropOperation = undefined;\n            Context.currentTypeTransferred = undefined;\n            Context.currentDataTransferred = undefined;\n            invokeHandler('onDroppableLeave', Options, Context.currentDroppableExtras, Options.Extras);\n            return;\n        }\n        Context.currentDropZonePosition = asPosition(Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, Element)); // relative to DropZone element\n        var offeredData = {};\n        offeredTypeList.forEach(\n        // @ts-ignore originalEvent.dataTransfer definitely exists\n        function (Type) { return offeredData[Type] = originalEvent.dataTransfer.getData(Type); });\n        var acceptedType = ResultOfHandler('onDrop', Options, Context.currentDropZonePosition.x, Context.currentDropZonePosition.y, wantedOperation, offeredData, Context.currentDroppableExtras, Options.Extras);\n        switch (true) {\n            case (acceptedType == null):\n                Context.DroppableWasDropped = true;\n                Context.currentDropOperation = wantedOperation;\n                Context.currentTypeTransferred = undefined;\n                Context.currentDataTransferred = undefined;\n                break;\n            case ValueIsOneOf(acceptedType, offeredTypeList):\n                Context.DroppableWasDropped = true;\n                Context.currentDropOperation = wantedOperation;\n                Context.currentTypeTransferred = acceptedType;\n                Context.currentDataTransferred = offeredData[acceptedType];\n                break;\n            default: // handler should return false in case of failure\n                Context.DroppableWasDropped = false;\n                Context.currentDropZoneExtras = undefined;\n                Context.currentDropZonePosition = undefined;\n                Context.currentDropOperation = undefined;\n                Context.currentTypeTransferred = undefined;\n                Context.currentDataTransferred = undefined;\n            //        invokeHandler('onDroppableLeave', Options, currentDroppableExtras, Options.Extras)\n        }\n        Context.currentDropZoneElement = undefined;\n    }\n    /**** startHoldTimer ****/\n    function startHoldTimer(DropZonePosition) {\n        Context.HoldPosition = DropZonePosition;\n        if (Context.HoldTimer != null) {\n            clearTimeout(Context.HoldTimer);\n        }\n        Context.HoldTimer = setTimeout(triggerHold, Options.HoldDelay);\n    }\n    /**** continueHoldTimer ****/\n    function continueHoldTimer(DropZonePosition) {\n        var Offset = (Math.pow((Context.HoldPosition.x - DropZonePosition.x), 2) +\n            Math.pow((Context.HoldPosition.y - DropZonePosition.y), 2));\n        if (Offset > 25) {\n            Context.HoldPosition = DropZonePosition;\n            clearTimeout(Context.HoldTimer);\n            Context.HoldTimer = setTimeout(triggerHold, Options.HoldDelay);\n        }\n    }\n    /**** stopHoldTimer ****/\n    function stopHoldTimer() {\n        delete Context.HoldPosition;\n        if (Context.HoldTimer != null) {\n            clearTimeout(Context.HoldTimer);\n            delete Context.HoldTimer;\n        }\n        delete Context.HoldWasTriggeredForElement;\n    }\n    /**** triggerHold ****/\n    function triggerHold() {\n        var DropZonePosition = ( // sometimes, there is no \"enteredByDroppable\"\n        Context.currentDropZonePosition || Context.HoldPosition);\n        delete Context.HoldPosition;\n        delete Context.HoldTimer;\n        Context.HoldWasTriggeredForElement = Element;\n        invokeHandler('onDroppableHold', Options, DropZonePosition.x, DropZonePosition.y, Context.currentDroppableExtras, Options.Extras);\n    }\n    /**** updateDropZoneOptions ****/\n    function updateDropZoneOptions(Options) {\n        Options = parsedDropZoneOptions(Options);\n        if ((currentDropZoneOptions.Extras == null) && (Options.Extras != null)) {\n            currentDropZoneOptions.Extras = Options.Extras;\n        } // Extras may be set with delay, but remain constant afterwards\n        currentDropZoneOptions.TypesToAccept = Options.TypesToAccept;\n        currentDropZoneOptions.HoldDelay = Options.HoldDelay;\n        currentDropZoneOptions.Pannable = Options.Pannable;\n        currentDropZoneOptions.PanSensorWidth = Options.PanSensorWidth;\n        currentDropZoneOptions.PanSensorHeight = Options.PanSensorHeight;\n        currentDropZoneOptions.PanSpeed = Options.PanSpeed;\n    }\n    Element.setAttribute('draggable', 'true');\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragenter', enteredByDroppable);\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragover', hoveredByDroppable);\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragleave', leftByDroppable);\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('drop', droppedByDroppable);\n    return { update: updateDropZoneOptions };\n}\n/**** ValueIsPosition ****/\nfunction ValueIsPosition(Candidate) {\n    return (ValueIsPlainObject(Candidate) &&\n        ValueIsFiniteNumber(Candidate.x) && ValueIsFiniteNumber(Candidate.y));\n}\n/**** asPosition ****/\nfunction asPosition(Value) {\n    return { x: Value.left, y: Value.top };\n}\n/**** PositionReferenceFor ****/\nfunction PositionReferenceFor(Element, Options) {\n    var PositionReference;\n    switch (true) {\n        case (Options.relativeTo === 'parent'):\n            PositionReference = Element.parentElement;\n            break;\n        case (Options.relativeTo === 'body'):\n            PositionReference = document.body;\n            break;\n        case (Options.relativeTo instanceof HTMLElement):\n        case (Options.relativeTo instanceof SVGElement):\n            //    case (Options.relativeTo instanceof MathMLElement):\n            PositionReference = Options.relativeTo;\n            if ((PositionReference != document.body) &&\n                !document.body.contains(PositionReference))\n                throwError('InvalidArgument: the HTML element given as \"relativeTo\" option ' +\n                    'is not part of this HTML document');\n            break;\n        default: // CSS selector\n            PositionReference = Element.closest(Options.relativeTo);\n    }\n    return (PositionReference == null ? document.body : PositionReference);\n}\n/**** DragImageFor ****/\nfunction DragImageFor(Element, Options) {\n    switch (true) {\n        case (Options.Dummy === 'standard'):\n            return undefined;\n        case (Options.Dummy === 'none'):\n            var invisibleDragImage = document.createElement('div');\n            invisibleDragImage.setAttribute('style', 'display:block; position:absolute; width:1px; height:1px; ' +\n                'background:transparent; border:none; margin:0px; padding:0px; ' +\n                'cursor:auto');\n            document.body.appendChild(invisibleDragImage);\n            return invisibleDragImage;\n        case ValueIsNonEmptyString(Options.Dummy): // may flicker shortly\n            var auxiliaryElement = document.createElement('div');\n            auxiliaryElement.style.display = 'block';\n            auxiliaryElement.style.position = 'absolute';\n            auxiliaryElement.style.left = (document.body.scrollWidth + 100) + 'px';\n            document.body.appendChild(auxiliaryElement);\n            auxiliaryElement.innerHTML = Options.Dummy;\n            return auxiliaryElement.children[0];\n        case (Options.Dummy instanceof HTMLElement):\n        case (Options.Dummy instanceof SVGElement):\n            //    case (Options.Dummy instanceof MathMLElement):\n            return Options.Dummy;\n        case ValueIsFunction(Options.Dummy):\n            var Candidate = undefined;\n            try {\n                Candidate = Options.Dummy(Options.Extras, Element);\n            }\n            catch (Signal) {\n                console.error('RuntimeError: creating draggable dummy failed', Signal);\n            }\n            if (Candidate != null) {\n                if ((Candidate instanceof HTMLElement) || (Candidate instanceof SVGElement)) {\n                    return Candidate;\n                }\n                else {\n                    console.error('InvalidArgument: the newly created draggable dummy is ' +\n                        'neither an HTML nor an SVG element');\n                }\n            }\n    }\n}\n/**** performPanningFor ****/\nfunction performPanningFor(Type, Element, Options, xOnPage, yOnPage) {\n    if ((Type === 'draggable') && Context.DropZonePanning) {\n        return;\n    }\n    if ((Options.Pannable == null) ||\n        ((Options.PanSensorWidth === 0) && (Options.PanSensorHeight === 0)) ||\n        (Options.PanSpeed === 0)) {\n        Context.DropZonePanning = false;\n        return;\n    }\n    var pannableElement;\n    switch (true) {\n        case ValueIsNonEmptyString(Options.Pannable):\n            pannableElement = Element.parentElement;\n            if (pannableElement != null) {\n                pannableElement = pannableElement.closest(Options.Pannable);\n            }\n            break;\n        case (Options.Pannable === 'this') && (Type === 'dropzone'):\n            pannableElement = Element;\n            break;\n        case (Options.Pannable instanceof HTMLElement):\n        case (Options.Pannable instanceof SVGElement):\n            //        case (Options.Pannable instanceof MathMLElement):\n            pannableElement = Options.Pannable;\n    }\n    if (pannableElement == null) {\n        Context.DropZonePanning = false;\n        return;\n    }\n    var _a = Conversion.fromDocumentTo('local', { left: xOnPage, top: yOnPage }, pannableElement), xInPannable = _a.left, yInPannable = _a.top;\n    if ((xInPannable >= 0) && (xInPannable < Options.PanSensorWidth)) {\n        pannableElement.scrollLeft = Math.max(0, pannableElement.scrollLeft - Options.PanSpeed);\n    }\n    var PannableWidth = pannableElement.clientWidth; // w/o scrollbar\n    if ((xInPannable >= PannableWidth - Options.PanSensorWidth) &&\n        (xInPannable < PannableWidth)) {\n        pannableElement.scrollLeft = Math.min(pannableElement.scrollLeft + Options.PanSpeed, pannableElement.scrollWidth - PannableWidth);\n    }\n    if ((yInPannable >= 0) && (yInPannable < Options.PanSensorHeight)) {\n        pannableElement.scrollTop = Math.max(0, pannableElement.scrollTop - Options.PanSpeed);\n    }\n    var PannableHeight = pannableElement.clientHeight; // w/o scrollbar\n    if ((yInPannable >= PannableHeight - Options.PanSensorHeight) &&\n        (yInPannable < PannableHeight)) {\n        pannableElement.scrollTop = Math.min(pannableElement.scrollTop + Options.PanSpeed, pannableElement.scrollHeight - PannableHeight);\n    }\n    Context.DropZonePanning = (Type === 'dropzone');\n}\n/**** parsedOperations ****/\nfunction parsedOperations(Description, Argument, Default) {\n    if (Default === void 0) { Default = 'copy move link'; }\n    var Operations = allowedString(Description, Argument) || Default;\n    switch (Operations.trim()) {\n        case 'all': return 'copy move link';\n        case 'none': return '';\n    }\n    var OperationList = Operations.trim().replace(/\\s+/g, ' ').split(' ');\n    allowListSatisfying(Description, OperationList, function (Operation) { return ValueIsOneOf(Operation, DropOperations); });\n    return OperationList.reduce(function (Result, Operation) { return (Result.indexOf(Operation) < 0 ? Result + Operation + ' ' : Result); }, ' ');\n}\nfunction allowedEffectsFrom(Operations) {\n    var EffectIndex = ( // Horner's method\n    (Operations.indexOf('move') < 0 ? 0 : 1) * 2 +\n        (Operations.indexOf('link') < 0 ? 0 : 1)) * 2 +\n        (Operations.indexOf('copy') < 0 ? 0 : 1);\n    return [\n        'none', 'copy', 'link', 'copyLink', 'move', 'copyMove', 'linkMove', 'all'\n    ][EffectIndex];\n}\n/**** invokeHandler ****/\nfunction invokeHandler(Name, Options) {\n    var Arguments = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        Arguments[_i - 2] = arguments[_i];\n    }\n    if (Options[Name] != null) {\n        try {\n            return Options[Name].apply(null, Arguments);\n        }\n        catch (Signal) {\n            console.error(quoted(Name) + ' handler failed', Signal);\n        }\n    }\n}\nvar ResultOfHandler = invokeHandler;\n\nexport { DropOperations, asDraggable, asDropZone, asDroppable };\n//# sourceMappingURL=svelte-drag-and-drop-actions.esm.js.map\n","class Pointer {\r\n    constructor(nativePointer) {\r\n        /** Unique ID for this pointer */\r\n        this.id = -1;\r\n        this.nativePointer = nativePointer;\r\n        this.pageX = nativePointer.pageX;\r\n        this.pageY = nativePointer.pageY;\r\n        this.clientX = nativePointer.clientX;\r\n        this.clientY = nativePointer.clientY;\r\n        if (self.Touch && nativePointer instanceof Touch) {\r\n            this.id = nativePointer.identifier;\r\n        }\r\n        else if (isPointerEvent(nativePointer)) {\r\n            // is PointerEvent\r\n            this.id = nativePointer.pointerId;\r\n        }\r\n    }\r\n    /**\r\n     * Returns an expanded set of Pointers for high-resolution inputs.\r\n     */\r\n    getCoalesced() {\r\n        if ('getCoalescedEvents' in this.nativePointer) {\r\n            const events = this.nativePointer\r\n                .getCoalescedEvents()\r\n                .map((p) => new Pointer(p));\r\n            // Firefox sometimes returns an empty list here. I'm not sure it's doing the right thing.\r\n            // https://github.com/w3c/pointerevents/issues/409\r\n            if (events.length > 0)\r\n                return events;\r\n            // Otherwise, Firefox falls through…\r\n        }\r\n        return [this];\r\n    }\r\n}\r\nconst isPointerEvent = (event) => 'pointerId' in event;\r\nconst isTouchEvent = (event) => 'changedTouches' in event;\r\nconst noop = () => { };\r\n/**\r\n * Track pointers across a particular element\r\n */\r\nclass PointerTracker {\r\n    /**\r\n     * Track pointers across a particular element\r\n     *\r\n     * @param element Element to monitor.\r\n     * @param options\r\n     */\r\n    constructor(_element, { start = () => true, move = noop, end = noop, rawUpdates = false, avoidPointerEvents = false, eventListenerOptions = { capture: false, passive: false, once: false }, } = {}) {\r\n        this._element = _element;\r\n        /**\r\n         * State of the tracked pointers when they were pressed/touched.\r\n         */\r\n        this.startPointers = [];\r\n        /**\r\n         * Latest state of the tracked pointers. Contains the same number of pointers, and in the same\r\n         * order as this.startPointers.\r\n         */\r\n        this.currentPointers = [];\r\n        /**\r\n         * Firefox has a bug where touch-based pointer events have a `buttons` of 0, when this shouldn't\r\n         * happen. https://bugzilla.mozilla.org/show_bug.cgi?id=1729440\r\n         *\r\n         * Usually we treat `buttons === 0` as no-longer-pressed. This set allows us to exclude these\r\n         * buggy Firefox events.\r\n         */\r\n        this._excludeFromButtonsCheck = new Set();\r\n        /**\r\n         * Listener for mouse/pointer starts.\r\n         *\r\n         * @param event This will only be a MouseEvent if the browser doesn't support pointer events.\r\n         */\r\n        this._pointerStart = (event) => {\r\n            if (isPointerEvent(event) && event.buttons === 0) {\r\n                // This is the buggy Firefox case. See _excludeFromButtonsCheck.\r\n                this._excludeFromButtonsCheck.add(event.pointerId);\r\n            }\r\n            else if (!(event.buttons & 1 /* LeftMouseOrTouchOrPenDown */)) {\r\n                return;\r\n            }\r\n            const pointer = new Pointer(event);\r\n            // If we're already tracking this pointer, ignore this event.\r\n            // This happens with mouse events when multiple buttons are pressed.\r\n            if (this.currentPointers.some((p) => p.id === pointer.id))\r\n                return;\r\n            if (!this._triggerPointerStart(pointer, event))\r\n                return;\r\n            // Add listeners for additional events.\r\n            // The listeners may already exist, but no harm in adding them again.\r\n            if (isPointerEvent(event)) {\r\n                const capturingElement = event.target && 'setPointerCapture' in event.target\r\n                    ? event.target\r\n                    : this._element;\r\n                capturingElement.setPointerCapture(event.pointerId);\r\n                this._element.addEventListener(this._rawUpdates ? 'pointerrawupdate' : 'pointermove', this._move, this._eventListenerOptions);\r\n                this._element.addEventListener('pointerup', this._pointerEnd, this._eventListenerOptions);\r\n                this._element.addEventListener('pointercancel', this._pointerEnd, this._eventListenerOptions);\r\n            }\r\n            else {\r\n                // MouseEvent\r\n                window.addEventListener('mousemove', this._move);\r\n                window.addEventListener('mouseup', this._pointerEnd);\r\n            }\r\n        };\r\n        /**\r\n         * Listener for touchstart.\r\n         * Only used if the browser doesn't support pointer events.\r\n         */\r\n        this._touchStart = (event) => {\r\n            for (const touch of Array.from(event.changedTouches)) {\r\n                this._triggerPointerStart(new Pointer(touch), event);\r\n            }\r\n        };\r\n        /**\r\n         * Listener for pointer/mouse/touch move events.\r\n         */\r\n        this._move = (event) => {\r\n            if (!isTouchEvent(event) &&\r\n                (!isPointerEvent(event) ||\r\n                    !this._excludeFromButtonsCheck.has(event.pointerId)) &&\r\n                event.buttons === 0 /* None */) {\r\n                // This happens in a number of buggy cases where the browser failed to deliver a pointerup\r\n                // or pointercancel. If we see the pointer moving without any buttons down, synthesize an end.\r\n                // https://github.com/w3c/pointerevents/issues/407\r\n                // https://github.com/w3c/pointerevents/issues/408\r\n                this._pointerEnd(event);\r\n                return;\r\n            }\r\n            const previousPointers = this.currentPointers.slice();\r\n            const changedPointers = isTouchEvent(event)\r\n                ? Array.from(event.changedTouches).map((t) => new Pointer(t))\r\n                : [new Pointer(event)];\r\n            const trackedChangedPointers = [];\r\n            for (const pointer of changedPointers) {\r\n                const index = this.currentPointers.findIndex((p) => p.id === pointer.id);\r\n                if (index === -1)\r\n                    continue; // Not a pointer we're tracking\r\n                trackedChangedPointers.push(pointer);\r\n                this.currentPointers[index] = pointer;\r\n            }\r\n            if (trackedChangedPointers.length === 0)\r\n                return;\r\n            this._moveCallback(previousPointers, trackedChangedPointers, event);\r\n        };\r\n        /**\r\n         * Call the end callback for this pointer.\r\n         *\r\n         * @param pointer Pointer\r\n         * @param event Related event\r\n         */\r\n        this._triggerPointerEnd = (pointer, event) => {\r\n            // Main button still down?\r\n            // With mouse events, you get a mouseup per mouse button, so the left button might still be down.\r\n            if (!isTouchEvent(event) &&\r\n                event.buttons & 1 /* LeftMouseOrTouchOrPenDown */) {\r\n                return false;\r\n            }\r\n            const index = this.currentPointers.findIndex((p) => p.id === pointer.id);\r\n            // Not a pointer we're interested in?\r\n            if (index === -1)\r\n                return false;\r\n            this.currentPointers.splice(index, 1);\r\n            this.startPointers.splice(index, 1);\r\n            this._excludeFromButtonsCheck.delete(pointer.id);\r\n            // The event.type might be a 'move' event due to workarounds for weird mouse behaviour.\r\n            // See _move for details.\r\n            const cancelled = !(event.type === 'mouseup' ||\r\n                event.type === 'touchend' ||\r\n                event.type === 'pointerup');\r\n            this._endCallback(pointer, event, cancelled);\r\n            return true;\r\n        };\r\n        /**\r\n         * Listener for mouse/pointer ends.\r\n         *\r\n         * @param event This will only be a MouseEvent if the browser doesn't support pointer events.\r\n         */\r\n        this._pointerEnd = (event) => {\r\n            if (!this._triggerPointerEnd(new Pointer(event), event))\r\n                return;\r\n            if (isPointerEvent(event)) {\r\n                if (this.currentPointers.length)\r\n                    return;\r\n                this._element.removeEventListener(this._rawUpdates ? 'pointerrawupdate' : 'pointermove', this._move);\r\n                this._element.removeEventListener('pointerup', this._pointerEnd);\r\n                this._element.removeEventListener('pointercancel', this._pointerEnd);\r\n            }\r\n            else {\r\n                // MouseEvent\r\n                window.removeEventListener('mousemove', this._move);\r\n                window.removeEventListener('mouseup', this._pointerEnd);\r\n            }\r\n        };\r\n        /**\r\n         * Listener for touchend.\r\n         * Only used if the browser doesn't support pointer events.\r\n         */\r\n        this._touchEnd = (event) => {\r\n            for (const touch of Array.from(event.changedTouches)) {\r\n                this._triggerPointerEnd(new Pointer(touch), event);\r\n            }\r\n        };\r\n        this._startCallback = start;\r\n        this._moveCallback = move;\r\n        this._endCallback = end;\r\n        this._rawUpdates = rawUpdates && 'onpointerrawupdate' in window;\r\n        this._eventListenerOptions = eventListenerOptions;\r\n        // Add listeners\r\n        if (self.PointerEvent && !avoidPointerEvents) {\r\n            this._element.addEventListener('pointerdown', this._pointerStart, this._eventListenerOptions);\r\n        }\r\n        else {\r\n            this._element.addEventListener('mousedown', this._pointerStart, this._eventListenerOptions);\r\n            this._element.addEventListener('touchstart', this._touchStart, this._eventListenerOptions);\r\n            this._element.addEventListener('touchmove', this._move, this._eventListenerOptions);\r\n            this._element.addEventListener('touchend', this._touchEnd, this._eventListenerOptions);\r\n            this._element.addEventListener('touchcancel', this._touchEnd, this._eventListenerOptions);\r\n        }\r\n    }\r\n    /**\r\n     * Remove all listeners.\r\n     */\r\n    stop() {\r\n        this._element.removeEventListener('pointerdown', this._pointerStart);\r\n        this._element.removeEventListener('mousedown', this._pointerStart);\r\n        this._element.removeEventListener('touchstart', this._touchStart);\r\n        this._element.removeEventListener('touchmove', this._move);\r\n        this._element.removeEventListener('touchend', this._touchEnd);\r\n        this._element.removeEventListener('touchcancel', this._touchEnd);\r\n        this._element.removeEventListener(this._rawUpdates ? 'pointerrawupdate' : 'pointermove', this._move);\r\n        this._element.removeEventListener('pointerup', this._pointerEnd);\r\n        this._element.removeEventListener('pointercancel', this._pointerEnd);\r\n        window.removeEventListener('mousemove', this._move);\r\n        window.removeEventListener('mouseup', this._pointerEnd);\r\n    }\r\n    /**\r\n     * Call the start callback for this pointer, and track it if the user wants.\r\n     *\r\n     * @param pointer Pointer\r\n     * @param event Related event\r\n     * @returns Whether the pointer is being tracked.\r\n     */\r\n    _triggerPointerStart(pointer, event) {\r\n        if (!this._startCallback(pointer, event))\r\n            return false;\r\n        this.currentPointers.push(pointer);\r\n        this.startPointers.push(pointer);\r\n        return true;\r\n    }\r\n}\n\nexport { PointerTracker as default };\n","<script>\r\n\timport RangeSlider from 'svelte-range-slider-pips';\r\n\timport { createNewNode } from './utils';\r\n\timport { asDroppable } from 'svelte-drag-and-drop-actions';\r\n\timport { safeid } from '$lib/utils';\r\n\timport PointerTracker from '@douganderson444/pointer-tracker';\r\n\timport { onMount } from 'svelte';\r\n\r\n\texport let children;\r\n\texport let scale = 1;\r\n\r\n\tlet pallette;\r\n\r\n\tonMount(async () => {\r\n\t\t// Watch for pointers\r\n\t\tconst pointerTracker = new PointerTracker(pallette, {\r\n\t\t\tstart: (pointer, event) => {\r\n\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t// event.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tfunction handleAddNode(event) {\r\n\t\tconst newNode = createNewNode();\r\n\t\tchildren.push(newNode);\r\n\t\tchildren = children;\r\n\t}\r\n\r\n\tlet newContainer = createNewNode();\r\n\r\n\tfunction onDropped(event) {\r\n\t\tconsole.log('dropped', event);\r\n\t\tnewContainer = createNewNode();\r\n\t}\r\n</script>\r\n\r\n<div class=\"pallette\" bind:this={pallette}>\r\n\tScale {scale}\r\n\t{#key newContainer}\r\n\t\t<div\r\n\t\t\tclass=\"yellow\"\r\n\t\t\tuse:asDroppable={{\r\n\t\t\t\tExtras: { newContainer },\r\n\t\t\t\tOperations: 'copy',\r\n\t\t\t\tDataToOffer: { 'item/plain': '' },\r\n\t\t\t\tonDropped\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t+ Drag Me\r\n\t\t</div>\r\n\t{/key}\r\n\t<!-- <button on:click={handleAddGridItem}>Add Grid Item</button>\r\n\t<button on:click={handleAddMapItem}>Add Map</button>\r\n\t<button on:click={handleAddListItem}>Add List</button> -->\r\n</div>\r\n\r\n<style>\r\n\t.yellow {\r\n\t\tbackground-color: #fee9004b;\r\n\t\twidth: 10em;\r\n\t\theight: auto;\r\n\t\tline-height: 2em;\r\n\t\tcursor: default;\r\n\t\ttext-align: center;\r\n\t\tmargin: 0.5em;\r\n\t\tpadding: 0 0.5em;\r\n\t}\r\n\t.pallette {\r\n\t\tbackground: #fafafac7;\r\n\t\tposition: fixed;\r\n\t\t/* position: absolute; */\r\n\t\tbottom: 0em;\r\n\t\tbox-sizing: border-box;\r\n\t\twidth: 99%;\r\n\t\tz-index: 999;\r\n\t}\r\n\r\n\t/* #reverse-pips .rangePips {\r\n\t\tbottom: auto;\r\n\t\ttop: -1em;\r\n\t}\r\n\t#reverse-pips .pip {\r\n\t\tbackground: rgb(198, 187, 224);\r\n\t\ttop: auto;\r\n\t\tbottom: 0.25em;\r\n\t\twidth: 2px;\r\n\t\ttransform: translateX(-1px);\r\n\t\ttransition-duration: 0.5s;\r\n\t\topacity: 0.7;\r\n\t}\r\n\t#reverse-pips .pip:nth-child(5n + 1) {\r\n\t\theight: 0.8em;\r\n\t\topacity: 0.9;\r\n\t}\r\n\t#reverse-pips .pip:nth-child(5n),\r\n\t#reverse-pips .pip:nth-child(5n + 2) {\r\n\t\theight: 0.65em;\r\n\t}\r\n\t#reverse-pips .pip.selected {\r\n\t\tbackground: rgb(255, 0, 157);\r\n\t\ttransition-duration: 0.05s;\r\n\t\topacity: 1;\r\n\t} */\r\n\r\n\t:global(#reverse-pips .rangePips) {\r\n\t\tbottom: auto;\r\n\t\ttop: -1em;\r\n\t}\r\n\t:global(#reverse-pips .pip) {\r\n\t\tbackground: rgb(198, 187, 224);\r\n\t\ttop: auto;\r\n\t\tbottom: 0.25em;\r\n\t\twidth: 2px;\r\n\t\ttransform: translateX(-1px);\r\n\t\ttransition-duration: 0.5s;\r\n\t\topacity: 0.7;\r\n\t}\r\n\t:global(#reverse-pips .pip:nth-child(5n + 1)) {\r\n\t\theight: 0.8em;\r\n\t\topacity: 0.9;\r\n\t}\r\n\r\n\t:global(#reverse-pips .pip:nth-child(5n), #reverse-pips .pip:nth-child(5n + 2)) {\r\n\t\theight: 0.65em;\r\n\t}\r\n\r\n\t:global(#reverse-pips .pip.selected) {\r\n\t\tbackground: #0bb113;\r\n\t\ttransition-duration: 0.05s;\r\n\t\topacity: 1;\r\n\t}\r\n</style>\r\n","class Pointer {\r\n    constructor(nativePointer) {\r\n        /** Unique ID for this pointer */\r\n        this.id = -1;\r\n        this.nativePointer = nativePointer;\r\n        this.pageX = nativePointer.pageX;\r\n        this.pageY = nativePointer.pageY;\r\n        this.clientX = nativePointer.clientX;\r\n        this.clientY = nativePointer.clientY;\r\n        if (self.Touch && nativePointer instanceof Touch) {\r\n            this.id = nativePointer.identifier;\r\n        }\r\n        else if (isPointerEvent(nativePointer)) {\r\n            // is PointerEvent\r\n            this.id = nativePointer.pointerId;\r\n        }\r\n    }\r\n    /**\r\n     * Returns an expanded set of Pointers for high-resolution inputs.\r\n     */\r\n    getCoalesced() {\r\n        if ('getCoalescedEvents' in this.nativePointer) {\r\n            const events = this.nativePointer\r\n                .getCoalescedEvents()\r\n                .map((p) => new Pointer(p));\r\n            // Firefox sometimes returns an empty list here. I'm not sure it's doing the right thing.\r\n            // https://github.com/w3c/pointerevents/issues/409\r\n            if (events.length > 0)\r\n                return events;\r\n            // Otherwise, Firefox falls through…\r\n        }\r\n        return [this];\r\n    }\r\n}\r\nconst isPointerEvent = (event) => 'pointerId' in event;\r\nconst isTouchEvent = (event) => 'changedTouches' in event;\r\nconst noop = () => { };\r\n/**\r\n * Track pointers across a particular element\r\n */\r\nclass PointerTracker {\r\n    /**\r\n     * Track pointers across a particular element\r\n     *\r\n     * @param element Element to monitor.\r\n     * @param options\r\n     */\r\n    constructor(_element, { start = () => true, move = noop, end = noop, rawUpdates = false, avoidPointerEvents = false, eventListenerOptions = { capture: false, passive: false, once: false }, } = {}) {\r\n        this._element = _element;\r\n        /**\r\n         * State of the tracked pointers when they were pressed/touched.\r\n         */\r\n        this.startPointers = [];\r\n        /**\r\n         * Latest state of the tracked pointers. Contains the same number of pointers, and in the same\r\n         * order as this.startPointers.\r\n         */\r\n        this.currentPointers = [];\r\n        /**\r\n         * Firefox has a bug where touch-based pointer events have a `buttons` of 0, when this shouldn't\r\n         * happen. https://bugzilla.mozilla.org/show_bug.cgi?id=1729440\r\n         *\r\n         * Usually we treat `buttons === 0` as no-longer-pressed. This set allows us to exclude these\r\n         * buggy Firefox events.\r\n         */\r\n        this._excludeFromButtonsCheck = new Set();\r\n        /**\r\n         * Listener for mouse/pointer starts.\r\n         *\r\n         * @param event This will only be a MouseEvent if the browser doesn't support pointer events.\r\n         */\r\n        this._pointerStart = (event) => {\r\n            if (isPointerEvent(event) && event.buttons === 0) {\r\n                // This is the buggy Firefox case. See _excludeFromButtonsCheck.\r\n                this._excludeFromButtonsCheck.add(event.pointerId);\r\n            }\r\n            else if (!(event.buttons & 1 /* LeftMouseOrTouchOrPenDown */)) {\r\n                return;\r\n            }\r\n            const pointer = new Pointer(event);\r\n            // If we're already tracking this pointer, ignore this event.\r\n            // This happens with mouse events when multiple buttons are pressed.\r\n            if (this.currentPointers.some((p) => p.id === pointer.id))\r\n                return;\r\n            if (!this._triggerPointerStart(pointer, event))\r\n                return;\r\n            // Add listeners for additional events.\r\n            // The listeners may already exist, but no harm in adding them again.\r\n            if (isPointerEvent(event)) {\r\n                const capturingElement = event.target && 'setPointerCapture' in event.target\r\n                    ? event.target\r\n                    : this._element;\r\n                capturingElement.setPointerCapture(event.pointerId);\r\n                this._element.addEventListener(this._rawUpdates ? 'pointerrawupdate' : 'pointermove', this._move, this._eventListenerOptions);\r\n                this._element.addEventListener('pointerup', this._pointerEnd, this._eventListenerOptions);\r\n                this._element.addEventListener('pointercancel', this._pointerEnd, this._eventListenerOptions);\r\n            }\r\n            else {\r\n                // MouseEvent\r\n                window.addEventListener('mousemove', this._move);\r\n                window.addEventListener('mouseup', this._pointerEnd);\r\n            }\r\n        };\r\n        /**\r\n         * Listener for touchstart.\r\n         * Only used if the browser doesn't support pointer events.\r\n         */\r\n        this._touchStart = (event) => {\r\n            for (const touch of Array.from(event.changedTouches)) {\r\n                this._triggerPointerStart(new Pointer(touch), event);\r\n            }\r\n        };\r\n        /**\r\n         * Listener for pointer/mouse/touch move events.\r\n         */\r\n        this._move = (event) => {\r\n            if (!isTouchEvent(event) &&\r\n                (!isPointerEvent(event) ||\r\n                    !this._excludeFromButtonsCheck.has(event.pointerId)) &&\r\n                event.buttons === 0 /* None */) {\r\n                // This happens in a number of buggy cases where the browser failed to deliver a pointerup\r\n                // or pointercancel. If we see the pointer moving without any buttons down, synthesize an end.\r\n                // https://github.com/w3c/pointerevents/issues/407\r\n                // https://github.com/w3c/pointerevents/issues/408\r\n                this._pointerEnd(event);\r\n                return;\r\n            }\r\n            const previousPointers = this.currentPointers.slice();\r\n            const changedPointers = isTouchEvent(event)\r\n                ? Array.from(event.changedTouches).map((t) => new Pointer(t))\r\n                : [new Pointer(event)];\r\n            const trackedChangedPointers = [];\r\n            for (const pointer of changedPointers) {\r\n                const index = this.currentPointers.findIndex((p) => p.id === pointer.id);\r\n                if (index === -1)\r\n                    continue; // Not a pointer we're tracking\r\n                trackedChangedPointers.push(pointer);\r\n                this.currentPointers[index] = pointer;\r\n            }\r\n            if (trackedChangedPointers.length === 0)\r\n                return;\r\n            this._moveCallback(previousPointers, trackedChangedPointers, event);\r\n        };\r\n        /**\r\n         * Call the end callback for this pointer.\r\n         *\r\n         * @param pointer Pointer\r\n         * @param event Related event\r\n         */\r\n        this._triggerPointerEnd = (pointer, event) => {\r\n            // Main button still down?\r\n            // With mouse events, you get a mouseup per mouse button, so the left button might still be down.\r\n            if (!isTouchEvent(event) &&\r\n                event.buttons & 1 /* LeftMouseOrTouchOrPenDown */) {\r\n                return false;\r\n            }\r\n            const index = this.currentPointers.findIndex((p) => p.id === pointer.id);\r\n            // Not a pointer we're interested in?\r\n            if (index === -1)\r\n                return false;\r\n            this.currentPointers.splice(index, 1);\r\n            this.startPointers.splice(index, 1);\r\n            this._excludeFromButtonsCheck.delete(pointer.id);\r\n            // The event.type might be a 'move' event due to workarounds for weird mouse behaviour.\r\n            // See _move for details.\r\n            const cancelled = !(event.type === 'mouseup' ||\r\n                event.type === 'touchend' ||\r\n                event.type === 'pointerup');\r\n            this._endCallback(pointer, event, cancelled);\r\n            return true;\r\n        };\r\n        /**\r\n         * Listener for mouse/pointer ends.\r\n         *\r\n         * @param event This will only be a MouseEvent if the browser doesn't support pointer events.\r\n         */\r\n        this._pointerEnd = (event) => {\r\n            if (!this._triggerPointerEnd(new Pointer(event), event))\r\n                return;\r\n            if (isPointerEvent(event)) {\r\n                if (this.currentPointers.length)\r\n                    return;\r\n                this._element.removeEventListener(this._rawUpdates ? 'pointerrawupdate' : 'pointermove', this._move);\r\n                this._element.removeEventListener('pointerup', this._pointerEnd);\r\n                this._element.removeEventListener('pointercancel', this._pointerEnd);\r\n            }\r\n            else {\r\n                // MouseEvent\r\n                window.removeEventListener('mousemove', this._move);\r\n                window.removeEventListener('mouseup', this._pointerEnd);\r\n            }\r\n        };\r\n        /**\r\n         * Listener for touchend.\r\n         * Only used if the browser doesn't support pointer events.\r\n         */\r\n        this._touchEnd = (event) => {\r\n            for (const touch of Array.from(event.changedTouches)) {\r\n                this._triggerPointerEnd(new Pointer(touch), event);\r\n            }\r\n        };\r\n        this._startCallback = start;\r\n        this._moveCallback = move;\r\n        this._endCallback = end;\r\n        this._rawUpdates = rawUpdates && 'onpointerrawupdate' in window;\r\n        this._eventListenerOptions = eventListenerOptions;\r\n        // Add listeners\r\n        if (self.PointerEvent && !avoidPointerEvents) {\r\n            this._element.addEventListener('pointerdown', this._pointerStart, this._eventListenerOptions);\r\n        }\r\n        else {\r\n            this._element.addEventListener('mousedown', this._pointerStart, this._eventListenerOptions);\r\n            this._element.addEventListener('touchstart', this._touchStart, this._eventListenerOptions);\r\n            this._element.addEventListener('touchmove', this._move, this._eventListenerOptions);\r\n            this._element.addEventListener('touchend', this._touchEnd, this._eventListenerOptions);\r\n            this._element.addEventListener('touchcancel', this._touchEnd, this._eventListenerOptions);\r\n        }\r\n    }\r\n    /**\r\n     * Remove all listeners.\r\n     */\r\n    stop() {\r\n        this._element.removeEventListener('pointerdown', this._pointerStart);\r\n        this._element.removeEventListener('mousedown', this._pointerStart);\r\n        this._element.removeEventListener('touchstart', this._touchStart);\r\n        this._element.removeEventListener('touchmove', this._move);\r\n        this._element.removeEventListener('touchend', this._touchEnd);\r\n        this._element.removeEventListener('touchcancel', this._touchEnd);\r\n        this._element.removeEventListener(this._rawUpdates ? 'pointerrawupdate' : 'pointermove', this._move);\r\n        this._element.removeEventListener('pointerup', this._pointerEnd);\r\n        this._element.removeEventListener('pointercancel', this._pointerEnd);\r\n        window.removeEventListener('mousemove', this._move);\r\n        window.removeEventListener('mouseup', this._pointerEnd);\r\n    }\r\n    /**\r\n     * Call the start callback for this pointer, and track it if the user wants.\r\n     *\r\n     * @param pointer Pointer\r\n     * @param event Related event\r\n     * @returns Whether the pointer is being tracked.\r\n     */\r\n    _triggerPointerStart(pointer, event) {\r\n        if (!this._startCallback(pointer, event))\r\n            return false;\r\n        this.currentPointers.push(pointer);\r\n        this.startPointers.push(pointer);\r\n        return true;\r\n    }\r\n}\n\nexport { PointerTracker as default };\n","// inspired by https://github.com/GoogleChromeLabs/pinch-zoom/blob/master/lib/pinch-zoom.ts\r\nimport PointerTracker from '@douganderson444/pointer-tracker';\r\nimport './styles.css';\r\nconst minScaleAttr = 'min-scale';\r\nfunction getDistance(a, b) {\r\n    if (!b)\r\n        return 0;\r\n    return Math.sqrt((b.clientX - a.clientX) ** 2 + (b.clientY - a.clientY) ** 2);\r\n}\r\nfunction getMidpoint(a, b) {\r\n    if (!b)\r\n        return a;\r\n    return {\r\n        clientX: (a.clientX + b.clientX) / 2,\r\n        clientY: (a.clientY + b.clientY) / 2\r\n    };\r\n}\r\nfunction getAbsoluteValue(value, max) {\r\n    if (typeof value === 'number')\r\n        return value;\r\n    if (value.trimRight().endsWith('%')) {\r\n        return (max * parseFloat(value)) / 100;\r\n    }\r\n    return parseFloat(value);\r\n}\r\nfunction createMatrix() {\r\n    // initialize a new 16 element 3D array matrix\r\n    return new DOMMatrix([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n}\r\nfunction createPoint() {\r\n    return new DOMPoint();\r\n}\r\nconst MIN_SCALE = 0.01;\r\nexport default class PinchZoom {\r\n    // The element that we'll transform.\r\n    _node;\r\n    // Ideally this would be shadow DOM, but we don't have the browser\r\n    // support yet.\r\n    _parentEl;\r\n    // Current transform.\r\n    _transform = createMatrix();\r\n    _pointerTracker;\r\n    _handle = null;\r\n    static get observedAttributes() {\r\n        return [minScaleAttr];\r\n    }\r\n    /**\r\n     * handle - an optional handle element to grab by\r\n     */\r\n    constructor(node, { handle } = {}) {\r\n        this._node = node;\r\n        this._parentEl = this._node.parentElement || document.body;\r\n        this._handle = handle;\r\n        // Watch for children changes.\r\n        // Note this won't fire for initial contents,\r\n        // so _stageElChange is also called in connectedCallback.\r\n        new MutationObserver(() => this._stageElChange()).observe(this._node, { childList: true });\r\n        // Watch for pointers (nodes[i] as HTMLElement)\r\n        this._pointerTracker = new PointerTracker(this._parentEl, {\r\n            eventListenerOptions: { capture: true },\r\n            start: (pointer, event) => {\r\n                // ignore single pointers on input / editable elements\r\n                if (this._pointerTracker.currentPointers.length === 0 &&\r\n                    (event.target instanceof HTMLInputElement || event.target.isContentEditable)) {\r\n                    return false;\r\n                }\r\n                if (this._pointerTracker.currentPointers.length === 2 || !this._parentEl)\r\n                    // We only want to track 2 pointers at most\r\n                    // there already exists 2 pointers, and now this would have been the 3rd pointer so let's stop here\r\n                    return false;\r\n                if (this._pointerTracker.currentPointers.length === 1) {\r\n                    // there already exists one pointer, and now this is the second pointer\r\n                    // then it's a pinch zoom and can be from anywhere, incl if the pointer is over a DOM tree child\r\n                    // events on this element are captured (see eventListenerOptions above) so stopping prop means they don't go down the DOM tree\r\n                    event.preventDefault();\r\n                    event.stopPropagation(); // if it's a 2 touch move, we want exclusive rights over the pointer\r\n                    return true;\r\n                }\r\n                if (this._pointerTracker.currentPointers.length === 0) {\r\n                    // if length == 0, then this is the first pointer tracked\r\n                    // it's for panning, but only on the parent or this node\r\n                    // so event.target has to be on this node or it's parent to pan everybody\r\n                    // track this single pointer in case a second one gets added\r\n                    // but don't block it's use by children, yet\r\n                    return true;\r\n                }\r\n                // else, the pointer event must have happened on a child node, where pan doesn't apply\r\n                return false;\r\n            },\r\n            move: (previousPointers, changedPointers, event) => {\r\n                // tracking purposes only, no action\r\n                if (this._pointerTracker.currentPointers.length === 0)\r\n                    return;\r\n                // If it's a single pointer in a child, ignore it, unless it's a handle\r\n                if (this._pointerTracker.currentPointers.length === 1 &&\r\n                    !(event.target == this._parentEl || event.target == node))\r\n                    return;\r\n                // pan if single pointer on parent container or target node\r\n                // zoom if double pointer anywhere\r\n                event.stopPropagation(); // continue exclusive rights over the pointer from DOM tree\r\n                this._onPointerMove(previousPointers, this._pointerTracker.currentPointers);\r\n            },\r\n            end: (pointer, event, cancelled) => { }\r\n        });\r\n        this._parentEl.addEventListener('wheel', (event) => this._onWheel(event));\r\n    }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === minScaleAttr) {\r\n            if (this.scale < this.minScale) {\r\n                this.setTransform({ scale: this.minScale });\r\n            }\r\n        }\r\n    }\r\n    get minScale() {\r\n        const attrValue = this._node.getAttribute(minScaleAttr);\r\n        if (!attrValue)\r\n            return MIN_SCALE;\r\n        const value = parseFloat(attrValue);\r\n        if (Number.isFinite(value))\r\n            return Math.max(MIN_SCALE, value);\r\n        return MIN_SCALE;\r\n    }\r\n    set minScale(value) {\r\n        this._node.setAttribute(minScaleAttr, String(value));\r\n    }\r\n    connectedCallback() {\r\n        this._stageElChange();\r\n    }\r\n    get x() {\r\n        return this._transform.e;\r\n    }\r\n    get y() {\r\n        return this._transform.f;\r\n    }\r\n    get scale() {\r\n        return this._transform.a;\r\n    }\r\n    /**\r\n     * Change the scale, adjusting x/y by a given transform origin.\r\n     */\r\n    scaleTo(scale, opts = {}) {\r\n        let { originX = 0, originY = 0 } = opts;\r\n        const { relativeTo = 'content', allowChangeEvent = false } = opts;\r\n        const relativeToEl = relativeTo === 'content' ? this._parentEl : this._node;\r\n        // No content element? Fall back to just setting scale\r\n        if (!relativeToEl || !this._parentEl) {\r\n            this.setTransform({ scale, allowChangeEvent });\r\n            return;\r\n        }\r\n        const rect = relativeToEl.getBoundingClientRect();\r\n        originX = getAbsoluteValue(originX, rect.width);\r\n        originY = getAbsoluteValue(originY, rect.height);\r\n        if (relativeTo === 'content') {\r\n            originX += this.x;\r\n            originY += this.y;\r\n        }\r\n        else {\r\n            const currentRect = this._parentEl.getBoundingClientRect();\r\n            originX -= currentRect.left;\r\n            originY -= currentRect.top;\r\n        }\r\n        this._applyChange({\r\n            allowChangeEvent,\r\n            originX,\r\n            originY,\r\n            scaleDiff: scale / this.scale\r\n        });\r\n    }\r\n    /**\r\n     * Update the stage with a given scale/x/y.\r\n     */\r\n    setTransform(opts = {}) {\r\n        const { scale = this.scale, allowChangeEvent = false } = opts;\r\n        let { x = this.x, y = this.y } = opts;\r\n        // If we don't have an element to position, just set the value as given.\r\n        // We'll check bounds later.\r\n        if (!this._parentEl) {\r\n            this._updateTransform(scale, x, y, allowChangeEvent);\r\n            return;\r\n        }\r\n        // Get current layout\r\n        const thisBounds = this._node.getBoundingClientRect();\r\n        const parentElBounds = this._parentEl.getBoundingClientRect();\r\n        // Not displayed. May be disconnected or display:none.\r\n        // Just take the values, and we'll check bounds later.\r\n        if (!thisBounds.width || !thisBounds.height) {\r\n            this._updateTransform(scale, x, y, allowChangeEvent);\r\n            return;\r\n        }\r\n        // Create points for _parentEl.\r\n        let topLeft = createPoint();\r\n        topLeft.x = parentElBounds.left - thisBounds.left;\r\n        topLeft.y = parentElBounds.top - thisBounds.top;\r\n        let bottomRight = createPoint();\r\n        bottomRight.x = parentElBounds.width + topLeft.x;\r\n        bottomRight.y = parentElBounds.height + topLeft.y;\r\n        // Calculate the intended position of _parentEl.\r\n        const matrix = createMatrix()\r\n            .translate(x, y)\r\n            .scale(scale)\r\n            // Undo current transform\r\n            .multiply(this._transform.inverse());\r\n        topLeft = topLeft.matrixTransform(matrix);\r\n        bottomRight = bottomRight.matrixTransform(matrix);\r\n        // Ensure _parentEl can't move beyond out-of-bounds.\r\n        // Correct for x\r\n        // if (topLeft.x > thisBounds.width) {\r\n        // \tx += thisBounds.width - topLeft.x;\r\n        // } else if (bottomRight.x < 0) {\r\n        // \tx += -bottomRight.x;\r\n        // }\r\n        // Correct for y\r\n        // if (topLeft.y > thisBounds.height) {\r\n        // \ty += thisBounds.height - topLeft.y;\r\n        // } else if (bottomRight.y < 0) {\r\n        // \ty += -bottomRight.y;\r\n        // }\r\n        this._updateTransform(scale, x, y, allowChangeEvent);\r\n    }\r\n    /**\r\n     * Update transform values without checking bounds. This is only called in setTransform.\r\n     */\r\n    _updateTransform(scale, x, y, allowChangeEvent) {\r\n        // Avoid scaling to zero\r\n        if (scale < this.minScale)\r\n            return;\r\n        // Return if there's no change\r\n        if (scale === this.scale && x === this.x && y === this.y)\r\n            return;\r\n        this._transform.e = x;\r\n        this._transform.f = y;\r\n        this._transform.d = this._transform.a = scale;\r\n        // this._node.style.setProperty('--x', this.x + 'px');\r\n        // this._node.style.setProperty('--y', this.y + 'px');\r\n        // this._node.style.setProperty('--scale', this.scale + '');\r\n        this._node.style.transform = `translate(${x}px,${y}px) scale(${scale})`;\r\n        if (allowChangeEvent) {\r\n            const event = new Event('change', { bubbles: true });\r\n            this._node.dispatchEvent(event);\r\n        }\r\n    }\r\n    /**\r\n     * Called when the direct children of this element change.\r\n     * Until we have have shadow dom support across the board, we\r\n     * require a single element to be the child of <pinch-zoom>, and\r\n     * that's the element we pan/scale.\r\n     */\r\n    _stageElChange() {\r\n        this._parentEl = this._node.parentElement || document.body;\r\n        // Do a bounds check\r\n        this.setTransform({ allowChangeEvent: true });\r\n    }\r\n    _onWheel(event) {\r\n        if (!this._parentEl)\r\n            return;\r\n        // if (this._parentEl !== event.target) return;\r\n        event.preventDefault();\r\n        const currentRect = this._parentEl.getBoundingClientRect();\r\n        let { deltaY } = event;\r\n        const { ctrlKey, deltaMode } = event;\r\n        if (deltaMode === 1) {\r\n            // 1 is \"lines\", 0 is \"pixels\"\r\n            // Firefox uses \"lines\" for some types of mouse\r\n            deltaY *= 15;\r\n        }\r\n        // ctrlKey is true when pinch-zooming on a trackpad.\r\n        const divisor = ctrlKey ? 200 : 600;\r\n        const scaleDiff = 1 - deltaY / divisor;\r\n        this._applyChange({\r\n            scaleDiff,\r\n            originX: event.pageX - this._parentEl.offsetLeft - this._parentEl.clientWidth / 2,\r\n            originY: event.pageY - this._parentEl.offsetTop - this._parentEl.clientHeight / 2,\r\n            allowChangeEvent: true\r\n        });\r\n    }\r\n    _onPointerMove(previousPointers, currentPointers) {\r\n        if (!this._parentEl)\r\n            return;\r\n        // Combine next points with previous points\r\n        const currentRect = this._parentEl.getBoundingClientRect();\r\n        // For calculating panning movement\r\n        const prevMidpoint = getMidpoint(previousPointers[0], previousPointers[1]);\r\n        const newMidpoint = getMidpoint(currentPointers[0], currentPointers[1]);\r\n        // Midpoint within the element\r\n        const originX = prevMidpoint.clientX - currentRect.left - currentRect.width / 2;\r\n        const originY = prevMidpoint.clientY - currentRect.top - currentRect.height / 2;\r\n        // Calculate the desired change in scale\r\n        const prevDistance = getDistance(previousPointers[0], previousPointers[1]);\r\n        const newDistance = getDistance(currentPointers[0], currentPointers[1]);\r\n        const scaleDiff = prevDistance ? newDistance / prevDistance : 1;\r\n        this._applyChange({\r\n            originX,\r\n            originY,\r\n            scaleDiff,\r\n            panX: newMidpoint.clientX - prevMidpoint.clientX,\r\n            panY: newMidpoint.clientY - prevMidpoint.clientY,\r\n            allowChangeEvent: true\r\n        });\r\n    }\r\n    /** Transform the view & fire a change event */\r\n    _applyChange(opts = {}) {\r\n        const { panX = 0, panY = 0, originX = 0, originY = 0, scaleDiff = 1, allowChangeEvent = false } = opts;\r\n        const matrix = createMatrix()\r\n            // Translate according to panning.\r\n            .translate(panX, panY)\r\n            // Scale about the origin.\r\n            .translate(originX, originY)\r\n            // Apply current translate\r\n            // .translate(this.x, this.y) // moved to line below vvv\r\n            .scale(scaleDiff)\r\n            .translate(-originX, -originY)\r\n            // Apply current transform.\r\n            .multiply(this._transform);\r\n        // Convert the transform into basic translate & scale.\r\n        this.setTransform({\r\n            allowChangeEvent,\r\n            scale: matrix.a,\r\n            x: matrix.e,\r\n            y: matrix.f\r\n        });\r\n    }\r\n}\r\n","import pinchZoom from './pinchZoom';\r\nexport const pzoom = (node, params) => {\r\n    console.log({ params });\r\n    let container = node.parentElement || document.body;\r\n    // ensure touch and select action defaults are disable\r\n    container.style['touch-action'] = 'none';\r\n    container.style['user-select'] = 'none';\r\n    container.style['overflow'] = 'hidden';\r\n    container.style['position'] = 'relative';\r\n    node.style['touch-action'] = 'none';\r\n    node.style['user-select'] = 'none';\r\n    node.style['position'] = 'absolute';\r\n    // node.style['transform'] = 'translate(var(--x), var(--y)) scale(var(--scale))';\r\n    // node.style['transform-origin'] = '0 0';\r\n    // node.style['will-change'] = 'transform';\r\n    new pinchZoom(node, { handle: params?.handle });\r\n    return {\r\n        update(params) {\r\n            // the value of `bar` has changed\r\n            new pinchZoom(node, { handle: params?.handle });\r\n        },\r\n        destroy() {\r\n            // the node has been removed from the DOM\r\n        }\r\n    };\r\n};\r\n","import { writable } from 'svelte/store';\r\n\r\nexport const scale = writable({ value: 1 });\r\nexport const selected = writable(null);\r\n","<script lang=\"ts\">\r\n\timport PointerTracker from '@douganderson444/pointer-tracker';\r\n\timport { onMount } from 'svelte';\r\n\r\n\timport { scale } from './stores.js';\r\n\r\n\texport let x;\r\n\texport let y;\r\n\texport let width;\r\n\texport let height;\r\n\r\n\texport let maxFrameHeight = 2500;\r\n\texport let maxFrameWidth = 2500;\r\n\texport let minFrameHeight = 40;\r\n\texport let minFrameWidth = 40;\r\n\r\n\texport let arenaWidth;\r\n\texport let arenaHeight;\r\n\r\n\texport let direction;\r\n\texport let isDragging = false;\r\n\r\n\texport let grid;\r\n\r\n\tconst isPointerEvent = (event: any): event is PointerEvent => 'pointerId' in event;\r\n\r\n\tlet handleEl;\r\n\tlet size = '4em';\r\n\r\n\t$: handleWidth = handleEl ? handleEl.getClientRects()[0].height : 8;\r\n\t$: handleHeight = handleEl ? handleEl.getClientRects()[0].width : 8;\r\n\r\n\t$: left = handleX(direction, x, width, handleWidth);\r\n\t$: top = handleY(direction, y, height, handleHeight);\r\n\r\n\tonMount(() => {\r\n\t\t// ask the browser what the px size is based on the --size in em\r\n\r\n\t\t// Watch for pointers\r\n\t\tconst pointerTracker = new PointerTracker(handleEl, {\r\n\t\t\tstart: (pointer, event) => {\r\n\t\t\t\t// We only want to track 2 pointers at most\r\n\r\n\t\t\t\tif (pointerTracker.currentPointers.length === 2) return false;\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\tmove: (previousPointers, changedPointers, event) => {\r\n\t\t\t\tif (!isPointerEvent(event)) return;\r\n\t\t\t\tlet dx = event.clientX - previousPointers[0].clientX;\r\n\t\t\t\tlet dy = event.clientY - previousPointers[0].clientY;\r\n\t\t\t\tdragHandle(event.clientX, event.clientY, dx, dy);\r\n\t\t\t},\r\n\t\t\tend: (pointer, event, cancelled) => {\r\n\t\t\t\tonDragEnd();\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tlet cursor =\r\n\t\tdirection == 'nw' || direction == 'se'\r\n\t\t\t? 'nwse-resize'\r\n\t\t\t: direction == 'n' || direction == 's'\r\n\t\t\t? 'ns-resize'\r\n\t\t\t: direction == 'ne' || direction == 'sw'\r\n\t\t\t? 'nesw-resize'\r\n\t\t\t: 'ew-resize';\r\n\r\n\t// handle positions\r\n\tfunction handleX(direction, x, width, handleWidth) {\r\n\t\t// extra arguments for reactivity\r\n\t\tswitch (direction) {\r\n\t\t\tcase 'nw':\r\n\t\t\tcase 'w':\r\n\t\t\tcase 'sw':\r\n\t\t\t\treturn x - handleWidth / 2; // x - handleWidth;\r\n\t\t\tcase 'n':\r\n\t\t\tcase 's':\r\n\t\t\t\treturn x + width / 2;\r\n\t\t\tcase 'ne':\r\n\t\t\tcase 'e':\r\n\t\t\tcase 'se':\r\n\t\t\t\treturn x + width;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleY(direction, y, height, handleHeight) {\r\n\t\tswitch (direction) {\r\n\t\t\tcase 'nw':\r\n\t\t\tcase 'n':\r\n\t\t\tcase 'ne':\r\n\t\t\t\treturn y - handleHeight / 2;\r\n\t\t\tcase 'e':\r\n\t\t\tcase 'w':\r\n\t\t\t\treturn y + height / 2 - handleHeight / 2;\r\n\t\t\tcase 'sw':\r\n\t\t\tcase 's':\r\n\t\t\tcase 'se':\r\n\t\t\t\treturn y + height;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction dragHandle(_x, _y, dx, dy) {\r\n\t\tswitch (direction) {\r\n\t\t\tcase 'nw':\r\n\t\t\tcase 'w':\r\n\t\t\tcase 'sw':\r\n\t\t\t\tx = Math.max(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tx + width - maxFrameWidth,\r\n\t\t\t\t\tMath.min(x + width - minFrameWidth, arenaWidth, x + dx / $scale.value)\r\n\t\t\t\t);\r\n\t\t\t\twidth = width - dx / $scale.value;\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ne':\r\n\t\t\tcase 'e':\r\n\t\t\tcase 'se':\r\n\t\t\t\twidth =\r\n\t\t\t\t\tMath.max(\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\tx + minFrameWidth,\r\n\t\t\t\t\t\tMath.min(x + maxFrameWidth, arenaWidth, x + width + dx / $scale.value)\r\n\t\t\t\t\t) - x;\r\n\t\t}\r\n\r\n\t\tswitch (direction) {\r\n\t\t\tcase 'nw':\r\n\t\t\tcase 'n':\r\n\t\t\tcase 'ne':\r\n\t\t\t\ty = Math.max(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\ty + height - maxFrameHeight,\r\n\t\t\t\t\tMath.min(y + height - minFrameHeight, arenaHeight, y + dy / $scale.value)\r\n\t\t\t\t);\r\n\t\t\t\theight = height - dy / $scale.value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sw':\r\n\t\t\tcase 's':\r\n\t\t\tcase 'se':\r\n\t\t\t\theight =\r\n\t\t\t\t\tMath.max(\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\ty + minFrameHeight,\r\n\t\t\t\t\t\tMath.min(y + maxFrameHeight, arenaHeight, y + height + dy / $scale.value)\r\n\t\t\t\t\t) - y;\r\n\t\t}\r\n\t}\r\n\tfunction onDragEnd() {\r\n\t\tisDragging = false;\r\n\t\tif (grid) {\r\n\t\t\tx = Math.floor(x / grid) * grid;\r\n\t\t\ty = Math.floor(y / grid) * grid;\r\n\t\t\twidth = Math.floor(width / grid) * grid;\r\n\t\t\theight = Math.floor(height / grid) * grid;\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<div\r\n\tbind:this={handleEl}\r\n\tclass=\"resize-handle {direction}\"\r\n\tstyle=\"--size: {size}; left:{left}px; top:{top}px; cursor: {cursor};\"\r\n>\r\n\t<div class=\"resize-handle-decoration {direction}\" />\r\n</div>\r\n\r\n<style>\r\n\t:root {\r\n\t\t--color: rgba(121, 121, 121, 0.5);\r\n\t}\r\n\t.resize-handle-decoration {\r\n\t\theight: calc(var(--size) / 2);\r\n\t\twidth: calc(var(--size) / 2);\r\n\t}\r\n\t.resize-handle-decoration.nw {\r\n\t\tborder-left: 0.25em solid var(--color);\r\n\t\tborder-top: 0.25em solid var(--color);\r\n\t}\r\n\t.resize-handle-decoration.w {\r\n\t\tborder-left: 0.25em solid var(--color);\r\n\t}\r\n\t.resize-handle-decoration.sw {\r\n\t\tborder-left: 0.25em solid var(--color);\r\n\t\tborder-bottom: 0.25em solid var(--color);\r\n\t}\r\n\t.resize-handle-decoration.ne {\r\n\t\tborder-top: 0.25em solid var(--color);\r\n\t\tborder-right: 0.25em solid var(--color);\r\n\t}\r\n\t.resize-handle-decoration.e {\r\n\t\tborder-right: 0.25em solid var(--color);\r\n\t}\r\n\t.resize-handle-decoration.se {\r\n\t\tborder-right: 0.25em solid var(--color);\r\n\t\tborder-bottom: 0.25em solid var(--color);\r\n\t}\r\n\t.resize-handle-decoration.n {\r\n\t\tborder-top: 0.25em solid var(--color);\r\n\t}\r\n\t.resize-handle-decoration.s {\r\n\t\tborder-bottom: 0.25em solid var(--color);\r\n\t}\r\n\r\n\t.resize-handle {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tposition: absolute;\r\n\t\twidth: var(--size);\r\n\t\theight: var(--size);\r\n\t\t/* margin: var(--size);\r\n\t\tpadding: var(--size); */\r\n\t\t/* border: solid 1px rgba(200, 200, 200, 0.1); */\r\n\t\tborder-radius: 50%;\r\n\t\tbackground: rgb(255, 255, 255, 0.1);\r\n\t}\r\n</style>\r\n","export function clickOutside(node, { enabled: initialEnabled, handleUnselect }) {\r\n\tconst handleOutsideClick = ({ target }) => {\r\n\t\tif (node !== target && node.parentElement != target.parentElement && !node.contains(target)) {\r\n\t\t\thandleUnselect();\r\n\t\t}\r\n\t};\r\n\r\n\tfunction update({ enabled }) {\r\n\t\tif (enabled) {\r\n\t\t\twindow.addEventListener('click', handleOutsideClick);\r\n\t\t} else {\r\n\t\t\twindow.removeEventListener('click', handleOutsideClick);\r\n\t\t}\r\n\t}\r\n\r\n\tupdate({ enabled: initialEnabled });\r\n\treturn {\r\n\t\tupdate,\r\n\t\tdestroy() {\r\n\t\t\twindow.removeEventListener('click', handleOutsideClick);\r\n\t\t}\r\n\t};\r\n}\r\n","<script>\r\n\timport { createEventDispatcher } from 'svelte';\r\n\timport { tick } from 'svelte';\r\n\timport { clickOutside } from './directives';\r\n\r\n\t// Props\r\n\texport let value = '';\r\n\texport let type = 'text';\r\n\texport let placeholder = '';\r\n\texport let labelClasses = '';\r\n\r\n\tlet offsetWidth;\r\n\tlet editing = false;\r\n\tlet inputEl;\r\n\tlet label = value; // init\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tasync function toggle(event) {\r\n\t\tediting = !editing;\r\n\t\tconsole.log(`editing toggled to ${editing}`);\r\n\t\tif (editing) {\r\n\t\t\tawait tick();\r\n\t\t\tinputEl.focus();\r\n\t\t} else {\r\n\t\t\tstopEditing();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction stopEditing() {\r\n\t\tediting = false;\r\n\t\tvalue = label; // finalize, save to db\r\n\t\tdispatch('doneEditing');\r\n\t}\r\n\r\n\tconst handleEnter = (e) => {\r\n\t\tif (e.keyCode === 13) {\r\n\t\t\te.preventDefault();\r\n\t\t\tinputEl.blur();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleBlur = (_) => {\r\n\t\tif (value != '' && value != null) toggle();\r\n\t\telse value = 'Enter Value';\r\n\r\n\t\tif (window.getSelection) {\r\n\t\t\tif (window.getSelection().empty) {\r\n\t\t\t\t// Chrome\r\n\t\t\t\twindow.getSelection().empty();\r\n\t\t\t} else if (window.getSelection().removeAllRanges) {\r\n\t\t\t\t// Firefox\r\n\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t}\r\n\t\t} else if (document.selection) {\r\n\t\t\t// IE?\r\n\t\t\tdocument.selection.empty();\r\n\t\t}\r\n\t};\r\n\r\n\tfunction handleInput(e) {\r\n\t\tinputEl.setAttribute('data-heading', inputEl.innerText);\r\n\t}\r\n\r\n\tfunction handleUnselect(e) {\r\n\t\tif (document.activeElement === inputEl) inputEl.blur();\r\n\t}\r\n</script>\r\n\r\n<div\r\n\tcontenteditable\r\n\tclass={labelClasses}\r\n\ton:keydown={handleEnter}\r\n\ton:blur={handleBlur}\r\n\tbind:this={inputEl}\r\n\tbind:innerHTML={label}\r\n\ton:click={toggle}\r\n\tuse:clickOutside={{ enabled: editing, handleUnselect }}\r\n/>\r\n\r\n<style>\r\n\tdiv {\r\n\t\tdisplay: inline-block;\r\n\t\twidth: 100%;\r\n\t\theight: auto;\r\n\t}\r\n</style>\r\n","export const colors = [\r\n\t'#63B75A4B',\r\n\t'#FEE9004B',\r\n\t'#ff003b4b',\r\n\t'#69f5dc4B',\r\n\t'#FF9D484B',\r\n\t'#7a00ff4B',\r\n\t'#ff14f84b',\r\n\t'#376bff4b'\r\n];\r\n","<script>\r\n\timport { colors } from '$lib/config';\r\n\texport let backgroundColor = '#fee9004b';\r\n</script>\r\n\r\n<main>\r\n\t{#if backgroundColor && colors}\r\n\t\t{#each colors as color, c}\r\n\t\t\t<div\r\n\t\t\t\tclass=\"colorOption\"\r\n\t\t\t\ton:click={(e) => (backgroundColor = color)}\r\n\t\t\t\tstyle=\"background-color: {color};\"\r\n\t\t\t>\r\n\t\t\t\t<!-- I get thisstrange error when using <div/> instead of <div> </div> -->\r\n\t\t\t\t&nbsp; &NonBreakingSpace;\r\n\t\t\t</div>\r\n\t\t{/each}\r\n\t{/if}\r\n</main>\r\n\r\n<style>\r\n\t.colorOption {\r\n\t\theight: 2em;\r\n\t\twidth: 2em;\r\n\t}\r\n\tmain {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: flex-start;\r\n\t\theight: 8em;\r\n\t\tbackground-color: var(--bgColor);\r\n\t\tz-index: 99;\r\n\t\tflex-direction: column;\r\n\t\tflex-wrap: wrap;\r\n\t\talign-content: flex-start;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport ColorPicker from './ColorPicker.svelte';\r\n\r\n\texport let node;\r\n\r\n\tlet offsetWidth;\r\n\t// let backgroundColor = node?.style?.backgroundColor || '#fee9004b';\r\n\r\n\t// console.log({ backgroundColor, node });\r\n\r\n\t// $: if (node && backgroundColor)\r\n\t// \tnode = {\r\n\t// \t\t...node,\r\n\t// \t\tstyle: {\r\n\t// \t\t\t...node.style,\r\n\t// \t\t\tbackgroundColor\r\n\t// \t\t}\r\n\t// \t};\r\n\r\n\tfunction handleDelete(e) {\r\n\t\t// TODO: tentatively delete it, with an undo snackbar\r\n\t}\r\n\r\n\tfunction handleConnect(e) {\r\n\t\t// TODO make connection\r\n\t}\r\n</script>\r\n\r\n<div class=\"context-menu\" style=\"right: -{offsetWidth * 3.25}px; top: 0;\" bind:offsetWidth>\r\n\t{#if node && node?.style?.backgroundColor && ColorPicker}\r\n\t\t<!-- <ColorPicker bind:backgroundColor /> -->\r\n\t\t<ColorPicker bind:backgroundColor={node.style.backgroundColor} />\r\n\t{/if}\r\n\t<span on:click|stopPropagation={handleConnect} class=\"connect\">↪</span>\r\n\t<span on:click|stopPropagation={handleDelete}>🗑️</span>\r\n</div>\r\n\r\n<style>\r\n\t.context-menu {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\twidth: fit-content;\r\n\t\tmargin-left: 2em;\r\n\t\tz-index: 99;\r\n\t}\r\n\t.connect {\r\n\t\t--s: 0.05em;\r\n\t\tdisplay: block;\r\n\t\tfont-size: 1.7em;\r\n\t\ttransform: rotate(328deg) scale(1, -1);\r\n\t\ttext-shadow: calc(var(--s) * -0.5) calc(var(--s) * -1) calc(var(--s) * 1.25) #ccc;\r\n\t}\r\n\r\n\t.context-menu:hover,\r\n\t.context-menu:before {\r\n\t\tcursor: pointer;\r\n\t}\r\n\tspan:before {\r\n\t\t/* content: '🗑️'; */\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { createEventDispatcher, onMount } from 'svelte';\r\n\timport PointerTracker from '@douganderson444/pointer-tracker';\r\n\r\n\timport ResizeHandle from './ResizeHandle.svelte';\r\n\timport { scale, selected } from './stores.js';\r\n\timport { clickOutside } from './directives';\r\n\timport EditableText from './EditableText.svelte';\r\n\timport ContextMenu from './ContextMenu.svelte';\r\n\r\n\timport { asDroppable, asDropZone } from 'svelte-drag-and-drop-actions';\r\n\r\n\t// export let data;\r\n\texport let node;\r\n\texport let arenaHeight;\r\n\texport let arenaWidth;\r\n\texport let isDragging = false;\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\t// redraw if arena changes/updates\r\n\t$: if (arenaWidth || arenaHeight) assertArenaBounds();\r\n\r\n\tlet nodeEl;\r\n\tlet clientWidth, clientHeight;\r\n\r\n\tlet grid = 20;\r\n\tlet minFrameWidth = 40;\r\n\tlet maxFrameWidth = 2500;\r\n\tlet minFrameHeight = 20;\r\n\tlet maxFrameHeight = 2500;\r\n\r\n\t// how much smaller are nested containers from the parent?\r\n\tlet fontSize = '0.8em';\r\n\r\n\tlet isFocused;\r\n\tlet directions = ['nw', 'w', 'sw', 'ne', 'e', 'se', 'n', 's'];\r\n\tlet pointerTracker;\r\n\tlet shiftX;\r\n\tlet shiftY;\r\n\r\n\tonMount(async () => {\r\n\t\t// Watch for pointers\r\n\t\tpointerTracker = new PointerTracker(nodeEl, {\r\n\t\t\tstart: (pointer, event) => {\r\n\t\t\t\t// console.log('Container click', node.name);\r\n\r\n\t\t\t\t// ignore single pointers on input / editable elements\r\n\t\t\t\tif (\r\n\t\t\t\t\tpointerTracker.currentPointers.length === 0 &&\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t(event.target instanceof HTMLInputElement || event.target.isContentEditable)\r\n\t\t\t\t) {\r\n\t\t\t\t\tconsole.log('single pointers on input / editable element');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// We only want to track 1 pointers at most (zooming is handled by pzoom for us)\r\n\t\t\t\t// if there already exists 1 pointer, and now this would have been the 2nd pointer, stop here\r\n\t\t\t\tif (pointerTracker.currentPointers.length === 1) return false;\r\n\r\n\t\t\t\tevent.stopPropagation(); // otherwise it will move the other containers too\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\t// capture the inital pointer offset within the event target\r\n\t\t\t\tshiftX = event.clientX - nodeEl.getBoundingClientRect().left || 0;\r\n\t\t\t\tshiftY = event.clientY - nodeEl.getBoundingClientRect().top || 0;\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\tmove: (previousPointers, changedPointers, event) => {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tlet dx = event.clientX - previousPointers[0].clientX;\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tlet dy = event.clientY - previousPointers[0].clientY;\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tdragFrame(event.clientX, event.clientY, dx, dy);\r\n\t\t\t},\r\n\t\t\tend: (pointer, event, cancelled) => {\r\n\t\t\t\tonDragEnd(pointer);\r\n\t\t\t\thandleFocus(event);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\t/**** event handling ***/\r\n\tfunction handleDragStart(e) {\r\n\t\tconsole.log('Drag started');\r\n\t\te.preventDefault();\r\n\t}\r\n\r\n\tfunction onDragStart() {\r\n\t\treturn { x: node.x, y: node.y };\r\n\t}\r\n\tfunction dragFrame(_x, _y, dx, dy) {\r\n\t\tnode.x = node.x + dx / $scale.value;\r\n\t\tnode.y = node.y + dy / $scale.value;\r\n\t\tassertArenaBounds();\r\n\t}\r\n\r\n\tfunction onDragEnd(pointer) {\r\n\t\tisDragging = false;\r\n\r\n\t\t// temporarily reset to original position so you can get elementFromPoint underneath it\r\n\t\tnodeEl.style.left = 0;\r\n\t\tnodeEl.style.top = 0;\r\n\r\n\t\tlet drop = document.elementFromPoint(pointer.clientX, pointer.clientY);\r\n\t\tlet zone = drop.closest('[data-dropzone]');\r\n\r\n\t\tif (\r\n\t\t\tzone &&\r\n\t\t\tzone !== nodeEl &&\r\n\t\t\t!nodeEl.contains(zone) &&\r\n\t\t\tzone?.id !== nodeEl.parentNode.closest('[data-dropzone]')?.id // also not self\r\n\t\t) {\r\n\t\t\tconsole.log('dropped on ', zone);\r\n\t\t\t// add to new zone\r\n\t\t\tzone.dispatchEvent(\r\n\t\t\t\tnew CustomEvent('end', {\r\n\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\tnodeData: {\r\n\t\t\t\t\t\t\t...node,\r\n\t\t\t\t\t\t\tx: pointer.clientX - shiftX - zone.getBoundingClientRect().left,\r\n\t\t\t\t\t\t\ty: pointer.clientY - shiftY - zone.getBoundingClientRect().top\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\t\t// remove form this node\r\n\t\t\tremoveNode();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tnode.x = Math.round(node.x / grid) * grid;\r\n\t\tnode.y = Math.round(node.y / grid) * grid;\r\n\t\tnode.style.width = Math.round(node.style.width / grid) * grid;\r\n\t\tnode.style.height = Math.round(node.style.height / grid) * grid;\r\n\t}\r\n\r\n\tfunction onDrop(x, y, Operation, DataOffered, DroppableExtras, DropZoneExtras) {\r\n\t\tconsole.log(`DropZone.onDrop:\r\n\t\t x,y:            ${x}, ${y}\r\n\t\t Operation:      ', ${Operation}\r\n\t\t DataOffered:    ', ${JSON.stringify(DataOffered)}\r\n\t\t DroppableExtras:', ${JSON.stringify(DroppableExtras, null, 2)}\r\n\t\t DropZoneExtras: ', ${DropZoneExtras}`);\r\n\r\n\t\tlet TypeAccepted = undefined;\r\n\t\tfor (let Type in DataOffered) {\r\n\t\t\tif (DataOffered.hasOwnProperty(Type)) {\r\n\t\t\t\tTypeAccepted = Type;\r\n\t\t\t}\r\n\t\t}\r\n\t\tnode.children = [\r\n\t\t\t...node.children,\r\n\t\t\t{ ...DroppableExtras.newContainer, x: x / $scale.value, y: y / $scale.value }\r\n\t\t];\r\n\t\treturn TypeAccepted;\r\n\t}\r\n\r\n\tfunction assertArenaBounds() {\r\n\t\tif (node.x < 0) {\r\n\t\t\tnode.x = 0;\r\n\t\t}\r\n\t\tif (node.x + node.style.width >= arenaWidth) {\r\n\t\t\tnode.x -= node.x + node.style.width - arenaWidth;\r\n\t\t}\r\n\r\n\t\tif (node.y < 0) {\r\n\t\t\tnode.y = 0;\r\n\t\t}\r\n\t\tif (node.y + node.style.height >= arenaHeight) {\r\n\t\t\tnode.y -= node.y + node.style.height - arenaHeight;\r\n\t\t}\r\n\t}\r\n\r\n\t$: if ($selected != nodeEl) handleUnselect();\r\n\r\n\tfunction handleUnselect() {\r\n\t\tisFocused = false;\r\n\t}\r\n\tfunction handleFocus(e) {\r\n\t\tnodeEl.focus();\r\n\t\t$selected = nodeEl;\r\n\t\tisFocused = true;\r\n\t}\r\n\tfunction removeNode() {\r\n\t\t// remove node is from parent's children array\r\n\t\tnode = null; // delete node // not allowed in strict mode\r\n\t}\r\n\r\n\tfunction handleEnd(e) {\r\n\t\tconst n = e.detail;\r\n\t\tconsole.log(`Node ${n.nodeData.id} got dropped into ${node.id}`, n);\r\n\t\tnode = {\r\n\t\t\t...node,\r\n\t\t\tchildren: [...node.children, n.nodeData]\r\n\t\t};\r\n\t}\r\n</script>\r\n\r\n{#if node && document && clickOutside}\r\n\t<div\r\n\t\tclass=\"nodeEl\"\r\n\t\tid={node.id}\r\n\t\tdata-dropzone\r\n\t\tbind:this={nodeEl}\r\n\t\tbind:clientWidth\r\n\t\tbind:clientHeight\r\n\t\tstyle=\"position: absolute; left:{node.x}px; top:{node.y}px; width:{node?.style\r\n\t\t\t?.width}px; height:{node?.style?.height}px; font-size: {fontSize};\r\n\t\tbackground-color: {node?.style?.backgroundColor || '#fee9004b'}\"\r\n\t\tuse:clickOutside={{ enabled: isFocused, handleUnselect }}\r\n\t\ton:end={handleEnd}\r\n\t\ton:focusout={handleUnselect}\r\n\t\ton:dragstart={handleDragStart}\r\n\t\tuse:asDropZone={{ TypesToAccept: { 'item/plain': 'copy' }, onDrop }}\r\n\t>\r\n\t\t<div class=\"title\"><EditableText bind:value={node.name} /></div>\r\n\t\t<!-- x: {node.x?.toFixed(1)}px; y: {node.y.toFixed(1)}px; <br />\r\n\t\twidth: {node.style.width?.toFixed(1)}px; height: {node.style.height.toFixed(1)}px; -->\r\n\t\t<!-- Container font-size: {nodeEl\r\n\t\t\t? window.getComputedStyle(nodeEl)['font-size']\r\n\t\t\t: 'Calculating size...'} -->\r\n\t\t<svelte:component this={node.component} bind:props={node.props} />\r\n\r\n\t\t{#if node?.children?.length > 0}\r\n\t\t\t{#each node.children as child}\r\n\t\t\t\t<svelte:self\r\n\t\t\t\t\tbind:node={child}\r\n\t\t\t\t\tarenaWidth={clientWidth}\r\n\t\t\t\t\tarenaHeight={clientHeight}\r\n\t\t\t\t\tbind:isDragging\r\n\t\t\t\t/>\r\n\t\t\t{/each}\r\n\t\t{/if}\r\n\r\n\t\t{#if nodeEl && isFocused}\r\n\t\t\t<!-- OnSelect Context Menu  -->\r\n\t\t\t<ContextMenu bind:node />\r\n\t\t{/if}\r\n\t</div>\r\n\r\n\t{#if nodeEl && isFocused}\r\n\t\t<!-- Handles  -->\r\n\t\t{#each directions as direction}\r\n\t\t\t<ResizeHandle\r\n\t\t\t\tbind:x={node.x}\r\n\t\t\t\tbind:y={node.y}\r\n\t\t\t\tbind:width={node.style.width}\r\n\t\t\t\tbind:height={node.style.height}\r\n\t\t\t\tbind:isDragging\r\n\t\t\t\t{maxFrameWidth}\r\n\t\t\t\t{minFrameWidth}\r\n\t\t\t\t{arenaWidth}\r\n\t\t\t\t{arenaHeight}\r\n\t\t\t\t{maxFrameHeight}\r\n\t\t\t\t{minFrameHeight}\r\n\t\t\t\t{direction}\r\n\t\t\t\t{grid}\r\n\t\t\t/>\r\n\t\t{/each}\r\n\t{/if}\r\n{/if}\r\n\r\n<style>\r\n\t/* Works, but CDNs are bad... */\r\n\t@import url('https://fonts.googleapis.com/css2?family=Permanent+Marker&display=swap');\r\n\r\n\t.title {\r\n\t\twidth: 80%;\r\n\t\theight: auto;\r\n\t\tfont-size: 1em;\r\n\t\t/* font-family: 'Luckiest Guy', cursive; */\r\n\t\tfont-family: 'Permanent Marker', cursive;\r\n\t}\r\n\t.nodeEl {\r\n\t\tbox-shadow: 0.1em 0.1em 0.5em 0em rgba(183, 183, 183, 0.5);\r\n\t\tborder-radius: 0.2em;\r\n\t\tposition: absolute;\r\n\t\tpadding: 1em;\r\n\t\tmargin: 0.5em;\r\n\t\twidth: min-content;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t@font-face {\r\n\t\tfont-family: 'Permanent Marker';\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: 400;\r\n\t\tfont-display: swap;\r\n\t\tsrc: url(./fonts/perm-marker.woff2) format('woff2');\r\n\t\tunicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,\r\n\t\t\tU+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n\t}\r\n\r\n\t@font-face {\r\n\t\tfont-family: 'Luckiest Guy';\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: 400;\r\n\t\tsrc: url(https://fonts.gstatic.com/s/luckiestguy/v17/_gP_1RrxsjcxVyin9l9n_j2hTd52.woff2)\r\n\t\t\tformat('woff2');\r\n\t\tunicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,\r\n\t\t\tU+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport Canvas from './Canvas.svelte';\r\n\timport Menu from './Menu.svelte';\r\n\timport Nodes from './Nodes.svelte';\r\n\timport Links from './Links.svelte';\r\n\timport Object from './Object.svelte';\r\n\timport Wrapper from './Wrapper.svelte';\r\n\r\n\timport { pzoom } from '@douganderson444/panzoom-node';\r\n\timport Container from './Container.svelte';\r\n\timport { scale } from './stores.js';\r\n\r\n\texport let data;\r\n\texport let width = 400;\r\n\texport let height = 600;\r\n\r\n\tlet clientWidth, clientHeight;\r\n\tlet zoomable;\r\n\r\n\tfunction handleChange(e) {\r\n\t\tlet m;\r\n\t\tconst re = /(\\w+)\\(([^)]*)\\)/g;\r\n\t\twhile ((m = re.exec(zoomable.style.transform))) {\r\n\t\t\tif (m[1] == 'scale' && parseFloat(m[2]).toFixed(2) != $scale.value.toFixed(2)) {\r\n\t\t\t\t$scale.value = parseFloat(m[2]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n{#if $scale}\r\n\t<div\r\n\t\tclass=\"canvas\"\r\n\t\tstyle=\"height: {height}px; width: {width}px;\"\r\n\t\tbind:clientWidth\r\n\t\tbind:clientHeight\r\n\t>\r\n\t\t<Menu bind:scale={$scale.value} />\r\n\r\n\t\t<div class=\"zoomable flexbox\" use:pzoom on:change={handleChange} bind:this={zoomable}>\r\n\t\t\t<Container bind:node={data} arenaWidth={clientWidth * 100} arenaHeight={clientHeight * 100} />\r\n\t\t\t<!-- <Links links={data.links} /> -->\r\n\t\t</div>\r\n\t\t<!-- <Object val={data} /> -->\r\n\t</div>\r\n{/if}\r\n\r\n<style>\r\n\t.canvas {\r\n\t\tborder: 1px solid forestgreen;\r\n\t\tmargin: 0em;\r\n\t\toverflow: hidden;\r\n\t\tmin-height: 800px;\r\n\t}\r\n\t.zoomable {\r\n\t\tborder-top: 1px dashed fuchsia;\r\n\t\tborder-left: 1px dashed fuchsia;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t}\r\n\t.flexbox {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tflex-wrap: wrap;\r\n\t\tjustify-content: flex-start;\r\n\t\talign-items: flex-start;\r\n\t\talign-content: flex-start;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\timport Sketch from '$lib/Sketch.svelte';\r\n\timport { safeid } from '$lib/utils';\r\n\timport { colors } from '$lib/config';\r\n\r\n\tlet width;\r\n\tlet height;\r\n\tlet mounted;\r\n\r\n\tlet rectColor = () => '#' + (((1 << 24) * Math.random()) | 0).toString(16);\r\n\r\n\tfunction randomColor() {\r\n\t\treturn Math.floor((Math.random() * 10) % colors.length);\r\n\t}\r\n\r\n\tlet data = {\r\n\t\tname: 'My Dashboard of Lists',\r\n\t\tid: safeid(),\r\n\t\tx: 20,\r\n\t\ty: 20,\r\n\t\tstyle: {\r\n\t\t\tbackgroundColor: colors[randomColor()],\r\n\t\t\twidth: 600,\r\n\t\t\tleft: 20,\r\n\t\t\ttop: 20,\r\n\t\t\theight: 800\r\n\t\t},\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Child 1',\r\n\t\t\t\tid: safeid(),\r\n\t\t\t\tx: 60,\r\n\t\t\t\ty: 80,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tbackgroundColor: colors[randomColor()],\r\n\t\t\t\t\twidth: 220,\r\n\t\t\t\t\theight: 520,\r\n\t\t\t\t\tleft: 20,\r\n\t\t\t\t\ttop: 20\r\n\t\t\t\t},\r\n\t\t\t\t// component: DragHandles,\r\n\t\t\t\tprops: [],\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Child A',\r\n\t\t\t\t\t\tid: safeid(),\r\n\t\t\t\t\t\tx: 20,\r\n\t\t\t\t\t\ty: 80,\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tbackgroundColor: colors[randomColor()],\r\n\t\t\t\t\t\t\twidth: 120,\r\n\t\t\t\t\t\t\theight: 120,\r\n\t\t\t\t\t\t\tleft: 20,\r\n\t\t\t\t\t\t\ttop: 20\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t// component: DragHandles,\r\n\t\t\t\t\t\tprops: [],\r\n\t\t\t\t\t\tchildren: []\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Child 2',\r\n\t\t\t\tid: safeid(),\r\n\t\t\t\tx: 300,\r\n\t\t\t\ty: 80,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tbackgroundColor: colors[randomColor()],\r\n\t\t\t\t\twidth: 100,\r\n\t\t\t\t\theight: 140,\r\n\t\t\t\t\tleft: 20,\r\n\t\t\t\t\ttop: 20\r\n\t\t\t\t},\r\n\t\t\t\t// component: DragHandles,\r\n\t\t\t\tprops: [],\r\n\t\t\t\tchildren: []\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Child 3',\r\n\t\t\t\tid: safeid(),\r\n\t\t\t\tx: 420,\r\n\t\t\t\ty: 80,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tbackgroundColor: colors[randomColor()],\r\n\t\t\t\t\twidth: 100,\r\n\t\t\t\t\theight: 160,\r\n\t\t\t\t\tleft: 20,\r\n\t\t\t\t\ttop: 20\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// component: DragHandles,\r\n\t\t\t\tprops: [],\r\n\t\t\t\tchildren: []\r\n\t\t\t}\r\n\r\n\t\t\t// {\r\n\t\t\t// \tname: 'List 2',\r\n\t\t\t// \tcomponent: Resizable,\r\n\t\t\t// \tx: 0,\r\n\t\t\t// \ty: 0,\r\n\t\t\t// \tprops: [\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item A'\r\n\t\t\t// \t\t},\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item B'\r\n\t\t\t// \t\t},\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item C'\r\n\t\t\t// \t\t}\r\n\t\t\t// \t]\r\n\t\t\t// },\r\n\t\t\t// {\r\n\t\t\t// \tname: 'List 3',\r\n\t\t\t// \tcomponent: Draggable,\r\n\t\t\t// \tprops: [\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item A'\r\n\t\t\t// \t\t},\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item B'\r\n\t\t\t// \t\t},\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item C'\r\n\t\t\t// \t\t}\r\n\t\t\t// \t]\r\n\t\t\t// },\r\n\t\t\t// {\r\n\t\t\t// \tname: 'StickyNote',\r\n\t\t\t// \tcomponent: StickyNote,\r\n\t\t\t// \tx: 0,\r\n\t\t\t// \ty: 0,\r\n\t\t\t// \tprops: [\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item A'\r\n\t\t\t// \t\t},\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item B'\r\n\t\t\t// \t\t},\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tid: safeid(),\r\n\t\t\t// \t\t\ttext: 'Item C'\r\n\t\t\t// \t\t}\r\n\t\t\t// \t]\r\n\t\t\t// }\r\n\t\t]\r\n\t};\r\n\r\n\t// let data = {\r\n\t// \tid: safeid(),\r\n\t// \tname: 'Dashboard',\r\n\t// \tcomponent: Dash,\r\n\t// \tprops: { name: 'world' },\r\n\t// \tcolor: rectColor(),\r\n\t// \tchildren: [\r\n\t// \t\t{\r\n\t// \t\t\tid: safeid(),\r\n\t// \t\t\tname: 'List 1',\r\n\t// \t\t\tcolor: rectColor(),\r\n\t// \t\t\tx: 1,\r\n\t// \t\t\ty: 1,\r\n\t// \t\t\tcomponent: DragHandles,\r\n\t// \t\t\tprops: {\r\n\t// \t\t\t\titems: [\r\n\t// \t\t\t\t\t{ id: safeid(), name: 'A', color: rectColor(), children: [] },\r\n\t// \t\t\t\t\t{ id: safeid(), name: 'B', color: rectColor(), children: [] }\r\n\t// \t\t\t\t]\r\n\t// \t\t\t},\r\n\t// \t\t\tchildren: []\r\n\t// \t\t},\r\n\t// \t\t{\r\n\t// \t\t\tid: safeid(),\r\n\t// \t\t\tname: 'List 2',\r\n\t// \t\t\tcolor: rectColor(),\r\n\t// \t\t\tx: 200,\r\n\t// \t\t\ty: 0,\r\n\t// \t\t\tcomponent: DragHandles,\r\n\t// \t\t\tprops: {\r\n\t// \t\t\t\titems: [\r\n\t// \t\t\t\t\t{ id: safeid(), name: 'C', color: rectColor(), children: [] },\r\n\t// \t\t\t\t\t{ id: safeid(), name: 'D', color: rectColor(), children: [] }\r\n\t// \t\t\t\t]\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t],\r\n\t// \tlinks: []\r\n\t// };\r\n\r\n\tlet vh;\r\n\r\n\tonMount(() => {\r\n\t\thandleViewportSize();\r\n\t});\r\n\r\n\tfunction handleViewportSize(_) {\r\n\t\tvh = window.innerHeight * 0.01;\r\n\t\theight = window.innerHeight;\r\n\t\twidth = document?.body.clientWidth; // excludes scrollbar\r\n\t}\r\n</script>\r\n\r\n<svelte:window on:resize={handleViewportSize} />\r\n\r\n<div class=\"app\" style=\"--vh: {vh}px; height: calc(var(--vh, 1vh) * 100);\">\r\n\t{#if vh}\r\n\t\t<Sketch bind:data {width} {height} />\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\t.app {\r\n\t\theight: 100vh; /* Fallback for browsers that do not support Custom Properties */\r\n\t}\r\n</style>\r\n","<script>\n\timport { onMount } from 'svelte';\n\timport App from '$lib/App.svelte';\n\n\tlet mounted;\n\n\tonMount(() => {\n\t\tmounted = true;\n\t});\n</script>\n\n{#if mounted}\n\t<App />\n{/if}\n"],"names":["size","Element","Conversion","Options","Pointer","isPointerEvent","isTouchEvent","noop","PointerTracker","ctx","children","scale","pinchZoom","params","create_if_block","_b","_a"],"mappings":"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"}